# ==============================================================================
# SWOLE TRACKER - ENVIRONMENT VARIABLES
# ==============================================================================
# 
# This file contains ALL environment variables needed for the Swole Tracker app.
# Copy this file to .env.local and fill in your actual values.
#
# DEPLOYMENT METHODS:
# üöÄ PRIMARY: GitHub Actions (production-ready CI/CD)
# üõ†Ô∏è SECONDARY: Local development deployment
# 
# For GitHub Actions, these variables are set as GitHub Secrets instead of .env
# ==============================================================================

# ==============================================================================
# üîë AUTHENTICATION & CORE SERVICES
# ==============================================================================

# WorkOS (Authentication)
# Get these from: https://dashboard.workos.com/
WORKOS_CLIENT_ID=client_01XXXXXXXXXXXXXXXXXX
WORKOS_API_KEY=insert-api-key-here


# ==============================================================================
# ‚òÅÔ∏è CLOUDFLARE CONFIGURATION
# ==============================================================================
# NOTE: For GitHub Actions deployment, these are set as GitHub Secrets
# For local development, get these values from Cloudflare Dashboard

# Cloudflare Account & API
CLOUDFLARE_ACCOUNT_ID=your_account_id_here
CLOUDFLARE_API_TOKEN=your_api_token_here

# Production Environment Resources
CLOUDFLARE_PROD_D1_DATABASE_ID=your_prod_database_id
CLOUDFLARE_PROD_RATE_LIMIT_KV_ID=your_prod_rate_limit_kv_id
CLOUDFLARE_PROD_CACHE_KV_ID=your_prod_cache_kv_id

# Staging Environment Resources
CLOUDFLARE_STAGING_D1_DATABASE_ID=your_staging_database_id
CLOUDFLARE_STAGING_RATE_LIMIT_KV_ID=your_staging_rate_limit_kv_id
CLOUDFLARE_STAGING_CACHE_KV_ID=your_staging_cache_kv_id

# Custom Domain Routes (Optional)
# Configure custom domains for your Cloudflare Workers
CLOUDFLARE_STAGING_DOMAIN=cloud.stevenduong.com
CLOUDFLARE_PROD_DOMAIN=swole.stevenduong.com

# ==============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ==============================================================================
# NOTE: This project uses Cloudflare D1 for ALL environments including development
# All database connections use D1 bindings configured in wrangler.toml
# No DATABASE_URL needed for runtime - D1 bindings handle everything

# Development Environment Resources (for local development)
CLOUDFLARE_DEV_D1_DATABASE_ID=your_dev_database_id
CLOUDFLARE_DEV_RATE_LIMIT_KV_ID=your_dev_rate_limit_kv_id
CLOUDFLARE_DEV_CACHE_KV_ID=your_dev_cache_kv_id

# Optional: Database URLs (ONLY for migration scripts if needed)
# These are rarely used since D1 migrations are handled via wrangler
DATABASE_URL=postgres://optional_for_migrations_only
STAGING_DATABASE_URL=postgres://optional_for_migrations_only  
PRODUCTION_DATABASE_URL=postgres://optional_for_migrations_only

# ==============================================================================
# üìä ANALYTICS & MONITORING
# ==============================================================================

# PostHog Analytics (Optional)
# Get these from: https://app.posthog.com/
NEXT_PUBLIC_POSTHOG_KEY=phc_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
NEXT_PUBLIC_POSTHOG_HOST=https://us.i.posthog.com

# ==============================================================================
# üèÉ‚Äç‚ôÇÔ∏è WHOOP INTEGRATION (Optional)
# ==============================================================================
# Get these from: https://developer.whoop.com/

# WHOOP Integration Variables (match env.js schema)
WHOOP_CLIENT_ID=your_whoop_client_id
WHOOP_CLIENT_SECRET=your_whoop_client_secret
WHOOP_WEBHOOK_SECRET=your_whoop_webhook_secret
WHOOP_SYNC_RATE_LIMIT_PER_HOUR=10

# ==============================================================================
# ü§ñ AI FEATURES (Optional)
# ==============================================================================

# AI Gateway (Optional)
# For AI-powered health advice and joke features
VERCEL_AI_GATEWAY_API_KEY=your_ai_gateway_api_key
AI_GATEWAY_API_KEY=your_ai_gateway_api_key
AI_GATEWAY_MODEL=xai/grok-3-mini
AI_GATEWAY_PROMPT=Tell me a short, funny programming or tech joke. Keep it clean and under 100 words.
AI_GATEWAY_JOKE_MEMORY_NUMBER=3
AI_GATEWAY_MODEL_HEALTH=xai/grok-3-mini

# ==============================================================================
# üîß DEVELOPMENT & RATE LIMITING
# ==============================================================================

# Rate Limiting Configuration (match env.js schema)
RATE_LIMIT_TEMPLATE_OPERATIONS_PER_HOUR=100
RATE_LIMIT_WORKOUT_OPERATIONS_PER_HOUR=200
RATE_LIMIT_API_CALLS_PER_MINUTE=60
RATE_LIMIT_ENABLED=true

# ==============================================================================
# üîß ENVIRONMENT & BUILD SETTINGS
# ==============================================================================

# Node Environment (affects Next.js behavior and optimizations)
# - development: Hot reload, detailed errors, dev tools enabled
# - test: For running tests (set automatically by test runners)
# - production: Optimized builds, minimal errors, performance mode
NODE_ENV=development

# Next.js Telemetry (data collection by Vercel)
# - 1: Disable telemetry collection (recommended for privacy)
# - 0: Enable telemetry collection (default)
NEXT_TELEMETRY_DISABLED=1

# Environment validation skip (for CI/Docker builds)
# - 0: Validate all env vars (recommended for development)
# - 1: Skip validation (useful for CI/Docker where not all vars are needed)
SKIP_ENV_VALIDATION=0

# Environment identifier (set automatically in deployments)
# - development: Local development with full debug info
# - staging: Pre-production environment for testing
# - production: Live environment with optimizations
ENVIRONMENT=development

# ==============================================================================
# üì± MOBILE APP CONFIGURATION (Optional)
# ==============================================================================
# Only needed if using the React Native mobile app

# Mobile API endpoints (automatically set based on environment)
NEXT_PUBLIC_API_BASE_URL=http://localhost:3000
NEXT_PUBLIC_MOBILE_API_URL=http://localhost:3000/api

# ==============================================================================
# üöÄ DEPLOYMENT CONFIGURATION
# ==============================================================================

# Additional deployment variables are set automatically by GitHub Actions
# No manual configuration needed here

# ==============================================================================
# üìã SETUP CHECKLIST
# ==============================================================================
#
# LOCAL DEVELOPMENT SETUP:
# 1. Copy this file to .env.local
# 2. Create Cloudflare D1 development database: wrangler d1 create swole-tracker-dev
# 3. Update CLOUDFLARE_DEV_D1_DATABASE_ID with the database ID from step 2
# 4. Create development KV namespaces:
#    wrangler kv namespace create "RATE_LIMIT_KV"
#    wrangler kv namespace create "CACHE_KV"
# 5. Update CLOUDFLARE_DEV_RATE_LIMIT_KV_ID and CLOUDFLARE_DEV_CACHE_KV_ID
# 6. Fill in WorkOS credentials (required for auth)
# 7. Configure PostHog analytics (optional)
# 8. Run: bun dev
#
# GITHUB ACTIONS SETUP:
# 1. Add ALL variables as GitHub Secrets (Repository Settings ‚Üí Secrets)
# 2. Create Cloudflare resources: D1 databases and KV namespaces
# 3. Generate Cloudflare API token with required permissions
# 4. Push to feature/* branch for staging deployment
# 5. Push to main branch for production deployment
#
# REQUIRED GITHUB SECRETS FOR CI/CD:
# Core Infrastructure:
# - CLOUDFLARE_API_TOKEN (API token with Workers permissions)
# - CLOUDFLARE_PROD_D1_DATABASE_ID (Production D1 database ID)
# - CLOUDFLARE_PROD_RATE_LIMIT_KV_ID (Production rate limit KV namespace)
# - CLOUDFLARE_PROD_CACHE_KV_ID (Production cache KV namespace)
# - CLOUDFLARE_STAGING_D1_DATABASE_ID (Staging D1 database ID)
# - CLOUDFLARE_STAGING_RATE_LIMIT_KV_ID (Staging rate limit KV namespace)
# - CLOUDFLARE_STAGING_CACHE_KV_ID (Staging cache KV namespace)
#
# Authentication:
# - WORKOS_CLIENT_ID (WorkOS client identifier)
# - WORKOS_API_KEY (WorkOS API key)
#
# Database URLs (for migrations only):
# - STAGING_DATABASE_URL (PostgreSQL URL for staging migrations)
# - PRODUCTION_DATABASE_URL (PostgreSQL URL for production migrations)
#
# OPTIONAL GITHUB SECRETS:
# Analytics:
# - NEXT_PUBLIC_POSTHOG_KEY (PostHog analytics key)
# - NEXT_PUBLIC_POSTHOG_HOST (PostHog host URL)
#
# WHOOP Integration:
# - WHOOP_CLIENT_ID (WHOOP OAuth client ID)
# - WHOOP_CLIENT_SECRET (WHOOP OAuth client secret)
# - WHOOP_WEBHOOK_SECRET (WHOOP webhook verification secret)
#
# AI Features:
# - VERCEL_AI_GATEWAY_API_KEY (AI Gateway API key)
# - AI_GATEWAY_API_KEY (Alternative AI Gateway key)
#
# ==============================================================================