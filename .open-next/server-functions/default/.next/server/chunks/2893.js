"use strict";exports.id=2893,exports.ids=[2893],exports.modules={15194:(a,b,c)=>{c.d(b,{JI:()=>p,LO:()=>n,OA:()=>m,dW:()=>k,sy:()=>q,t:()=>l});var d=c(97618),e=c(36043),f=c(92198),g=c(37947),h=c(58511),i=c(31553),j=c(72626);let k=async a=>{let b=crypto.randomUUID();try{let c=await h.x.get({headers:{get:b=>a.headers.get(b)}}),d=null;return c&&!h.x.isExpired(c)&&(d={id:c.userId}),{db:i.db,user:d,requestId:b,headers:a.headers}}catch(c){return console.error("tRPC context: Failed to get session:",c),{db:i.db,user:null,requestId:b,headers:a.headers}}},l=d.Al.context().create({transformer:f.Ay,errorFormatter({shape:a,error:b,ctx:c,path:d,type:e}){let f=c?.requestId,h={...a,message:(a=>{for(let b of[/invalid input syntax for type/i,/duplicate key value violates/i,/relation ".*" does not exist/i,/column ".*" does not exist/i,/database connection/i,/connection terminated/i,/authentication failed/i,/role ".*" does not exist/i,/access token/i,/refresh token/i,/client secret/i,/api key/i,/password/i,/secret/i,/encryption/i,/decrypt/i,/private key/i,/jwt/i,/bearer/i,/oauth/i])if(b.test(a))return"Operation failed. Please contact support.";return a.replace(/\/[a-zA-Z0-9_\-./]+\.(js|ts|tsx|jsx)/g,"[file]").replace(/at [a-zA-Z0-9_\-.]+\./g,"at [function].").replace(/Error: /g,"")})(a.message),data:{...a.data,requestId:f,path:d,type:e,zodError:b.cause instanceof g.G?b.cause.flatten():null}},i=a.data?.code,k="INTERNAL_SERVER_ERROR"===i?"error":"warn",l=c?.user?.id??"anonymous",m=!!process.env.VITEST;return"error"===k?(j.vF.error("tRPC internal error",b,{path:d,userId:l,requestId:f,code:i}),m&&console.error("[tRPC errorFormatter]",{path:d,userId:l,requestId:f,code:i,message:b?.message,stack:b?.stack,cause:b?.cause,shape:a})):(j.vF.warn("tRPC handled error",{path:d,userId:l,requestId:f,code:i,message:a.message}),m&&console.warn("[tRPC warnFormatter]",{path:d,userId:l,requestId:f,code:i,message:b?.message??a.message,stack:b?.stack,shape:a})),h}}),m=l.createCallerFactory,n=l.router,o=l.middleware(async({next:a,path:b,ctx:c})=>{let d=Date.now();if(l._config.isDev){let a=Math.floor(400*Math.random())+100;await new Promise(b=>setTimeout(b,a))}let e=await a(),f=Date.now(),g=c.user?.id??"anonymous",h=c.requestId;return j.vF.debug("tRPC request completed",{path:b,userId:g,requestId:h,durationMs:f-d}),(0,j.H4)(b,g,f-d),e}),p=l.procedure.use(o),q=l.procedure.use(o).use(({ctx:a,next:b})=>{if(!a.user)throw new e.gt({code:"UNAUTHORIZED"});return b({ctx:{user:a.user}})})},23879:(a,b,c)=>{c.d(b,{DA:()=>f,z_:()=>e});var d=c(59256);let e=d.Ik({session_id:d.Yj(),user_profile:d.Ik({experience_level:d.k5(["beginner","intermediate","advanced"]),min_increment_kg:d.ai().positive().optional(),preferred_rpe:d.ai().min(1).max(10).optional()}),whoop:d.Ik({recovery_score:d.ai().min(0).max(100).optional(),sleep_performance:d.ai().min(0).max(100).optional(),hrv_now_ms:d.ai().positive().optional(),hrv_baseline_ms:d.ai().positive().optional(),rhr_now_bpm:d.ai().positive().optional(),rhr_baseline_bpm:d.ai().positive().optional(),yesterday_strain:d.ai().min(0).max(21).optional()}).optional(),workout_plan:d.Ik({exercises:d.YO(d.Ik({exercise_id:d.Yj(),name:d.Yj(),tags:d.YO(d.k5(["strength","hypertrophy","endurance"])),sets:d.YO(d.Ik({set_id:d.Yj(),target_reps:d.ai().positive().optional().nullable(),target_weight_kg:d.ai().positive().optional().nullable(),target_rpe:d.ai().min(1).max(10).optional().nullable()}))}))}),prior_bests:d.Ik({by_exercise_id:d.g1(d.Yj(),d.Ik({best_total_volume_kg:d.ai().positive().optional().nullable(),best_e1rm_kg:d.ai().positive().optional().nullable()}))})}),f=d.Ik({session_id:d.Yj(),readiness:d.Ik({rho:d.ai().min(0).max(1),overload_multiplier:d.ai().min(.9).max(1.1),flags:d.YO(d.Yj())}),per_exercise:d.YO(d.Ik({exercise_id:d.Yj(),name:d.Yj().optional(),predicted_chance_to_beat_best:d.ai().min(0).max(1),planned_volume_kg:d.ai().positive().optional().nullable(),best_volume_kg:d.ai().positive().optional().nullable(),sets:d.YO(d.Ik({set_id:d.Yj(),suggested_weight_kg:d.ai().positive().optional().nullable(),suggested_reps:d.ai().positive().optional().nullable(),suggested_rest_seconds:d.ai().positive().optional().nullable(),rationale:d.Yj()}))})),session_predicted_chance:d.ai().min(0).max(1),summary:d.Yj(),warnings:d.YO(d.Yj()),recovery_recommendations:d.Ik({recommended_rest_between_sets:d.Yj(),recommended_rest_between_sessions:d.Yj(),session_duration_estimate:d.Yj().optional().nullable(),additional_recovery_notes:d.YO(d.Yj())}).optional().nullable()});d.Ik({energyLevel:d.ai().min(1).max(10),sleepQuality:d.ai().min(1).max(10),recoveryFeeling:d.ai().min(1).max(10),stressLevel:d.ai().min(1).max(10)}),d.Ik({recovery_score:d.ai().min(0).max(100).optional(),sleep_performance:d.ai().min(0).max(100).optional(),hrv_now_ms:d.ai().positive().optional(),hrv_baseline_ms:d.ai().positive().optional(),rhr_now_bpm:d.ai().positive().optional(),rhr_baseline_bpm:d.ai().positive().optional(),yesterday_strain:d.ai().min(0).max(21).optional()})},37478:(a,b,c)=>{c.d(b,{E:()=>g});var d=c(31553),e=c(30314),f=c(48689);async function g(a,b,c,h=36e5){let i=new Date,j=new Date(Math.floor(i.getTime()/h)*h),k=new Date(j.getTime()+h),[l]=await d.db.select().from(e.rateLimits).where((0,f.Uo)((0,f.eq)(e.rateLimits.user_id,a),(0,f.eq)(e.rateLimits.endpoint,b),(0,f.eq)(e.rateLimits.windowStart,j.toISOString())));if(!l)return await d.db.insert(e.rateLimits).values({user_id:a,endpoint:b,requests:1,windowStart:j.toISOString()}),{allowed:!0,remaining:c-1,resetTime:k};if(l.requests>=c){let a=Math.ceil((k.getTime()-i.getTime())/1e3);return{allowed:!1,remaining:0,resetTime:k,retryAfter:a}}return await d.db.update(e.rateLimits).set({requests:l.requests+1,updatedAt:new Date}).where((0,f.eq)(e.rateLimits.id,l.id)),{allowed:!0,remaining:c-l.requests-1,resetTime:k}}},58511:(a,b,c)=>{c.d(b,{x:()=>i});var d=c(8579);let e="workos_session",f="production"===d._.NODE_ENV;async function g(a){let b=function(){let a=d._.WORKER_SESSION_SECRET;if(!a||a.length<32)throw Error("WORKER_SESSION_SECRET must be at least 32 characters long");return a}(),c=new TextEncoder,e=await crypto.subtle.importKey("raw",c.encode(b),{name:"HMAC",hash:"SHA-256"},!1,["sign"]);return Array.from(new Uint8Array(await crypto.subtle.sign("HMAC",e,c.encode(a)))).map(a=>a.toString(16).padStart(2,"0")).join("")}async function h(a,b){return await g(a)===b}class i{static async create(a){let b=JSON.stringify({...a,refreshToken:a.refreshToken??null}),c=await g(b),d=`${b}.${c}`;return[`${e}=${encodeURIComponent(d)}`,"Max-Age=2592000","Path=/","HttpOnly",f?"Secure":"","SameSite=lax"].filter(Boolean).join("; ")}static async get(a){let b=a.headers.get("cookie");if(!b)return null;let c=this.extractCookieValue(b,e);if(!c)return null;try{let a=decodeURIComponent(c),b=a.lastIndexOf(".");if(b<=0||b===a.length-1)return null;let d=a.slice(0,b),e=a.slice(b+1);if(!await h(d,e))return null;try{let a=JSON.parse(d);if(!a.userId||!a.accessToken||!a.expiresAt)throw Error("Invalid session data");let b=void 0===a.refreshToken?null:a.refreshToken;return{...a,refreshToken:b}}catch(a){throw Error("Invalid session data format")}}catch(a){return null}}static destroy(){return[`${e}=`,"Max-Age=0","Path=/","HttpOnly",f?"Secure":"","SameSite=lax"].filter(Boolean).join("; ")}static extractCookieValue(a,b){for(let c of a.split(";").map(a=>a.trim()))if(c.startsWith(`${b}=`))return c.substring(`${b}=`.length);return null}static async hasSession(a){return null!==await this.get(a)}static isExpired(a){let b=Math.floor(Date.now()/1e3);return a.expiresAt<=b}}},82893:(a,b,c)=>{let d;c.d(b,{P:()=>aI,u:()=>aJ});var e=c(59256),f=c(15194);let g=(0,f.LO)({hello:f.JI.input(e.Ik({text:e.Yj()})).query(({input:a})=>({greeting:`Hello ${a.text}`})),getSecretMessage:f.sy.query(()=>"you can now see this secret message!")});var h=c(36043),i=c(37478),j=c(8579),k=c(72626);let l=({endpoint:a,limit:b,windowMs:c,skipIfDisabled:d=!1})=>async({ctx:e,next:f})=>{if(!j._.RATE_LIMIT_ENABLED&&d||!e.user?.id)return f();try{let d=await (0,i.E)(e.user.id,a,b,c);if(!d.allowed)throw(0,k.h4)(`Rate limit exceeded for ${a}`,e.user.id,{endpoint:a,limit:b,remaining:d.remaining,resetTime:d.resetTime}),new h.gt({code:"TOO_MANY_REQUESTS",message:`Rate limit exceeded. Try again in ${d.retryAfter} seconds.`});return k.vF.debug(`Rate limit check passed for ${a}`,{userId:e.user.id,endpoint:a,remaining:d.remaining,resetTime:d.resetTime}),f()}catch(b){if(b instanceof h.gt)throw b;return k.vF.error(`Rate limit check failed for ${a}`,b,{userId:e.user?.id,endpoint:a}),f()}},m=f.t.middleware(async({ctx:a,next:b})=>{let c=l({endpoint:"template_operations",limit:j._.RATE_LIMIT_TEMPLATE_OPERATIONS_PER_HOUR??0,windowMs:36e5,skipIfDisabled:!0});return await c({ctx:a,next:b}),b()}),n=f.t.middleware(async({ctx:a,next:b})=>{let c=l({endpoint:"workout_operations",limit:j._.RATE_LIMIT_WORKOUT_OPERATIONS_PER_HOUR??0,windowMs:36e5,skipIfDisabled:!0});return await c({ctx:a,next:b}),b()}),o=f.t.middleware(async({ctx:a,next:b})=>{let c=l({endpoint:"api_calls",limit:j._.RATE_LIMIT_API_CALLS_PER_MINUTE??0,windowMs:6e4,skipIfDisabled:!1});return await c({ctx:a,next:b}),b()});f.t.middleware(async({ctx:a,next:b})=>{let c=l({endpoint:"whoop_sync",limit:j._.WHOOP_SYNC_RATE_LIMIT_PER_HOUR??0,windowMs:36e5,skipIfDisabled:!1});return await c({ctx:a,next:b}),b()});var p=c(30314),q=c(48689),r=c(85766),s=c(69334),t=c(71559);let u=!!process.env.VITEST;function v(...a){u&&console.log("[templatesRouter]",...a)}async function w(a,b,c,d,e=!1){let f;if(e)return null;let g=c.toLowerCase().trim().replace(/\s+/g," ");v("createAndLinkMasterExercise: start",{userId:b,exerciseName:c,templateExerciseId:d,linkingRejected:e});let h=await a.select().from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.user_id,b),(0,q.eq)(p.masterExercises.normalizedName,g))).limit(1);if(v("createAndLinkMasterExercise: lookup existing",h),h.length>0)f=h[0];else{v("createAndLinkMasterExercise: inserting new master exercise");let d=await a.insert(p.masterExercises).values({user_id:b,name:c,normalizedName:g}).returning();Array.isArray(d)&&d.length>0&&(f=d[0])}if(v("createAndLinkMasterExercise: resolved masterExercise",f),f?.id==null)return v("createAndLinkMasterExercise: no masterExercise id, aborting link"),null;v("createAndLinkMasterExercise: inserting link");let i=a.insert(p.exerciseLinks).values({templateExerciseId:d,masterExerciseId:f.id,user_id:b});return"function"==typeof i.onConflictDoNothing?await i.onConflictDoNothing({target:p.exerciseLinks.templateExerciseId}):await i,v("createAndLinkMasterExercise: ensuring latest link via update"),await a.update(p.exerciseLinks).set({masterExerciseId:f.id}).where((0,q.eq)(p.exerciseLinks.templateExerciseId,d)),v("createAndLinkMasterExercise: done",{masterExerciseId:f.id}),f}let x=(0,f.LO)({getAll:f.sy.input(e.Ik({search:e.Yj().max(120).optional(),sort:e.k5(["recent","lastUsed","mostUsed","name"]).default("recent")}).optional()).query(async({ctx:a,input:b})=>{let c=b?.search?.trim(),d=b?.sort??"recent",e=c?(0,q.Uo)((0,q.eq)(p.workoutTemplates.user_id,a.user.id),(0,r.ll)`${p.workoutTemplates.name} ILIKE ${`%${c}%`}`):(0,q.eq)(p.workoutTemplates.user_id,a.user.id),f=a.db.select({template:p.workoutTemplates,lastUsed:(0,s.T9)(p.workoutSessions.workoutDate).as("lastUsed"),totalSessions:(0,s.U9)(p.workoutSessions.id).as("totalSessions")}).from(p.workoutTemplates).leftJoin(p.workoutSessions,(0,q.eq)(p.workoutTemplates.id,p.workoutSessions.templateId)).where(e);switch(f.groupBy(p.workoutTemplates.id),d){case"lastUsed":f.orderBy((0,t.i)((0,s.T9)(p.workoutSessions.workoutDate)));break;case"mostUsed":f.orderBy((0,t.i)((0,s.U9)(p.workoutSessions.id)));break;case"name":f.orderBy((0,t.Y)(p.workoutTemplates.name));break;default:f.orderBy((0,t.i)(p.workoutTemplates.createdAt))}let g=await f,h=g.map(a=>a.template.id);if(0===h.length)return[];let i=await a.db.query.workoutTemplates.findMany({where:(0,q.RV)(p.workoutTemplates.id,h),with:{exercises:{orderBy:(a,{asc:b})=>[b(a.orderIndex)]}}}),j=new Map;for(let a of g)j.set(a.template.id,{lastUsed:a.lastUsed??null,totalSessions:Number(a.totalSessions??0)});let k=new Map;return h.forEach((a,b)=>{k.has(a)||k.set(a,b)}),[...i].sort((a,b)=>(k.get(a.id)??0)-(k.get(b.id)??0)).map(a=>({...a,lastUsed:j.get(a.id)?.lastUsed??null,totalSessions:j.get(a.id)?.totalSessions??0}))}),getById:f.sy.input(e.Ik({id:e.ai()})).query(async({input:a,ctx:b})=>{let c=await b.db.query.workoutTemplates.findFirst({where:(0,q.eq)(p.workoutTemplates.id,a.id),with:{exercises:{orderBy:(a,{asc:b})=>[b(a.orderIndex)]}}});if(!c||c.user_id!==b.user.id)throw Error("Template not found");return c}),create:f.sy.use(m).input(e.Ik({name:e.Yj().min(1).max(256),exercises:e.YO(e.Yj().min(1).max(256))})).mutation(async({input:a,ctx:b})=>{v("templates.create: resolver entered",{input:a,userId:b?.user?.id,requestId:b.requestId});let c=b.user.id,d=await b.db.query.workoutTemplates.findFirst({where:(0,q.Uo)((0,q.eq)(p.workoutTemplates.user_id,c),(0,q.eq)(p.workoutTemplates.name,a.name)),orderBy:[(0,t.i)(p.workoutTemplates.createdAt)]});if(d){let a=Date.now()-d.createdAt.getTime();if(a<5e3)return v("templates.create: returning existing recent template",{templateId:d.id,timeDiff:a,requestId:b.requestId}),d}v("templates.create: creating new template",{requestId:b.requestId});let[e]=await b.db.insert(p.workoutTemplates).values({name:a.name,user_id:c}).returning();if(!e)throw Error("Failed to create template");if(v("templates.create: template created",{templateId:e.id,requestId:b.requestId}),a.exercises.length>0)for(let c of(await b.db.insert(p.templateExercises).values(a.exercises.map((a,c)=>({user_id:b.user.id,templateId:e.id,exerciseName:a,orderIndex:c,linkingRejected:!1}))).returning()))await w(b.db,b.user.id,c.exerciseName,c.id,!1);return v("templates.create: completed",{templateId:e.id,requestId:b.requestId}),e}),update:f.sy.use(m).input(e.Ik({id:e.ai(),name:e.Yj().min(1).max(256),exercises:e.YO(e.Yj().min(1).max(256))})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.workoutTemplates.findFirst({where:(0,q.eq)(p.workoutTemplates.id,a.id)});if(!c||c.user_id!==b.user.id)throw Error("Template not found");if(await b.db.update(p.workoutTemplates).set({name:a.name}).where((0,q.eq)(p.workoutTemplates.id,a.id)),await b.db.delete(p.templateExercises).where((0,q.eq)(p.templateExercises.templateId,a.id)),a.exercises.length>0)for(let c of(await b.db.insert(p.templateExercises).values(a.exercises.map((c,d)=>({user_id:b.user.id,templateId:a.id,exerciseName:c,orderIndex:d,linkingRejected:!1}))).returning()))await w(b.db,b.user.id,c.exerciseName,c.id,!1);return{success:!0}}),duplicate:f.sy.input(e.Ik({id:e.ai(),name:e.Yj().min(1).max(256).optional()})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.workoutTemplates.findFirst({where:(0,q.eq)(p.workoutTemplates.id,a.id),with:{exercises:{orderBy:(a,{asc:b})=>[b(a.orderIndex)]}}});if(!c||c.user_id!==b.user.id)throw Error("Template not found");let d=a.name?.trim()||`${c.name} Copy`,e=d;if(!a.name){let a=1;for(;await b.db.query.workoutTemplates.findFirst({where:(0,q.Uo)((0,q.eq)(p.workoutTemplates.user_id,b.user.id),(0,q.eq)(p.workoutTemplates.name,e))});)if(a+=1,e=`${d} (${a})`,a>10){e=`${d} (${Date.now()})`;break}}let[f]=await b.db.insert(p.workoutTemplates).values({name:e,user_id:b.user.id}).returning();if(!f)throw Error("Failed to duplicate template");let g=c.exercises??[];if(g.length>0)for(let a of(await b.db.insert(p.templateExercises).values(g.map(a=>({user_id:b.user.id,templateId:f.id,exerciseName:a.exerciseName,orderIndex:a.orderIndex,linkingRejected:a.linkingRejected??!1}))).returning()))await w(b.db,b.user.id,a.exerciseName,a.id,a.linkingRejected??!1);return f}),delete:f.sy.use(m).input(e.Ik({id:e.ai()})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.workoutTemplates.findFirst({where:(0,q.eq)(p.workoutTemplates.id,a.id)});if(!c||c.user_id!==b.user.id)throw Error("Template not found");return await b.db.delete(p.workoutTemplates).where((0,q.eq)(p.workoutTemplates.id,a.id)),{success:!0}})}),y=`{
  "summary": string,
  "prHighlights": Array<{
    "exerciseName": string,
    "metric": "weight" | "volume" | "reps" | "streak" | "consistency" | "readiness" | "other",
    "summary": string,
    "delta"?: number,
    "unit"?: string,
    "currentValue"?: number | string,
    "previousValue"?: number | string,
    "emoji"?: string
  }>,
  "adherenceScore"?: number,
  "focusAreas": Array<{
    "title": string,
    "description": string,
    "priority"?: "today" | "upcoming" | "longTerm",
    "actions"?: string[]
  }>,
  "streakContext"?: {
    "current": number,
    "longest"?: number,
    "message": string,
    "status"?: "building" | "hot" | "cooling" | "reset"
  },
  "overloadDigest"?: {
    "readiness"?: number,
    "recommendation"?: string,
    "nextSteps"?: string[],
    "cautionFlags"?: string[]
  },
  "metadata"?: Record<string, unknown>
}`,z=`You are an elite strength coach producing concise post-workout debriefs.
Always respond with STRICT JSON matching the output schema.
No prose outside JSON. Keep tone constructive, motivational, and data-driven.
Highlight personal records, adherence trends, and next priorities.
If data is missing, acknowledge gracefully and rely on available metrics.`,A=e.Ik({exerciseName:e.Yj(),metric:e.k5(["weight","volume","reps","streak","consistency","readiness","other"]).default("other"),summary:e.Yj(),delta:e.ai().optional(),unit:e.Yj().optional(),currentValue:e.KC([e.ai(),e.Yj()]).optional(),previousValue:e.KC([e.ai(),e.Yj()]).optional(),emoji:e.Yj().optional()}),B=e.Ik({title:e.Yj(),description:e.Yj(),priority:e.k5(["today","upcoming","longTerm"]).default("upcoming").optional(),actions:e.YO(e.Yj()).default([]).optional()}),C=e.Ik({current:e.ai().int().nonnegative(),longest:e.ai().int().nonnegative().optional(),message:e.Yj(),status:e.k5(["building","hot","cooling","reset"]).default("building").optional()}),D=e.Ik({readiness:e.ai().min(0).max(1).optional(),recommendation:e.Yj().optional(),nextSteps:e.YO(e.Yj()).default([]).optional(),cautionFlags:e.YO(e.Yj()).default([]).optional()}),E=e.Ik({summary:e.Yj(),prHighlights:e.YO(A).default([]),adherenceScore:e.ai().min(0).max(100).nullable().optional(),focusAreas:e.YO(B).default([]),streakContext:C.nullable().optional(),overloadDigest:D.nullable().optional(),metadata:e.g1(e.Yj(),e.bz()).optional()});E.extend({id:e.ai().int(),user_id:e.Yj(),sessionId:e.ai().int(),version:e.ai().int().positive(),parentDebriefId:e.ai().int().nullable(),isActive:e.zM(),regenerationCount:e.ai().int().nonnegative(),viewedAt:e.p6().nullable(),dismissedAt:e.p6().nullable(),pinnedAt:e.p6().nullable(),createdAt:e.p6(),updatedAt:e.p6().nullable()});let F=e.Ik({sessionId:e.ai().int(),debriefId:e.ai().int().optional()});function G(a,b){if(1===b)return a;if(a<=0||b<=0)return 0;if(b<=36){let c=36/(37-b)*a;if(c>0&&isFinite(c))return Math.round(100*c)/100}return Math.round(a*(1+b/30)*100)/100}function H(a,b,c){return Math.round((a||0)*(b||0)*(c||0)*100)/100}function I(a,b,c){let d=parseFloat(String(a.weight||"0")),e=a.reps||0,f=a.sets||1,g=parseFloat(String(b.weight||"0")),h=b.reps||0,i=b.sets||1;switch(c){case"weight":return d>g;case"volume":return H(f,e,d)>H(i,h,g);case"1rm":return G(d,e)>G(g,h);default:return!1}}function J(a,b){return 0===b?100*(a>0):Math.round((a-b)/b*1e4)/100}function K(a,b,c){if(b&&c)return{startDate:b,endDate:c};let d=new Date,e=new Date(d),f=new Date(d);switch(a){case"week":f.setDate(e.getDate()-7);break;case"month":f.setMonth(e.getMonth()-1);break;case"quarter":f.setMonth(e.getMonth()-3);break;case"year":f.setFullYear(e.getFullYear()-1)}return{startDate:f,endDate:e}}function L(a,b,c){let d=Math.max(1,Math.ceil((c.getTime()-b.getTime())/864e5)/7);return Math.round(a.length/d*10)/10}function M(a,b){return a.getFullYear()===b.getFullYear()&&a.getMonth()===b.getMonth()&&a.getDate()===b.getDate()}function N(a,b){let c=new Date(a);return c.setDate(c.getDate()-1),M(c,b)}let O=a=>{if(null==a)return null;let b=Number(a);return Number.isFinite(b)?b:null},P=a=>{let b=O(a);return null===b?void 0:b},Q=a=>{let b=O(a.weight),c=a.reps??null,d=a.sets??1,e=a.unit??"kg",f=H(d??1,c??0,b??0);return{setOrder:a.setOrder??0,weight:b,reps:c,sets:d,unit:e,volume:f}};async function R({dbClient:a,userId:b,sessionId:c,locale:d="en-US",timezone:e}){let f,g=await a.query.workoutSessions.findFirst({where:(0,q.eq)(p.workoutSessions.id,c),with:{template:!0,exercises:{orderBy:(a,{asc:b})=>[b(a.setOrder)]}}});if(!g||g.user_id!==b)throw Error("Workout session not found");let h=g.workoutDate??new Date,i=Array.from(new Set(g.exercises.map(a=>a.exerciseName))),j={};i.length>0&&(j=(await a.select({exerciseName:p.sessionExercises.exerciseName,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit,setOrder:p.sessionExercises.setOrder,sessionId:p.sessionExercises.sessionId}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.sessionExercises.sessionId,p.workoutSessions.id)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b),(0,q.RV)(p.sessionExercises.exerciseName,i),(0,q.ne)(p.sessionExercises.sessionId,c),(0,q.wJ)(p.workoutSessions.workoutDate,h))).orderBy((0,t.i)(p.workoutSessions.workoutDate)).limit(200)).reduce((a,b)=>{let c=a[b.exerciseName]??[];return c.push({setOrder:b.setOrder??0,weight:O(b.weight),reps:b.reps??null,sets:b.sets??1,unit:b.unit??"kg",volume:H(b.sets??1,b.reps??0,O(b.weight)??0)}),a[b.exerciseName]=c,a},{}));let l=Array.from(g.exercises.reduce((a,b)=>{let c=a.get(b.exerciseName)??{sets:[],templateExerciseId:b.templateExerciseId};return c.sets.push(b),c.templateExerciseId??=b.templateExerciseId,a.set(b.exerciseName,c),a},new Map).entries()).map(([a,b])=>((a,b,c,d)=>{let e=c.map(Q),f=e.reduce((a,b)=>a+b.volume,0),g=e.reduce((a,b)=>null!==b.weight&&(a?.weight??0)<b.weight?b:a,void 0),h=e.reduce((a,b)=>b.volume>(a?.volume??0)?b:a,void 0),i=e.map(a=>a.weight&&a.reps?G(a.weight,a.reps):null).filter(a=>null!==a),j=i.length?Math.max(...i):null,k=null,l=null,m=null;if(d.length>0){k=d.reduce((a,b)=>b.volume>a?b.volume:a,0),l=d.reduce((a,b)=>null!==b.weight&&b.weight>a?b.weight:a,0);let a=d.map(a=>a.weight&&a.reps?G(a.weight,a.reps):null).filter(a=>null!==a);m=a.length?Math.max(...a):null}let n={workoutDate:new Date,exerciseName:a,weight:g?.weight?.toString()??null,reps:g?.reps??null,sets:g?.sets??null,unit:g?.unit??"kg"},o=l?{workoutDate:new Date,exerciseName:a,weight:l.toString(),reps:g?.reps??null,sets:g?.sets??null,unit:g?.unit??"kg"}:null,p=[];return o&&(g?.weight&&o.weight&&I(n,o,"weight")&&g.weight>(l??0)&&p.push("weight"),h&&k&&I(n,{workoutDate:new Date,exerciseName:a,weight:(l??0).toString(),reps:h.reps??null,sets:h.sets??null,unit:h.unit},"volume")&&p.push("volume"),j&&m&&I(n,{workoutDate:new Date,exerciseName:a,weight:(l??0).toString(),reps:g?.reps??null,sets:g?.sets??null,unit:g?.unit??"kg"},"1rm")&&p.push("oneRM")),{exerciseName:a,templateExerciseId:b,totalVolume:f,estimatedOneRm:j,bestWeight:g?.weight??null,bestReps:g?.reps??null,sets:e.sort((a,b)=>a.setOrder-b.setOrder),prFlags:p,previousBest:{volume:k,bestWeight:l,estimatedOneRm:m}}})(a,b.templateExerciseId??null,b.sets,j[a]??[])),m=l.reduce((a,b)=>a+b.totalVolume,0),n=l.filter(a=>a.prFlags.length>0),o=new Date(h);o.setDate(o.getDate()-6);let r=new Date(h);r.setDate(r.getDate()-27);let s=await a.select({workoutDate:p.workoutSessions.workoutDate}).from(p.workoutSessions).where((0,q.Uo)((0,q.eq)(p.workoutSessions.user_id,b),(0,q.wJ)(p.workoutSessions.workoutDate,h))).orderBy((0,t.i)(p.workoutSessions.workoutDate)).limit(90),u=s.filter(a=>a.workoutDate>=o&&a.workoutDate<=h).length,v=s.filter(a=>a.workoutDate>=r&&a.workoutDate<=h).length,w=v/4,x=100*Math.min(1,w/3),y=function(a){if(!a||0===a.length)return{current:0,longest:0};let b=a.map(a=>new Date(a)).sort((a,b)=>b.getTime()-a.getTime()),c=0,d=0,e=1,f=new Date,g=new Date(f);g.setDate(g.getDate()-1);let h=b[0];if(!h)return{current:0,longest:0};if(M(h,f)||M(h,g)){c=1;for(let a=1;a<b.length;a++){let d=b[a-1],e=b[a];if(d&&e&&N(d,e))c++;else break}}for(let a=1;a<b.length;a++){let c=b[a-1],f=b[a];c&&f&&N(c,f)?e++:(d=Math.max(d,e),e=1)}return{current:c,longest:d=Math.max(d,e),lastWorkoutDate:h}}(s.map(a=>new Date(a.workoutDate))),z=await a.query.sessionDebriefs.findFirst({where:(0,q.Uo)((0,q.eq)(p.sessionDebriefs.user_id,b),(0,q.eq)(p.sessionDebriefs.sessionId,c),(0,q.eq)(p.sessionDebriefs.isActive,!0)),orderBy:(a,{desc:b})=>[b(a.version)]}),A=null;if(z){let a=E.safeParse({summary:z.summary,prHighlights:z.prHighlights??void 0,adherenceScore:z.adherenceScore??void 0,focusAreas:z.focusAreas??void 0,streakContext:z.streakContext??void 0,overloadDigest:z.overloadDigest??void 0,metadata:z.metadata??void 0});a.success&&(A=a.data)}let B=await a.query.healthAdvice.findFirst({where:(0,q.Uo)((0,q.eq)(p.healthAdvice.user_id,b),(0,q.eq)(p.healthAdvice.sessionId,c))});if(B?.response&&"object"==typeof B.response)try{let a=B.response.readiness?.rho,b=B.response.readiness?.overload_multiplier,c=B.response.summary,d=Array.isArray(B.response.readiness?.flags)?B.response.readiness.flags:void 0;f={readinessScore:P(a),overloadMultiplier:P(b),summary:"string"==typeof c?c:void 0,focusFlags:d}}catch(a){k.vF.warn("Failed to parse health advice response for debrief",{sessionId:c,userId:b,error:a})}let C=(()=>{let a=g.template;if(a&&"object"==typeof a&&!Array.isArray(a)&&"string"==typeof a.name){let b=a.name.trim();if(b.length>0)return b}return"Workout"})();return{context:{sessionId:c,sessionDate:h.toISOString(),templateName:C,totalExercises:l.length,totalVolume:m,exercises:l,prHighlights:n,adherence:{sessionsLast7Days:u,sessionsLast28Days:v,weeklyFrequency:Number(w.toFixed(2)),rollingCompliance:Math.round(x)},streak:{current:y.current??0,longest:y.longest??0,lastWorkoutDate:y.lastWorkoutDate?.toISOString()},healthAdvice:f,previousDebrief:A??null},locale:d,timezone:e}}class S extends Error{constructor(a){super(a),this.name="AIDebriefRateLimitError"}}async function T({dbClient:a,userId:b,sessionId:d,locale:e,timezone:f,skipIfActive:g=!1,trigger:h="auto",requestId:i}){let l,m=await a.query.sessionDebriefs.findFirst({where:(0,q.Uo)((0,q.eq)(p.sessionDebriefs.user_id,b),(0,q.eq)(p.sessionDebriefs.sessionId,d),(0,q.eq)(p.sessionDebriefs.isActive,!0)),orderBy:(a,{desc:b})=>[b(a.version)]});if(g&&m)return k.vF.info("session_debrief.skip_generate",{userId:b,sessionId:d,reason:"active_exists",requestId:i}),{debrief:m,content:null};let n=await R({dbClient:a,userId:b,sessionId:d,locale:e,timezone:f}),{system:o,prompt:r}=function(a){let{context:b,locale:c,timezone:d}=a;return{system:z,prompt:[`LOCALE: ${c}${d?` | TIMEZONE: ${d}`:""}`,"SESSION CONTEXT:",JSON.stringify({...b,exercises:b.exercises.map(a=>({...a,sets:a.sets.map(a=>({...a,intensity:"number"==typeof a.intensity?a.intensity:void 0}))})),adherence:b.adherence,streak:b.streak,healthAdvice:b.healthAdvice??void 0,previousDebrief:b.previousDebrief??void 0},null,2),"OUTPUT SCHEMA (follow exactly):",y,"RESPONSE REQUIREMENTS:","- Provide summary under 120 words.","- Reference at most 3 PR highlights; if none, explain status.","- Give 2-3 focus areas with actionable guidance.","- If readiness data missing, skip overload recommendations.",'- Populate metadata with useful tags such as { "confidence": number } when relevant.'].join("\n\n")}}(n),s=j._.AI_DEBRIEF_MODEL||j._.AI_GATEWAY_MODEL_HEALTH;if(!s)throw Error("AI model for debrief generation is not configured");let u=Number(j._.AI_DEBRIEF_TEMPERATURE??.7),{generateText:v}=await c.e(9628).then(c.bind(c,39628)),w="";try{w=(await v({model:s,system:o,prompt:r,temperature:u})).text}catch(c){let a=c?.name==="GatewayRateLimitError"||c?.message?.toLowerCase().includes("free credits")||c?.message?.includes("rate limit")||c?.status===429;if(k.vF.error("session_debrief.ai_call_failed",c,{userId:b,sessionId:d,modelId:s,requestId:i}),a)throw new S("AI generation is temporarily rate limited. Please try again soon.");throw c}try{l=JSON.parse(w)}catch(a){throw k.vF.error("session_debrief.invalid_json",a,{userId:b,sessionId:d,snippet:w.slice(0,200),requestId:i}),Error("AI response was not valid JSON")}let x=E.parse(l),A=await a.transaction(async a=>{let c=await a.select({version:p.sessionDebriefs.version}).from(p.sessionDebriefs).where((0,q.Uo)((0,q.eq)(p.sessionDebriefs.user_id,b),(0,q.eq)(p.sessionDebriefs.sessionId,d))).orderBy((0,t.i)(p.sessionDebriefs.version)).limit(1),e=(c[0]?.version??0)+1;m&&await a.update(p.sessionDebriefs).set({isActive:!1}).where((0,q.eq)(p.sessionDebriefs.id,m.id));let f={...x.metadata??{},generatedAt:new Date().toISOString(),trigger:h},g={user_id:b,sessionId:d,version:e,summary:x.summary,isActive:!0,regenerationCount:m?m.regenerationCount+ +("regenerate"===h):+("regenerate"===h)};m?.id&&(g.parentDebriefId=m.id),Array.isArray(x.prHighlights)&&x.prHighlights.length>0&&(g.prHighlights=JSON.stringify(x.prHighlights)),"number"==typeof x.adherenceScore&&(g.adherenceScore=x.adherenceScore),Array.isArray(x.focusAreas)&&x.focusAreas.length>0&&(g.focusAreas=JSON.stringify(x.focusAreas)),x.streakContext&&"object"==typeof x.streakContext&&(g.streakContext=JSON.stringify(x.streakContext)),x.overloadDigest&&"object"==typeof x.overloadDigest&&(g.overloadDigest=JSON.stringify(x.overloadDigest)),f&&(g.metadata=JSON.stringify(f));let[i]=await a.insert(p.sessionDebriefs).values(g).returning();return i});if(!A)throw Error("Failed to persist session debrief");return k.vF.info("session_debrief.generated",{userId:b,sessionId:d,debriefId:A.id,version:A.version,trigger:h,requestId:i}),{debrief:A,content:x,context:n.context}}let U=e.Ik({id:e.Yj(),weight:e.ai().optional(),reps:e.ai().int().positive().optional(),sets:e.ai().int().positive().default(1),unit:e.k5(["kg","lbs"]).default("kg"),rpe:e.ai().int().min(1).max(10).optional(),rest:e.ai().int().positive().optional(),isEstimate:e.zM().optional(),isDefaultApplied:e.zM().optional()}),V=e.Ik({templateExerciseId:e.ai().optional(),exerciseName:e.Yj().min(1).max(256),sets:e.YO(U),unit:e.k5(["kg","lbs"]).default("kg")}),W=(0,f.LO)({getRecent:f.sy.input(e.Ik({limit:e.ai().int().positive().default(10)})).query(async({input:a,ctx:b})=>(k.vF.debug("Getting recent workouts",{limit:a.limit}),b.db.query.workoutSessions.findMany({where:(0,q.eq)(p.workoutSessions.user_id,b.user.id),orderBy:[(0,t.i)(p.workoutSessions.workoutDate)],limit:a.limit,with:{template:{with:{exercises:!0}},exercises:!0}}))),getById:f.sy.input(e.Ik({id:e.ai()})).query(async({input:a,ctx:b})=>{let c=await b.db.query.workoutSessions.findFirst({where:(0,q.eq)(p.workoutSessions.id,a.id),with:{template:{with:{exercises:!0}},exercises:!0}});if(!c||c.user_id!==b.user.id)throw Error("Workout not found");return c}),getLastExerciseData:f.sy.input(e.Ik({exerciseName:e.Yj(),templateId:e.ai().optional(),excludeSessionId:e.ai().optional(),templateExerciseId:e.ai().optional()})).query(async({input:a,ctx:b})=>{let c=[a.exerciseName];if(a.templateExerciseId){let d=await b.db.query.exerciseLinks.findFirst({where:(0,q.eq)(p.exerciseLinks.templateExerciseId,a.templateExerciseId),with:{masterExercise:!0}});if(d){let a=(await b.db.query.exerciseLinks.findMany({where:(0,q.eq)(p.exerciseLinks.masterExerciseId,d.masterExerciseId),with:{templateExercise:!0}})).map(a=>{let b=a.templateExercise;return b&&"object"==typeof b&&!Array.isArray(b)&&"string"==typeof b.exerciseName?b.exerciseName:null}).filter(a=>"string"==typeof a);a.length>0&&(c=a)}}let d=[(0,q.eq)(p.workoutSessions.user_id,b.user.id)];a.excludeSessionId&&d.push((0,q.ne)(p.workoutSessions.id,a.excludeSessionId));let e=1===c.length?(0,q.eq)(p.sessionExercises.exerciseName,c[0]):(0,q.RV)(p.sessionExercises.exerciseName,c),f=(await b.db.query.workoutSessions.findMany({where:(0,q.Uo)(...d),orderBy:[(0,t.i)(p.workoutSessions.workoutDate)],with:{exercises:{where:e}},limit:50})).find(a=>a.exercises.length>0);if(!f)return null;let g=f.exercises.sort((a,b)=>(a.setOrder??0)-(b.setOrder??0)).map((a,b)=>({id:`prev-${b}`,weight:a.weight||void 0,reps:a.reps,sets:a.sets??1,unit:a.unit})),h=Math.max(...g.map(a=>a.weight??0)),i=g.find(a=>a.weight===h);return{sets:g,best:i?{weight:i.weight,reps:i.reps,sets:i.sets,unit:i.unit}:void 0}}),getLatestPerformanceForTemplateExercise:f.sy.input(e.Ik({templateExerciseId:e.ai(),excludeSessionId:e.ai().optional()})).query(async({input:a,ctx:b})=>{let c=await b.db.select({masterExerciseId:p.exerciseLinks.masterExerciseId}).from(p.exerciseLinks).where((0,q.Uo)((0,q.eq)(p.exerciseLinks.templateExerciseId,a.templateExerciseId),(0,q.eq)(p.exerciseLinks.user_id,b.user.id))).limit(1);if(0===c.length){let c=await b.db.select({exerciseName:p.templateExercises.exerciseName}).from(p.templateExercises).where((0,q.Uo)((0,q.eq)(p.templateExercises.id,a.templateExerciseId),(0,q.eq)(p.templateExercises.user_id,b.user.id))).limit(1);if(0===c.length)return null;let d=[(0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,c[0].exerciseName)];a.excludeSessionId&&d.push((0,q.ne)(p.sessionExercises.sessionId,a.excludeSessionId));let e=await b.db.select({sessionId:p.sessionExercises.sessionId,workoutDate:p.workoutSessions.workoutDate}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)(...d)).orderBy((0,t.i)(p.workoutSessions.workoutDate)).limit(1);return 0===e.length?null:(await b.db.select({weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit,workoutDate:p.workoutSessions.workoutDate}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,c[0].exerciseName),(0,q.eq)(p.sessionExercises.sessionId,e[0].sessionId))).orderBy((0,t.i)(p.sessionExercises.weight)).limit(1))[0]??null}let d=c[0].masterExerciseId,e=await b.db.select({id:p.templateExercises.id}).from(p.templateExercises).innerJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).where((0,q.Uo)((0,q.eq)(p.exerciseLinks.masterExerciseId,d),(0,q.eq)(p.templateExercises.user_id,b.user.id)));if(0===e.length)return null;let f=e.map(a=>a.id),g=[(0,q.eq)(p.sessionExercises.user_id,b.user.id)];if(!(f.length>0))return null;g.push((0,q.RV)(p.sessionExercises.templateExerciseId,f)),a.excludeSessionId&&g.push((0,q.ne)(p.sessionExercises.sessionId,a.excludeSessionId));let h=await b.db.select({sessionId:p.sessionExercises.sessionId,workoutDate:p.workoutSessions.workoutDate}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)(...g)).orderBy((0,t.i)(p.workoutSessions.workoutDate)).limit(1);return 0===h.length?null:(await b.db.select({weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit,workoutDate:p.workoutSessions.workoutDate}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.RV)(p.sessionExercises.templateExerciseId,f),(0,q.eq)(p.sessionExercises.sessionId,h[0].sessionId))).orderBy((0,t.i)(p.sessionExercises.weight)).limit(1))[0]??null}),start:f.sy.use(n).input(e.Ik({templateId:e.ai(),workoutDate:e.p6().default(()=>new Date)})).mutation(async({input:a,ctx:b})=>{try{k.vF.debug("Starting workout session",{templateId:a.templateId});let c=await b.db.query.workoutSessions.findFirst({where:(0,q.Uo)((0,q.eq)(p.workoutSessions.user_id,b.user.id),(0,q.eq)(p.workoutSessions.templateId,a.templateId),(0,q.RO)(p.workoutSessions.workoutDate,new Date(Date.now()-12e4))),orderBy:[(0,t.i)(p.workoutSessions.workoutDate)],with:{exercises:!0}});if(c&&0===c.exercises.length){k.vF.debug("Returning existing recent session",{sessionId:c.id});let d=await b.db.query.workoutTemplates.findFirst({where:(0,q.eq)(p.workoutTemplates.id,a.templateId),with:{exercises:{orderBy:(a,{asc:b})=>[b(a.orderIndex)]}}});return{sessionId:c.id,template:d}}let d=await b.db.query.workoutTemplates.findFirst({where:(0,q.eq)(p.workoutTemplates.id,a.templateId),with:{exercises:{orderBy:(a,{asc:b})=>[b(a.orderIndex)]}}});if(k.vF.debug("Found template",{templateId:d?.id}),!d||d.user_id!==b.user.id)throw Error("Template not found");k.vF.debug("Inserting workout session");let[e]=await b.db.insert(p.workoutSessions).values({user_id:b.user.id,templateId:a.templateId,workoutDate:a.workoutDate}).returning();if(k.vF.debug("Inserted session",{sessionId:e?.id}),!e)throw Error("Failed to create workout session");let f={sessionId:e.id,template:d};return k.vF.debug("Start workout complete",{sessionId:f.sessionId}),f}catch(e){let{TRPCError:a}=await c.e(2306).then(c.bind(c,2306)),b=e?.message??"workouts.start failed",d={name:e?.name,cause:e?.cause,stack:e?.stack,err:e};throw k.vF.error("Start workout error",Error(b),d),new a({code:"INTERNAL_SERVER_ERROR",message:b,cause:d})}}),save:f.sy.use(n).input(e.Ik({sessionId:e.ai(),exercises:e.YO(V)})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.workoutSessions.findFirst({where:(0,q.eq)(p.workoutSessions.id,a.sessionId)});if(!c||c.user_id!==b.user.id)throw Error("Workout session not found");await b.db.delete(p.sessionExercises).where((0,q.eq)(p.sessionExercises.sessionId,a.sessionId));let d=a.exercises.flatMap(c=>c.sets.filter(a=>void 0!==a.weight||void 0!==a.reps||void 0!==a.sets||void 0!==a.rpe||void 0!==a.rest).map((d,e)=>({user_id:b.user.id,sessionId:a.sessionId,templateExerciseId:c.templateExerciseId,exerciseName:c.exerciseName,setOrder:e,weight:d.weight,reps:d.reps,sets:d.sets,unit:d.unit,rpe:d.rpe,rest_seconds:d.rest,is_estimate:d.isEstimate??!1,is_default_applied:d.isDefaultApplied??!1})));if(d.length>0&&await b.db.insert(p.sessionExercises).values(d),d.length>0){let c=b.headers.get("accept-language")??void 0,d=c?.split(",")[0];(async()=>{try{await T({dbClient:b.db,userId:b.user.id,sessionId:a.sessionId,locale:d,trigger:"auto",requestId:b.requestId})}catch(c){k.vF.warn("session_debrief.auto_generation_failed",{userId:b.user.id,sessionId:a.sessionId,error:c instanceof Error?c.message:"unknown"})}})()}return{success:!0}}),updateSessionSets:f.sy.use(n).input(e.Ik({sessionId:e.ai(),updates:e.YO(e.Ik({setId:e.Yj(),exerciseName:e.Yj(),setIndex:e.ai().int().min(0).optional(),weight:e.ai().optional(),reps:e.ai().int().positive().optional(),unit:e.k5(["kg","lbs"]).default("kg")}))})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.workoutSessions.findFirst({where:(0,q.eq)(p.workoutSessions.id,a.sessionId),with:{exercises:{orderBy:[p.sessionExercises.setOrder]}}});if(!c||c.user_id!==b.user.id)throw Error("Workout session not found");let d=0;for(let e of a.updates){let a;if(console.log(`Processing update for setId: ${e.setId}, exerciseName: ${e.exerciseName}`),void 0!==e.setIndex)a=e.setIndex,console.log(`Using provided setIndex: ${a}`);else{let b=/_set_(\d+)$/.exec(e.setId);if(!b?.[1]){console.warn(`Invalid setId format: ${e.setId}`);continue}a=parseInt(b[1])-1,console.log(`Parsed setIndex from setId: ${a} (from ${b[1]})`)}let f=c.exercises.filter(a=>a.exerciseName===e.exerciseName);if(console.log(`Found ${f.length} matching exercises for ${e.exerciseName}`),a>=0&&a<f.length){let c=f[a];c&&(console.log(`Updating exercise ID ${c.id} with weight: ${e.weight}, reps: ${e.reps}`),await b.db.update(p.sessionExercises).set({weight:e.weight,reps:e.reps,unit:e.unit}).where((0,q.eq)(p.sessionExercises.id,c.id)),d++,console.log(`Successfully updated set ${c.id}`))}else console.warn(`Set index ${a} out of range for exercise ${e.exerciseName}. Available sets: ${f.length}`)}return{success:!0,updatedCount:d}}),delete:f.sy.use(n).input(e.Ik({id:e.ai()})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.workoutSessions.findFirst({where:(0,q.eq)(p.workoutSessions.id,a.id)});if(!c||c.user_id!==b.user.id)throw Error("Workout session not found");return await b.db.delete(p.workoutSessions).where((0,q.eq)(p.workoutSessions.id,a.id)),{success:!0}})});var X=c(26961);e.KC([e.Yj().min(1),e.ai()]),e.Yj().min(1,"userId is required"),e.Ik({limit:e.ai().int().positive().max(100).default(20),cursor:e.KC([e.Yj(),e.ai()]).optional()}),e.Ik({from:X.p6(),to:X.p6()}).refine(a=>a.from<=a.to,{message:"from must be before to"}),X.zM(),e.Ik({field:e.Yj(),direction:e.k5(["asc","desc"]).default("desc")});let Y=e.k5(["kg","lbs"]);e.Ik({unit:Y.optional()});let Z=e.k5(["week","month","quarter","year"]).default("quarter"),$=e.Ik({exerciseName:e.Yj().min(1,"Exercise name is required"),timeRange:Z,startDate:X.p6().optional(),endDate:X.p6().optional()}),_=e.Ik({timeRange:Z,limit:e.ai().int().positive().max(50).default(10),startDate:X.p6().optional(),endDate:X.p6().optional()}),aa=(0,f.LO)({get:f.sy.query(async({ctx:a})=>{let b=await a.db.query.userPreferences.findFirst({where:(0,q.eq)(p.userPreferences.user_id,a.user.id)});return b||{defaultWeightUnit:"kg",predictive_defaults_enabled:!1,right_swipe_action:"collapse_expand",enable_manual_wellness:!1,progression_type:"adaptive",linear_progression_kg:"2.5",percentage_progression:"2.5"}}),update:f.sy.input(e.KC([Y,e.Ik({defaultWeightUnit:Y.optional(),predictive_defaults_enabled:e.zM().optional(),right_swipe_action:e.k5(["collapse_expand","none"]).optional(),enable_manual_wellness:e.zM().optional(),progression_type:e.k5(["linear","percentage","adaptive"]).optional(),linear_progression_kg:e.Yj().optional(),percentage_progression:e.Yj().optional()})]).transform(a=>"string"==typeof a?{defaultWeightUnit:a}:{defaultWeightUnit:a.defaultWeightUnit,predictive_defaults_enabled:a.predictive_defaults_enabled,right_swipe_action:a.right_swipe_action,enable_manual_wellness:a.enable_manual_wellness,progression_type:a.progression_type,linear_progression_kg:a.linear_progression_kg,percentage_progression:a.percentage_progression})).mutation(async({input:a,ctx:b})=>{let c=await b.db.query.userPreferences.findFirst({where:(0,q.eq)(p.userPreferences.user_id,b.user.id)}),d={};return void 0!==a.defaultWeightUnit&&(d.defaultWeightUnit=a.defaultWeightUnit),void 0!==a.predictive_defaults_enabled&&(d.predictive_defaults_enabled=a.predictive_defaults_enabled),void 0!==a.right_swipe_action&&(d.right_swipe_action=a.right_swipe_action),void 0!==a.enable_manual_wellness&&(d.enable_manual_wellness=a.enable_manual_wellness),void 0!==a.progression_type&&(d.progression_type=a.progression_type),void 0!==a.linear_progression_kg&&(d.linear_progression_kg=parseFloat(a.linear_progression_kg)),void 0!==a.percentage_progression&&(d.percentage_progression=parseFloat(a.percentage_progression)),c?Object.keys(d).length>0&&await b.db.update(p.userPreferences).set(d).where((0,q.eq)(p.userPreferences.user_id,b.user.id)):await b.db.insert(p.userPreferences).values({user_id:b.user.id,defaultWeightUnit:a.defaultWeightUnit??"kg",predictive_defaults_enabled:a.predictive_defaults_enabled??!1,right_swipe_action:a.right_swipe_action??"collapse_expand",enable_manual_wellness:a.enable_manual_wellness??!1,progression_type:a.progression_type??"adaptive",linear_progression_kg:a.linear_progression_kg?parseFloat(a.linear_progression_kg):2.5,percentage_progression:a.percentage_progression?parseFloat(a.percentage_progression):2.5}),{success:!0}})}),ab={"xai/grok-3-mini":"XAI Grok 3 Mini","xai/grok-beta":"XAI Grok Beta","google/gemini-2.0-flash-lite":"Google Gemini 2.0 Flash Lite","google/gemini-1.5-pro":"Google Gemini 1.5 Pro","openai/gpt-4o":"OpenAI GPT-4o","openai/gpt-4o-mini":"OpenAI GPT-4o Mini","openai/gpt-3.5-turbo":"OpenAI GPT-3.5 Turbo","anthropic/claude-3-5-sonnet-20241022":"Anthropic Claude 3.5 Sonnet","meta/llama-3.1-405b-instruct":"Meta Llama 3.1 405B"};async function ac(a){let b=j._.AI_GATEWAY_PROMPT??"Tell me a joke";try{let d,e=j._.AI_GATEWAY_JOKE_MEMORY_NUMBER??3,f=await a.db.select({joke:p.dailyJokes.joke}).from(p.dailyJokes).where((0,q.eq)(p.dailyJokes.user_id,a.user.id)).orderBy((0,t.i)(p.dailyJokes.createdAt)).limit(e);if(f.length>0){let a=f.map(a=>a.joke).join(", ");b=`${j._.AI_GATEWAY_PROMPT??"Tell me a joke"}. Previous jokes: ${a}`}let g=j._.AI_GATEWAY_MODEL??process.env.AI_GATEWAY_MODEL??"openai/gpt-4o-mini";"gpt-4o-mini"===g&&(g="openai/gpt-4o-mini");let h=function(a){let b=ab[a];return{id:a,name:b||"Unknown Model",isSupported:!!b}}(g),i=j._.AI_GATEWAY_ENABLED,k=!!j._.VERCEL_AI_GATEWAY_API_KEY||!!process.env.VERCEL_AI_GATEWAY_API_KEY,l=!1!==i&&"false"!==i&&(!0===i||"true"===i||k);if(!l)return console.log("Vercel AI Gateway not configured, using fallback joke"),{joke:"Vercel AI Gateway not configured. Here's a classic: Why did the computer go to the doctor? Because it had a virus!",createdAt:new Date,isFromCache:!1};if(console.log("\uD83D\uDE80 Generating new joke with Vercel AI Gateway..."),console.log("\uD83D\uDCF1 Model:",`${h.name} (${h.id})`),console.log("\uD83D\uDCAC Enhanced Prompt:",(b??"").substring(0,100)+"..."),console.log("\uD83E\uDDE0 Memory: Using",f.length,"previous jokes"),console.log("\uD83D\uDE80 Calling AI Gateway for fresh joke..."),l){let{generateText:a}=await c.e(9628).then(c.bind(c,39628)),b=await a({model:g,prompt:f.length>0?`${j._.AI_GATEWAY_PROMPT??"Tell a short fitness-themed joke."}. Previous jokes: ${f.map(a=>a.joke).join(", ")}`:j._.AI_GATEWAY_PROMPT??"Tell a short fitness-themed joke."});if(!(d=b?.text))throw Error("No content generated from AI Gateway")}let m=(d??"").trim(),n=(await a.db.insert(p.dailyJokes).values({user_id:a.user.id,joke:m,aiModel:g,prompt:b}).returning())[0];if(!n)throw Error("Failed to save joke to database");return{joke:m,createdAt:n.createdAt,isFromCache:!1}}catch(b){let a=b instanceof Error?b.message:"Unknown error";return{joke:`AI generation failed: ${a}`,createdAt:new Date,isFromCache:!1}}}let ad=(0,f.LO)({getCurrent:f.sy.query(async({ctx:a})=>{console.log("jokesRouter.getCurrent called for user:",a.user.id),console.log("\uD83D\uDD04 Generating fresh joke on browser refresh...");try{let b=await ac(a);if("string"==typeof b?.joke&&b.joke.startsWith("AI generation failed"))return{joke:"Error loading joke. Here's a backup: Why don't programmers like nature? It has too many bugs!",createdAt:new Date,isFromCache:!1};return"string"==typeof b?.joke&&b.joke.startsWith("Vercel AI Gateway not configured"),b}catch{return{joke:"Error loading joke. Here's a backup: Why don't programmers like nature? It has too many bugs!",createdAt:new Date,isFromCache:!1}}}),generateNew:f.sy.mutation(async({ctx:a})=>await ac(a)),clearCache:f.sy.mutation(async({ctx:a})=>(await a.db.delete(p.dailyJokes).where((0,q.eq)(p.dailyJokes.user_id,a.user.id)),{success:!0}))}),ae=(0,f.LO)({getIntegrationStatus:f.sy.query(async({ctx:a})=>{try{let[b]=await a.db.select({isActive:p.userIntegrations.isActive,createdAt:p.userIntegrations.createdAt,expiresAt:p.userIntegrations.expiresAt,scope:p.userIntegrations.scope}).from(p.userIntegrations).where((0,q.Uo)((0,q.eq)(p.userIntegrations.user_id,a.user.id),(0,q.eq)(p.userIntegrations.provider,"whoop"))),c=new Date,d=!!b?.expiresAt&&new Date(b.expiresAt).getTime()<c.getTime();return{isConnected:!!b?.isActive&&!d,connectedAt:b?.createdAt||null,expiresAt:b?.expiresAt||null,isExpired:d,scope:b?.scope||null}}catch(a){throw console.error("Failed to fetch WHOOP integration status:",a),new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to check WHOOP integration status. Please try again later."})}}),getWorkouts:f.sy.query(async({ctx:a})=>{try{return await a.db.select({id:p.externalWorkoutsWhoop.id,whoopWorkoutId:p.externalWorkoutsWhoop.whoopWorkoutId,start:p.externalWorkoutsWhoop.start,end:p.externalWorkoutsWhoop.end,sport_name:p.externalWorkoutsWhoop.sport_name,score_state:p.externalWorkoutsWhoop.score_state,score:p.externalWorkoutsWhoop.score,during:p.externalWorkoutsWhoop.during,zone_duration:p.externalWorkoutsWhoop.zone_duration,createdAt:p.externalWorkoutsWhoop.createdAt}).from(p.externalWorkoutsWhoop).where((0,q.eq)(p.externalWorkoutsWhoop.user_id,a.user.id)).orderBy((0,t.i)(p.externalWorkoutsWhoop.start))}catch(a){throw console.error("Failed to fetch WHOOP workouts:",a),new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch WHOOP workouts. Please try again later."})}}),disconnectIntegration:f.sy.mutation(async({ctx:a})=>(await a.db.update(p.userIntegrations).set({isActive:!1,updatedAt:new Date}).where((0,q.Uo)((0,q.eq)(p.userIntegrations.user_id,a.user.id),(0,q.eq)(p.userIntegrations.provider,"whoop"))),{success:!0})),getWebhookInfo:f.sy.query(async({ctx:a})=>({webhookUrl:process.env.VERCEL_URL?`https://${process.env.VERCEL_URL}/api/webhooks/whoop`:`${process.env.NEXTAUTH_URL||"http://localhost:3000"}/api/webhooks/whoop`,isConfigured:!!process.env.WHOOP_WEBHOOK_SECRET,supportedEvents:["workout.updated","recovery.updated","sleep.updated","cycle.updated","body_measurement.updated","user_profile.updated"],instructions:["1. Go to your Whoop Developer Dashboard","2. Navigate to your app settings","3. Add the webhook URL above",'4. Select "v2" model version for UUID support and expanded event types',"5. Subscribe to the events you want to receive (all supported events listed above)","6. Set your app secret as WHOOP_WEBHOOK_SECRET environment variable","7. Save the configuration"]})),getLatestRecoveryData:f.sy.query(async({ctx:a})=>{let[b]=await a.db.select({isActive:p.userIntegrations.isActive,expiresAt:p.userIntegrations.expiresAt}).from(p.userIntegrations).where((0,q.Uo)((0,q.eq)(p.userIntegrations.user_id,a.user.id),(0,q.eq)(p.userIntegrations.provider,"whoop")));if(!b?.isActive)throw new h.gt({code:"NOT_FOUND",message:"WHOOP integration not found or inactive"});let c=new Date;if(b.expiresAt&&new Date(b.expiresAt).getTime()<c.getTime())throw new h.gt({code:"UNAUTHORIZED",message:"WHOOP access token has expired. Please reconnect your WHOOP account."});try{let[b]=await a.db.select({recovery_score:p.whoopRecovery.recovery_score,hrv_rmssd_milli:p.whoopRecovery.hrv_rmssd_milli,hrv_rmssd_baseline:p.whoopRecovery.hrv_rmssd_baseline,resting_heart_rate:p.whoopRecovery.resting_heart_rate,resting_heart_rate_baseline:p.whoopRecovery.resting_heart_rate_baseline,raw_data:p.whoopRecovery.raw_data,date:p.whoopRecovery.date}).from(p.whoopRecovery).where((0,q.eq)(p.whoopRecovery.user_id,a.user.id)).orderBy((0,t.i)(p.whoopRecovery.date)).limit(1),[c]=await a.db.select({sleep_performance_percentage:p.whoopSleep.sleep_performance_percentage,raw_data:p.whoopSleep.raw_data,start:p.whoopSleep.start}).from(p.whoopSleep).where((0,q.eq)(p.whoopSleep.user_id,a.user.id)).orderBy((0,t.i)(p.whoopSleep.start)).limit(1);if(!b)throw new h.gt({code:"NOT_FOUND",message:"No recovery data found. Try syncing your WHOOP data first."});return{recovery_score:b.recovery_score||null,sleep_performance:c?.sleep_performance_percentage||null,hrv_now_ms:b.hrv_rmssd_milli||null,hrv_baseline_ms:b.hrv_rmssd_baseline||null,rhr_now_bpm:b.resting_heart_rate||null,rhr_baseline_bpm:b.resting_heart_rate_baseline||null,yesterday_strain:null,raw_data:{recovery:b.raw_data,sleep:c?.raw_data||null}}}catch(a){if(a instanceof h.gt)throw a;throw console.error("Failed to fetch WHOOP recovery data from database:",a),new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to fetch WHOOP data from database. Please try again."})}}),getRecovery:f.sy.query(async({ctx:a})=>await a.db.select({id:p.whoopRecovery.id,whoop_recovery_id:p.whoopRecovery.whoop_recovery_id,cycle_id:p.whoopRecovery.cycle_id,date:p.whoopRecovery.date,recovery_score:p.whoopRecovery.recovery_score,hrv_rmssd_milli:p.whoopRecovery.hrv_rmssd_milli,hrv_rmssd_baseline:p.whoopRecovery.hrv_rmssd_baseline,resting_heart_rate:p.whoopRecovery.resting_heart_rate,resting_heart_rate_baseline:p.whoopRecovery.resting_heart_rate_baseline,raw_data:p.whoopRecovery.raw_data,createdAt:p.whoopRecovery.createdAt}).from(p.whoopRecovery).where((0,q.eq)(p.whoopRecovery.user_id,a.user.id)).orderBy((0,t.i)(p.whoopRecovery.date))),getCycles:f.sy.query(async({ctx:a})=>await a.db.select({id:p.whoopCycles.id,whoop_cycle_id:p.whoopCycles.whoop_cycle_id,start:p.whoopCycles.start,end:p.whoopCycles.end,timezone_offset:p.whoopCycles.timezone_offset,day_strain:p.whoopCycles.day_strain,average_heart_rate:p.whoopCycles.average_heart_rate,max_heart_rate:p.whoopCycles.max_heart_rate,kilojoule:p.whoopCycles.kilojoule,raw_data:p.whoopCycles.raw_data,createdAt:p.whoopCycles.createdAt}).from(p.whoopCycles).where((0,q.eq)(p.whoopCycles.user_id,a.user.id)).orderBy((0,t.i)(p.whoopCycles.start))),getSleep:f.sy.query(async({ctx:a})=>await a.db.select({id:p.whoopSleep.id,whoop_sleep_id:p.whoopSleep.whoop_sleep_id,start:p.whoopSleep.start,end:p.whoopSleep.end,timezone_offset:p.whoopSleep.timezone_offset,sleep_performance_percentage:p.whoopSleep.sleep_performance_percentage,total_sleep_time_milli:p.whoopSleep.total_sleep_time_milli,sleep_efficiency_percentage:p.whoopSleep.sleep_efficiency_percentage,slow_wave_sleep_time_milli:p.whoopSleep.slow_wave_sleep_time_milli,rem_sleep_time_milli:p.whoopSleep.rem_sleep_time_milli,light_sleep_time_milli:p.whoopSleep.light_sleep_time_milli,wake_time_milli:p.whoopSleep.wake_time_milli,arousal_time_milli:p.whoopSleep.arousal_time_milli,disturbance_count:p.whoopSleep.disturbance_count,sleep_latency_milli:p.whoopSleep.sleep_latency_milli,raw_data:p.whoopSleep.raw_data,createdAt:p.whoopSleep.createdAt}).from(p.whoopSleep).where((0,q.eq)(p.whoopSleep.user_id,a.user.id)).orderBy((0,t.i)(p.whoopSleep.start))),getProfile:f.sy.query(async({ctx:a})=>{let[b]=await a.db.select({id:p.whoopProfile.id,whoop_user_id:p.whoopProfile.whoop_user_id,email:p.whoopProfile.email,first_name:p.whoopProfile.first_name,last_name:p.whoopProfile.last_name,raw_data:p.whoopProfile.raw_data,last_updated:p.whoopProfile.last_updated,createdAt:p.whoopProfile.createdAt}).from(p.whoopProfile).where((0,q.eq)(p.whoopProfile.user_id,a.user.id)).limit(1);return b||null}),getBodyMeasurements:f.sy.query(async({ctx:a})=>await a.db.select({id:p.whoopBodyMeasurement.id,whoop_measurement_id:p.whoopBodyMeasurement.whoop_measurement_id,height_meter:p.whoopBodyMeasurement.height_meter,weight_kilogram:p.whoopBodyMeasurement.weight_kilogram,max_heart_rate:p.whoopBodyMeasurement.max_heart_rate,measurement_date:p.whoopBodyMeasurement.measurement_date,raw_data:p.whoopBodyMeasurement.raw_data,createdAt:p.whoopBodyMeasurement.createdAt}).from(p.whoopBodyMeasurement).where((0,q.eq)(p.whoopBodyMeasurement.user_id,a.user.id)).orderBy((0,t.i)(p.whoopBodyMeasurement.measurement_date)))}),af=(0,f.LO)({getRecentEvents:f.sy.input(e.Ik({limit:e.ai().min(1).max(100).default(20),provider:e.Yj().optional()})).query(async({ctx:a,input:b})=>{let c=a.db.select().from(p.webhookEvents).orderBy((0,t.i)(p.webhookEvents.createdAt)).limit(b.limit);return b.provider&&c.where((0,q.eq)(p.webhookEvents.provider,b.provider)),await c}),getEventById:f.sy.input(e.Ik({id:e.ai()})).query(async({ctx:a,input:b})=>{let[c]=await a.db.select().from(p.webhookEvents).where((0,q.eq)(p.webhookEvents.id,b.id));return c}),getStats:f.sy.query(async({ctx:a})=>{let b=await a.db.select({status:p.webhookEvents.status,provider:p.webhookEvents.provider,eventType:p.webhookEvents.eventType,createdAt:p.webhookEvents.createdAt}).from(p.webhookEvents),c={total:b.length,byStatus:{},byProvider:{},byEventType:{},recentActivity:b.slice(0,10)};return b.forEach(a=>{c.byStatus[a.status]=(c.byStatus[a.status]??0)+1,c.byProvider[a.provider]=(c.byProvider[a.provider]??0)+1,c.byEventType[a.eventType]=(c.byEventType[a.eventType]??0)+1}),c})});function ag(a){if(null==a)return;let b="string"==typeof a?parseFloat(a):a;return Number.isFinite(b)?b:void 0}function ah(a,b,c){if(void 0!==a)return b===c?a:"kg"===c?a/2.2046226218:2.2046226218*a}let ai=(0,f.LO)({getExerciseInsights:f.sy.input(e.Ik({exerciseName:e.Yj().min(1),templateExerciseId:e.ai().optional(),unit:e.k5(["kg","lbs"]).default("kg"),limitSessions:e.ai().int().positive().max(50).default(10),excludeSessionId:e.ai().optional()})).query(async({input:a,ctx:b})=>{try{let c,d,e=[a.exerciseName];if(a.templateExerciseId){let d=await b.db.query.exerciseLinks.findFirst({where:(0,q.Uo)((0,q.eq)(p.exerciseLinks.templateExerciseId,a.templateExerciseId),(0,q.eq)(p.exerciseLinks.user_id,b.user.id)),with:{masterExercise:!0}});if(d){let f=await b.db.query.exerciseLinks.findMany({where:(0,q.Uo)((0,q.eq)(p.exerciseLinks.masterExerciseId,d.masterExerciseId),(0,q.eq)(p.exerciseLinks.user_id,b.user.id)),with:{templateExercise:!0}}),g=f.map(a=>{let b=a.templateExercise;return b&&"object"==typeof b&&!Array.isArray(b)&&"string"==typeof b.exerciseName?b.exerciseName:null}).filter(a=>"string"==typeof a);e=g.length?g:[a.exerciseName],c=f.map(a=>a.templateExerciseId)}else{let c=await b.db.query.templateExercises.findFirst({where:(0,q.Uo)((0,q.eq)(p.templateExercises.id,a.templateExerciseId),(0,q.eq)(p.templateExercises.user_id,b.user.id))});c&&(e=[c.exerciseName])}}let f=[(0,q.eq)(p.workoutSessions.user_id,b.user.id)];a.excludeSessionId&&f.push((0,q.ne)(p.workoutSessions.id,a.excludeSessionId));let g=[];(e.length>0||c&&c.length>0)&&(g=await b.db.query.workoutSessions.findMany({where:(0,q.Uo)(...f),orderBy:[(0,t.i)(p.workoutSessions.workoutDate)],limit:a.limitSessions,with:{exercises:{where:c&&c.length>0?(0,q.RV)(p.sessionExercises.templateExerciseId,c):e.length>0?(0,q.RV)(p.sessionExercises.exerciseName,e):void 0}}}));let h=[];for(let a of g){if(!a.exercises||!Array.isArray(a.exercises)){console.warn(`Session ${a.id} has no exercises or exercises is not an array`);continue}for(let b of a.exercises.sort((a,b)=>(a.setOrder??0)-(b.setOrder??0))){if(!b){console.warn(`Null exercise found in session ${a.id}`);continue}h.push({sessionId:a.id,workoutDate:a.workoutDate,weight:ag(b.weight),reps:b.reps,sets:b.sets,unit:b.unit??"kg",rpe:"number"==typeof b.rpe?b.rpe:null,rest_seconds:"number"==typeof b.rest_seconds?b.rest_seconds:null})}}let i=new Map;for(let b of h){let c=ah(b.weight,b.unit,a.unit),d=(c??0)*(b.reps??0),e=i.get(b.sessionId),f=function(a,b){if(a&&b)return a*(1+b/30)}(c,b.reps??void 0);e?(e.volume+=d,(c??-1/0)>(e.bestWeight??-1/0)&&(e.bestWeight=c,e.bestSet={weight:c,reps:b.reps??void 0,unit:a.unit,sets:b.sets??void 0,rpe:b.rpe??void 0}),(f??-1/0)>(e.est1RM??-1/0)&&(e.est1RM=f)):i.set(b.sessionId,{date:b.workoutDate,volume:d,bestWeight:c,bestSet:{weight:c,reps:b.reps??void 0,unit:a.unit,sets:b.sets??void 0,rpe:b.rpe??void 0},est1RM:f})}let j=Array.from(i.entries()).map(([a,b])=>({sessionId:a,...b})).sort((a,b)=>a.date.getTime()-b.date.getTime()),k=j.map(a=>({date:a.date,volume:Math.round(100*a.volume)/100})),l=j.reduce((a,b)=>b.bestSet&&(!a||(b.bestSet.weight??-1/0)>(a.weight??-1/0))?b.bestSet:a,void 0),m=j.reduce((a,b)=>void 0===b.est1RM?a:void 0===a||b.est1RM>a?b.est1RM:a,void 0),n=j.slice(-3).map(a=>a.bestSet?.weight??void 0).filter(a=>"number"==typeof a);if(n.length>=2){let b=n[n.length-1],c=n[n.length-2];if(b>=c)if("kg"===a.unit){let c=Math.max(.5,Math.round(.025*b*2)/2);d={type:"weight",nextWeight:Math.round((b+c)*2)/2,rationale:"Upward trend; suggest ~2.5% increase",unit:a.unit}}else d={type:"weight",nextWeight:b+5,rationale:"Upward trend; suggest +5 lb",unit:a.unit};else d={type:"reps",nextReps:1,rationale:"Plateau detected; try adding a rep",unit:a.unit}}let o=h.map(a=>"number"==typeof a.rpe?a.rpe:void 0).filter(a=>Number.isFinite(a)),r=h.map(a=>"number"==typeof a.rest_seconds?a.rest_seconds:void 0).filter(a=>Number.isFinite(a)),s=[];if(o.length>=3){let a=o.reduce((a,b)=>a+b,0)/o.length;a>=9&&s.push({kind:"rpe",message:"Average RPE is high (≥9). Consider reducing weight or total sets."}),a<=6&&s.push({kind:"rpe",message:"Average RPE is low (≤6). Consider increasing weight or reps to target RPE 7–9."})}if(r.length>=3){let a=r.reduce((a,b)=>a+b,0)/r.length;a<60&&s.push({kind:"rest",message:"Average rest is short (<60s). Consider increasing rest between sets."}),a>180&&s.push({kind:"rest",message:"Average rest is long (>180s). Consider reducing rest to maintain intensity."})}return k.length>=3&&(k[k.length-1].volume>=k[0].volume||s.push({kind:"volume",message:"Training volume trending flat/down. Consider progressive overload plan."})),{unit:a.unit,bestSet:l,best1RM:m?Math.round(100*m)/100:void 0,volumeSparkline:k,recommendation:d,suggestions:s}}catch(a){throw console.error("Error in getExerciseInsights:",a),Error(`Failed to get exercise insights: ${a instanceof Error?a.message:"Unknown error"}`)}}),getSessionInsights:f.sy.input(e.Ik({sessionId:e.ai(),unit:e.k5(["kg","lbs"]).default("kg")})).query(async({input:a,ctx:b})=>{try{let c=await b.db.query.workoutSessions.findFirst({where:(0,q.Uo)((0,q.eq)(p.workoutSessions.id,a.sessionId),(0,q.eq)(p.workoutSessions.user_id,b.user.id)),with:{exercises:!0}});if(!c)throw Error("Session not found");let d=new Map;for(let b of c.exercises){let c=b.exerciseName,e=ah(ag(b.weight),b.unit??"kg",a.unit),f=b.reps??0,g=(e??0)*f,h=d.get(c)??{volume:0};h.volume+=g,(!h.bestSet||(e??-1/0)>(h.bestSet.weight??-1/0))&&(h.bestSet={weight:e,reps:f,unit:a.unit}),d.set(c,h)}let e=Math.round(100*Array.from(d.values()).reduce((a,b)=>a+b.volume,0))/100,f=Array.from(d.entries()).map(([a,b])=>({exerciseName:a,...b}));return{unit:a.unit,totalVolume:e,bestSets:f}}catch(a){throw console.error("Error in getSessionInsights:",a),Error(`Failed to get session insights: ${a instanceof Error?a.message:"Unknown error"}`)}}),exportWorkoutsCSV:f.sy.input(e.Ik({since:e.p6().optional(),limit:e.ai().int().positive().max(200).default(50)})).query(async({input:a,ctx:b})=>{let c=[(0,q.eq)(p.workoutSessions.user_id,b.user.id)];a.since&&c.push((0,q.RO)(p.workoutSessions.workoutDate,a.since));let d=await b.db.query.workoutSessions.findMany({where:(0,q.Uo)(...c),orderBy:[(0,t.i)(p.workoutSessions.workoutDate)],limit:a.limit,with:{exercises:!0,template:!0}}),e=[];for(let a of(e.push("date,sessionId,templateName,exercise,setOrder,weight,reps,sets,unit,rpe,rest_seconds"),d))for(let b of a.exercises){let c=a.template&&"string"==typeof a.template.name?a.template.name:"",d="number"==typeof b.rpe?b.rpe:"",f="number"==typeof b.rest_seconds?b.rest_seconds:"";e.push([a.workoutDate.toISOString(),a.id,c,b.exerciseName,b.setOrder??0,b.weight??"",b.reps??"",b.sets??"",b.unit??"",d,f].join(","))}return{filename:"workouts_export.csv",mimeType:"text/csv",content:e.join("\n")}})});function aj(a){return a.toLowerCase().trim().replace(/\s+/g," ")}function ak(a,b){let c=a.length>b.length?a:b,d=a.length>b.length?b:a;if(0===c.length)return 1;let e=function(a,b){let c=[];for(let a=0;a<=b.length;a++)c[a]=[a];for(let b=0;b<=a.length;b++)c[0][b]=b;for(let d=1;d<=b.length;d++)for(let e=1;e<=a.length;e++)b.charAt(d-1)===a.charAt(e-1)?c[d][e]=c[d-1][e-1]:c[d][e]=Math.min(c[d-1][e-1]+1,c[d][e-1]+1,c[d-1][e]+1);return c[b.length][a.length]}(c,d);return(c.length-e)/c.length}function al(a){return!!a&&"function"==typeof a.then}async function am(a){if(Array.isArray(a))return a;if(al(a)){let b=await a;return Array.isArray(b)?b:[]}return[]}async function an(a){let b=await am(a);return b.length>0?b[0]:null}let ao=(0,f.LO)({searchMaster:f.sy.use(o).input(e.Ik({q:e.Yj().trim(),limit:e.ai().int().min(1).max(50).default(20),cursor:e.ai().int().min(0).default(0)})).query(async({ctx:a,input:b})=>{let c="string"==typeof b.q?aj(b.q):"";if(!c)return{items:[],nextCursor:null};let d=`${c}%`,e=`%${c}%`,f=[];try{let c=a.db.select({id:p.masterExercises.id,name:p.masterExercises.name,normalizedName:p.masterExercises.normalizedName,createdAt:p.masterExercises.createdAt}).from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.user_id,a.user.id),(0,q.B3)(p.masterExercises.normalizedName,d))).orderBy(p.masterExercises.normalizedName).limit(b.limit),e=al(c)?await c:c;f=Array.isArray(e)?e.slice(b.cursor,b.cursor+b.limit):[]}catch{f=[]}let g=f.map(a=>({...a,createdAt:a.createdAt.toISOString()}));if(g.length<b.limit){let c=b.limit-g.length,d=[];try{let f=a.db.select({id:p.masterExercises.id,name:p.masterExercises.name,normalizedName:p.masterExercises.normalizedName,createdAt:p.masterExercises.createdAt}).from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.user_id,a.user.id),(0,q.B3)(p.masterExercises.normalizedName,e))).orderBy(p.masterExercises.normalizedName).limit(c),g=al(f)?await f:f;d=(Array.isArray(g)?g.slice(b.cursor,b.cursor+c):[]).map(a=>({id:a.id,name:a.name,normalizedName:a.normalizedName,createdAt:a.createdAt.toISOString()}))}catch{}let f=new Set(g.map(a=>a.id));for(let a of d)f.has(a.id)||(g.push(a),f.add(a.id))}let h=g.length===b.limit?b.cursor+b.limit:null;return{items:g,nextCursor:h}}),findSimilar:f.sy.use(o).input(e.Ik({exerciseName:e.Yj(),threshold:e.ai().min(0).max(1).default(.6)})).query(async({ctx:a,input:b})=>{let c=aj(b.exerciseName);return(await a.db.select().from(p.masterExercises).where((0,q.eq)(p.masterExercises.user_id,a.user.id))).map(a=>({...a,similarity:ak(c,a.normalizedName)})).filter(a=>a.similarity>=b.threshold).sort((a,b)=>b.similarity-a.similarity)}),getAllMaster:f.sy.use(o).query(async({ctx:a})=>{try{let b=a.db.select({id:p.masterExercises.id,name:p.masterExercises.name,normalizedName:p.masterExercises.normalizedName,createdAt:p.masterExercises.createdAt,linkedCount:(0,r.ll)`count(${p.exerciseLinks.id})`}).from(p.masterExercises).leftJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.masterExerciseId,p.masterExercises.id)).where((0,q.eq)(p.masterExercises.user_id,a.user.id)).groupBy(p.masterExercises.id).orderBy(p.masterExercises.name),c=al(b)?await b:b;return Array.isArray(c)?c:await am(c)}catch{return[]}}),createOrGetMaster:f.sy.use(o).input(e.Ik({name:e.Yj().min(1)})).mutation(async({ctx:a,input:b})=>{let c=aj(b.name),d=null;try{let b=a.db.select().from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.user_id,a.user.id),(0,q.eq)(p.masterExercises.normalizedName,c))).limit(1),e=al(b)?await b:b;d=await an(e)}catch{d=null}if(d)return d;let e=null;try{let d=a.db.insert(p.masterExercises).values({user_id:a.user.id,name:b.name,normalizedName:c}).returning(),f=al(d)?await d:d;e=Array.isArray(f)?f[0]:null}catch{e=null}return e||{id:void 0,user_id:a.user.id,name:b.name,normalizedName:c}}),linkToMaster:f.sy.use(o).input(e.Ik({templateExerciseId:e.ai(),masterExerciseId:e.ai()})).mutation(async({ctx:a,input:b})=>{let c=null;try{let d=a.db.select().from(p.templateExercises).where((0,q.Uo)((0,q.eq)(p.templateExercises.id,b.templateExerciseId),(0,q.eq)(p.templateExercises.user_id,a.user.id))).limit(1),e=al(d)?await d:d;c=await an(e)}catch{c=null}if(!c)throw Error("Template exercise not found");let d=null;try{let c=a.db.select().from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.id,b.masterExerciseId),(0,q.eq)(p.masterExercises.user_id,a.user.id))).limit(1),e=al(c)?await c:c;d=await an(e)}catch{d=null}if(!d)throw Error("Master exercise not found");let e=null;try{let c=a.db.insert(p.exerciseLinks).values({templateExerciseId:b.templateExerciseId,masterExerciseId:b.masterExerciseId,user_id:a.user.id}),d="function"==typeof c.onConflictDoUpdate?c.onConflictDoUpdate({target:p.exerciseLinks.templateExerciseId,set:{masterExerciseId:b.masterExerciseId}}).returning():c.returning?.()??c,f=al(d)?await d:d;Array.isArray(f)&&f[0]&&(e=f[0])}catch{e=null}return e??{templateExerciseId:b.templateExerciseId,masterExerciseId:b.masterExerciseId,user_id:a.user.id}}),unlink:f.sy.use(o).input(e.Ik({templateExerciseId:e.ai()})).mutation(async({ctx:a,input:b})=>{try{let c=a.db.delete(p.exerciseLinks).where((0,q.Uo)((0,q.eq)(p.exerciseLinks.templateExerciseId,b.templateExerciseId),(0,q.eq)(p.exerciseLinks.user_id,a.user.id)));al(c)&&await c}catch{}return{success:!0}}),getLatestPerformance:f.sy.use(o).input(e.Ik({masterExerciseId:e.ai()})).query(async({ctx:a,input:b})=>{let c=await a.db.select({id:p.templateExercises.id}).from(p.templateExercises).innerJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).where((0,q.Uo)((0,q.eq)(p.exerciseLinks.masterExerciseId,b.masterExerciseId),(0,q.eq)(p.templateExercises.user_id,a.user.id)));if(0===c.length)return null;let d=c.map(a=>a.id);return 0===d.length?null:(await a.db.select({weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit,workoutDate:p.workoutSessions.workoutDate}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.RV)(p.sessionExercises.templateExerciseId,d),(0,q.eq)(p.sessionExercises.user_id,a.user.id))).orderBy((0,t.i)(p.workoutSessions.workoutDate)).limit(1))[0]??null}),getLinksForTemplate:f.sy.use(o).input(e.Ik({templateId:e.ai()})).query(async({ctx:a,input:b})=>await a.db.select({templateExerciseId:p.templateExercises.id,exerciseName:p.templateExercises.exerciseName,masterExerciseId:p.masterExercises.id,masterExerciseName:p.masterExercises.name,isLinked:(0,r.ll)`${p.exerciseLinks.id} IS NOT NULL`}).from(p.templateExercises).leftJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).leftJoin(p.masterExercises,(0,q.eq)(p.masterExercises.id,p.exerciseLinks.masterExerciseId)).where((0,q.Uo)((0,q.eq)(p.templateExercises.templateId,b.templateId),(0,q.eq)(p.templateExercises.user_id,a.user.id))).orderBy(p.templateExercises.orderIndex)),isLinkingRejected:f.sy.use(o).input(e.Ik({templateExerciseId:e.ai()})).query(async({ctx:a,input:b})=>{let c=await a.db.select({linkingRejected:p.templateExercises.linkingRejected}).from(p.templateExercises).where((0,q.Uo)((0,q.eq)(p.templateExercises.id,b.templateExerciseId),(0,q.eq)(p.templateExercises.user_id,a.user.id))).limit(1);return c[0]?.linkingRejected??!1}),rejectLinking:f.sy.use(o).input(e.Ik({templateExerciseId:e.ai()})).mutation(async({ctx:a,input:b})=>{if(0===(await a.db.select().from(p.templateExercises).where((0,q.Uo)((0,q.eq)(p.templateExercises.id,b.templateExerciseId),(0,q.eq)(p.templateExercises.user_id,a.user.id))).limit(1)).length)throw Error("Template exercise not found");return await a.db.update(p.templateExercises).set({linkingRejected:!0}).where((0,q.eq)(p.templateExercises.id,b.templateExerciseId)),{success:!0}}),getLinkingDetails:f.sy.use(o).input(e.Ik({masterExerciseId:e.ai()})).query(async({ctx:a,input:b})=>{let c=await a.db.select({templateExerciseId:p.templateExercises.id,exerciseName:p.templateExercises.exerciseName,templateId:p.templateExercises.templateId,templateName:(0,r.ll)`(SELECT name FROM "swole-tracker_workout_template" WHERE id = ${p.templateExercises.templateId})`}).from(p.templateExercises).innerJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).where((0,q.Uo)((0,q.eq)(p.exerciseLinks.masterExerciseId,b.masterExerciseId),(0,q.eq)(p.templateExercises.user_id,a.user.id))),d=await a.db.select({templateExerciseId:p.templateExercises.id,exerciseName:p.templateExercises.exerciseName,templateId:p.templateExercises.templateId,templateName:(0,r.ll)`(SELECT name FROM "swole-tracker_workout_template" WHERE id = ${p.templateExercises.templateId})`,linkingRejected:p.templateExercises.linkingRejected}).from(p.templateExercises).leftJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).where((0,q.Uo)((0,q.eq)(p.templateExercises.user_id,a.user.id),(0,r.ll)`${p.exerciseLinks.id} IS NULL`)),e=await a.db.select({name:p.masterExercises.name,normalizedName:p.masterExercises.normalizedName}).from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.id,b.masterExerciseId),(0,q.eq)(p.masterExercises.user_id,a.user.id))).limit(1);if(0===e.length)throw Error("Master exercise not found");let f=e[0].normalizedName;return{linkedExercises:c,potentialLinks:d.map(a=>{let b=ak(f,aj(a.exerciseName));return{...a,similarity:b}}).sort((a,b)=>b.similarity-a.similarity),masterExerciseName:e[0].name}}),bulkLinkSimilar:f.sy.use(o).input(e.Ik({masterExerciseId:e.ai(),minimumSimilarity:e.ai().min(0).max(1).default(.7)})).mutation(async({ctx:a,input:b})=>{let c=await a.db.query.masterExercises.findFirst({where:(0,q.Uo)((0,q.eq)(p.masterExercises.id,b.masterExerciseId),(0,q.eq)(p.masterExercises.user_id,a.user.id))});if(!c)throw Error("Master exercise not found");let d=await a.db.select({id:p.templateExercises.id,exerciseName:p.templateExercises.exerciseName}).from(p.templateExercises).leftJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).where((0,q.Uo)((0,q.eq)(p.templateExercises.user_id,a.user.id),(0,r.ll)`${p.exerciseLinks.id} IS NULL`,(0,q.eq)(p.templateExercises.linkingRejected,!1))),e=0,f=c.normalizedName;for(let c of d)ak(f,aj(c.exerciseName))>=b.minimumSimilarity&&(await a.db.insert(p.exerciseLinks).values({templateExerciseId:c.id,masterExerciseId:b.masterExerciseId,user_id:a.user.id}),e++);return{linkedCount:e}}),bulkUnlinkAll:f.sy.use(o).input(e.Ik({masterExerciseId:e.ai()})).mutation(async({ctx:a,input:b})=>({unlinkedCount:(await a.db.delete(p.exerciseLinks).where((0,q.Uo)((0,q.eq)(p.exerciseLinks.masterExerciseId,b.masterExerciseId),(0,q.eq)(p.exerciseLinks.user_id,a.user.id))).returning()).length})),migrateExistingExercises:f.sy.use(o).mutation(async({ctx:a})=>{let b=await a.db.select({id:p.templateExercises.id,exerciseName:p.templateExercises.exerciseName}).from(p.templateExercises).leftJoin(p.exerciseLinks,(0,q.eq)(p.exerciseLinks.templateExerciseId,p.templateExercises.id)).where((0,q.Uo)((0,q.eq)(p.templateExercises.user_id,a.user.id),(0,r.ll)`${p.exerciseLinks.id} IS NULL`)),c=0,d=0;for(let e of b){let b,f=aj(e.exerciseName),g=await a.db.select().from(p.masterExercises).where((0,q.Uo)((0,q.eq)(p.masterExercises.user_id,a.user.id),(0,q.eq)(p.masterExercises.normalizedName,f))).limit(1);if(g.length>0)b=g[0];else{if(!(b=(await a.db.insert(p.masterExercises).values({user_id:a.user.id,name:e.exerciseName,normalizedName:f}).returning())[0]))throw new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to create master exercise"});c++}await a.db.insert(p.exerciseLinks).values({templateExerciseId:e.id,masterExerciseId:b.id,user_id:a.user.id}),d++}return{migratedExercises:b.length,createdMasterExercises:c,createdLinks:d}})}),ap=e.Ik({timeRange:e.k5(["week","month","quarter","year"]).default("quarter"),startDate:e.p6().optional(),endDate:e.p6().optional()}),aq=e.Ik({exerciseName:e.Yj().optional(),templateExerciseId:e.ai().optional(),timeRange:e.k5(["week","month","quarter","year"]).default("quarter"),startDate:e.p6().optional(),endDate:e.p6().optional()}),ar=aq.extend({recordType:e.k5(["weight","volume","both"]).default("both")}),as=(0,f.LO)({getExerciseStrengthProgression:f.sy.input($).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=await b.db.select({workoutDate:p.workoutSessions.workoutDate,exerciseName:p.sessionExercises.exerciseName,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit,oneRMEstimate:p.sessionExercises.one_rm_estimate,volumeLoad:p.sessionExercises.volume_load}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,a.exerciseName),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate));if(0===e.length)return{currentOneRM:0,oneRMChange:0,volumeTrend:0,sessionCount:0,frequency:0,recentPRs:[],topSets:[],progressionTrend:0,consistencyScore:0};let f=e.map(a=>a.oneRMEstimate?parseFloat(String(a.oneRMEstimate)):aw(parseFloat(String(a.weight||"0")),a.reps||1)),g=Math.max(...f),h=new Set(e.map(a=>a.workoutDate.toDateString())).size,i=L(e.map(a=>a.workoutDate),c,d),j=d.getTime()-c.getTime(),k=new Date(c.getTime()-1),l=new Date(k.getTime()-j),m=await b.db.select({weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,oneRMEstimate:p.sessionExercises.one_rm_estimate,volumeLoad:p.sessionExercises.volume_load}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,a.exerciseName),(0,q.RO)(p.workoutSessions.workoutDate,l),(0,q.wJ)(p.workoutSessions.workoutDate,k))),n=m.map(a=>a.oneRMEstimate?parseFloat(String(a.oneRMEstimate)):aw(parseFloat(String(a.weight||"0")),a.reps||1)),o=n.length>0?Math.max(...n):0,r=e.reduce((a,b)=>a+(b.volumeLoad?parseFloat(String(b.volumeLoad)):H(b.sets||1,b.reps||1,parseFloat(String(b.weight||"0")))),0),s=m.reduce((a,b)=>a+(b.volumeLoad?parseFloat(String(b.volumeLoad)):H(b.sets||1,b.reps||1,parseFloat(String(b.weight||"0")))),0),u=J(r,s),v=e.map((a,b)=>[b,aw(parseFloat(String(a.weight||"0")),a.reps||1)]),w=function(a){if(a.length<2)return 0;let b=a.length,c=a.reduce((a,[b])=>a+b,0),d=a.reduce((a,[,b])=>a+b,0),e=a.reduce((a,[b,c])=>a+b*c,0),f=(b*e-c*d)/(b*a.reduce((a,[b])=>a+b*b,0)-c*c);return isFinite(f)?Math.round(1e3*f)/1e3:0}(v),x=function(a){if(a.length<2)return 100;let b=a.reduce((a,b)=>a+b,0)/a.length,c=Math.sqrt(a.reduce((a,c)=>a+Math.pow(c-b,2),0)/a.length);return Math.round(Math.max(0,100-100*(b>0?c/b:1)))}(f),y=new Date(d);y.setDate(y.getDate()-30);let z=[],A=0,B=0,C=0;for(let a of e.reverse()){let b=parseFloat(String(a.weight||"0")),c=aw(b,a.reps||1),d=H(a.sets||1,a.reps||1,b);a.workoutDate>=y?(c>A&&(A=c,z.push({date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,type:"1RM",oneRMPercentage:100})),b>B&&(B=b,z.push({date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,type:"Weight",oneRMPercentage:A>0?c/A*100:100})),d>C&&(C=d,z.push({date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,type:"Volume",oneRMPercentage:A>0?c/A*100:100}))):(c>A&&(A=c),b>B&&(B=b),d>C&&(C=d))}let D=e.slice(0,10).map(a=>{let b=parseFloat(String(a.weight||"0")),c=aw(b,a.reps||1);return{date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,oneRMPercentage:g>0?c/g*100:100}}).sort((a,b)=>b.oneRMPercentage-a.oneRMPercentage).slice(0,5);return{currentOneRM:g,oneRMChange:g-o,volumeTrend:u,sessionCount:h,frequency:i,recentPRs:z.slice(-5),topSets:D,progressionTrend:w,consistencyScore:x}}catch(a){return console.error("Error in getExerciseStrengthProgression:",a),{currentOneRM:0,oneRMChange:0,volumeTrend:0,sessionCount:0,frequency:0,recentPRs:[],topSets:[],progressionTrend:0,consistencyScore:0}}}),getExerciseVolumeProgression:f.sy.input($).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=await b.db.select({workoutDate:p.workoutSessions.workoutDate,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,a.exerciseName),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate));if(0===e.length)return{currentVolume:0,volumeChange:0,volumeChangePercent:0,averageVolumePerSession:0,sessionCount:0,frequency:0,volumeByWeek:[]};let f=e.reduce((a,b)=>a+H(b.sets||1,b.reps||1,parseFloat(String(b.weight||"0"))),0),g=new Set(e.map(a=>a.workoutDate.toDateString())).size,h=g>0?f/g:0,i=L(e.map(a=>a.workoutDate),c,d),j=d.getTime()-c.getTime(),k=new Date(c.getTime()-1),l=new Date(k.getTime()-j),m=(await b.db.select({weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,a.exerciseName),(0,q.RO)(p.workoutSessions.workoutDate,l),(0,q.wJ)(p.workoutSessions.workoutDate,k)))).reduce((a,b)=>a+H(b.sets||1,b.reps||1,parseFloat(String(b.weight||"0"))),0),n=f-m,o=J(f,m),r=[],s=new Map;for(let a of e){let b=new Date(a.workoutDate);b.setDate(b.getDate()-b.getDay());let c=b.toISOString().split("T")[0];s.has(c)||s.set(c,{volume:0,sessions:0});let d=s.get(c);d.volume+=H(a.sets||1,a.reps||1,parseFloat(String(a.weight||"0"))),d.sessions++}for(let[a,b]of s)r.push({weekStart:a,totalVolume:b.volume,sessionCount:b.sessions});return r.sort((a,b)=>a.weekStart.localeCompare(b.weekStart)),{currentVolume:f,volumeChange:n,volumeChangePercent:o,averageVolumePerSession:h,sessionCount:g,frequency:i,volumeByWeek:r}}catch(a){return console.error("Error in getExerciseVolumeProgression:",a),{currentVolume:0,volumeChange:0,volumeChangePercent:0,averageVolumePerSession:0,sessionCount:0,frequency:0,volumeByWeek:[]}}}),getExerciseRecentPRs:f.sy.input($).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=await b.db.select({workoutDate:p.workoutSessions.workoutDate,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,a.exerciseName),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy(p.workoutSessions.workoutDate);if(0===e.length)return{exerciseName:a.exerciseName,recentPRs:[],currentBest:{oneRM:0,maxWeight:0,maxVolume:0},prFrequency:0};let f=[],g=0,h=0,i=0;for(let a of e){let b=parseFloat(String(a.weight||"0")),c=aw(b,a.reps||1),d=H(a.sets||1,a.reps||1,b);c>g&&(g=c,f.push({date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,type:"1RM",oneRMPercentage:100})),b>h&&(h=b,f.push({date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,type:"Weight",oneRMPercentage:g>0?c/g*100:100})),d>i&&(i=d,f.push({date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,type:"Volume",oneRMPercentage:g>0?c/g*100:100}))}let j=Math.ceil((d.getTime()-c.getTime())/864e5),k=Math.max(1,j/30),l=f.length/k;return{exerciseName:a.exerciseName,recentPRs:f.slice(-10),currentBest:{oneRM:g,maxWeight:h,maxVolume:i},prFrequency:Math.round(10*l)/10}}catch(b){return console.error("Error in getExerciseRecentPRs:",b),{exerciseName:a.exerciseName,recentPRs:[],currentBest:{oneRM:0,maxWeight:0,maxVolume:0},prFrequency:0}}}),getExerciseTopSets:f.sy.input($).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=await b.db.select({workoutDate:p.workoutSessions.workoutDate,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.eq)(p.sessionExercises.exerciseName,a.exerciseName),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate));if(0===e.length){let b={date:"",weight:0,reps:0,oneRMPercentage:0};return{exerciseName:a.exerciseName,topSets:[],averageIntensity:0,heaviestSet:b,mostRecentHeavy:b}}let f=e.map(a=>aw(parseFloat(String(a.weight||"0")),a.reps||1)),g=Math.max(...f),h=e.map(a=>{let b=parseFloat(String(a.weight||"0")),c=aw(b,a.reps||1);return{date:a.workoutDate.toISOString().split("T")[0],weight:b,reps:a.reps||1,oneRMPercentage:g>0?Math.round(c/g*100):0}}).sort((a,b)=>b.oneRMPercentage-a.oneRMPercentage).slice(0,10),i=h.length>0?h.reduce((a,b)=>a+b.oneRMPercentage,0)/h.length:0,j=h.length>0?h[0]:{date:"",weight:0,reps:0,oneRMPercentage:0},k=h.filter(a=>a.oneRMPercentage>=85),l=k.length>0?k.sort((a,b)=>new Date(b.date).getTime()-new Date(a.date).getTime())[0]:{date:"",weight:0,reps:0,oneRMPercentage:0};return{exerciseName:a.exerciseName,topSets:h.slice(0,5),averageIntensity:Math.round(i),heaviestSet:j,mostRecentHeavy:l}}catch(c){console.error("Error in getExerciseTopSets:",c);let b={date:"",weight:0,reps:0,oneRMPercentage:0};return{exerciseName:a.exerciseName,topSets:[],averageIntensity:0,heaviestSet:b,mostRecentHeavy:b}}}),getTopExercises:f.sy.input(_).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=await b.db.select({exerciseName:p.sessionExercises.exerciseName,workoutDate:p.workoutSessions.workoutDate,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate));if(0===e.length)return[];let f=new Map;for(let a of e){f.has(a.exerciseName)||f.set(a.exerciseName,{sessions:new Set,totalVolume:0,oneRMValues:[],lastWorkoutDate:a.workoutDate});let b=f.get(a.exerciseName);b.sessions.add(a.workoutDate.toDateString());let c=parseFloat(String(a.weight||"0")),d=H(a.sets||1,a.reps||1,c);b.totalVolume+=d;let e=aw(c,a.reps||1);b.oneRMValues.push(e),a.workoutDate>b.lastWorkoutDate&&(b.lastWorkoutDate=a.workoutDate)}let g=[];for(let[a,b]of f){let e=b.sessions.size,f=L([...b.sessions].map(a=>new Date(a)),c,d),h=b.oneRMValues.length>0?b.oneRMValues.reduce((a,b)=>a+b,0)/b.oneRMValues.length:0,i=b.oneRMValues.slice(0,Math.ceil(b.oneRMValues.length/2)),j=b.oneRMValues.slice(Math.ceil(b.oneRMValues.length/2)),k="stable";if(i.length>0&&j.length>0){let a=i.reduce((a,b)=>a+b,0)/i.length,b=j.reduce((a,b)=>a+b,0)/j.length,c=(a-b)/b*100;c>5?k="improving":c<-5&&(k="declining")}g.push({exerciseName:a,sessionCount:e,frequency:f,totalVolume:b.totalVolume,averageOneRM:h,lastTrained:b.lastWorkoutDate.toISOString().split("T")[0],trend:k})}return g.sort((a,b)=>b.frequency-a.frequency).slice(0,a.limit)}catch(a){return console.error("Error in getTopExercises:",a),[]}}),getStrengthProgression:f.sy.input(aq).query(async({input:a,ctx:b})=>{try{var c;let{startDate:d,endDate:e}=K(a.timeRange,a.startDate,a.endDate),f=[];if(a.templateExerciseId?f=await at(b.db,a.templateExerciseId):a.exerciseName&&(f=[a.exerciseName]),0===f.length)return[];let g=[(0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,d),(0,q.wJ)(p.workoutSessions.workoutDate,e)],h=1===f.length?(0,q.eq)(p.sessionExercises.exerciseName,f[0]):(0,q.RV)(p.sessionExercises.exerciseName,f);return g.push(h),c=(await b.db.select({workoutDate:p.workoutSessions.workoutDate,exerciseName:p.sessionExercises.exerciseName,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)(...g)).orderBy((0,t.i)(p.workoutSessions.workoutDate),(0,t.i)(p.sessionExercises.weight))).map(a=>({...a,weight:a.weight?String(a.weight):null,oneRMEstimate:aw(parseFloat(String(a.weight||"0")),a.reps||1)})),Object.values(c.reduce((a,b)=>{let c=`${b.workoutDate.toISOString()}-${b.exerciseName}`;return a[c]||(a[c]=[]),a[c].push(b),a},{})).map(a=>a.sort((a,b)=>{let c=parseFloat(String(a.weight||"0"));return parseFloat(String(b.weight||"0"))-c})[0]).map(a=>({workoutDate:a.workoutDate,exerciseName:a.exerciseName,weight:parseFloat(String(a.weight||"0")),reps:a.reps||0,sets:a.sets||1,unit:a.unit,oneRMEstimate:aw(parseFloat(String(a.weight||"0")),a.reps||1)}))}catch(a){return console.error("Error in getStrengthProgression:",a),[]}}),getVolumeProgression:f.sy.input(ap).query(async({input:a,ctx:b})=>{try{var c;k.vF.debug("Getting volume progression",{timeRange:a.timeRange,userId:b.user.id});let{startDate:d,endDate:e}=K(a.timeRange,a.startDate,a.endDate);k.vF.debug("Volume progression date range",{startDate:d,endDate:e});let f=(c=(await b.db.select({workoutDate:p.workoutSessions.workoutDate,exerciseName:p.sessionExercises.exerciseName,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,d),(0,q.wJ)(p.workoutSessions.workoutDate,e))).orderBy((0,t.i)(p.workoutSessions.workoutDate))).map(a=>({workoutDate:a.workoutDate,exerciseName:a.exerciseName,weight:a.weight||0,reps:a.reps||0,sets:a.sets||0})),Object.values(c.reduce((a,b)=>{let c=b.workoutDate.toDateString();a[c]||(a[c]={workoutDate:b.workoutDate,totalVolume:0,totalSets:0,totalReps:0,exerciseCount:new Set});let d=parseFloat(String(b.weight||"0")),e=b.reps||0,f=b.sets||0;return a[c].totalVolume+=d*e*f,a[c].totalSets+=f,a[c].totalReps+=e*f,a[c].exerciseCount.add(b.exerciseName),a},{})).map(a=>({workoutDate:a.workoutDate,totalVolume:a.totalVolume,totalSets:a.totalSets,totalReps:a.totalReps,uniqueExercises:a.exerciseCount.size})));return k.vF.debug("Volume progression result",{count:f.length}),f}catch(a){return console.error("Error in getVolumeProgression:",a),[]}}),getConsistencyStats:f.sy.input(ap).query(async({input:a,ctx:b})=>{try{k.vF.debug("Getting consistency stats",{timeRange:a.timeRange,userId:b.user.id});let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=await b.db.select({workoutDate:p.workoutSessions.workoutDate}).from(p.workoutSessions).where((0,q.Uo)((0,q.eq)(p.workoutSessions.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate)),f=function(a,b,c){let d=a.map(a=>new Date(a.toDateString())),e=Math.ceil((c.getTime()-b.getTime())/864e5),f=d.length,g=f/Math.max(1,e/7),h=function(a){if(0===a.length)return 0;let b=new Date,c=0,d=new Date(b);for(let b of a.sort((a,b)=>b.getTime()-a.getTime()))if(1>=Math.floor((d.getTime()-b.getTime())/864e5))c++,d=new Date(b);else break;return c}(d);return{totalWorkouts:f,frequency:Math.round(10*g)/10,currentStreak:h,longestStreak:function(a){if(0===a.length)return 0;let b=a.sort((a,b)=>a.getTime()-b.getTime()),c=1,d=1;for(let a=1;a<b.length;a++){let e=b[a-1];7>=Math.floor((b[a].getTime()-e.getTime())/864e5)?d++:(c=Math.max(c,d),d=1)}return Math.max(c,d)}(d),consistencyScore:Math.min(100,Math.round(g/3*100))}}(e.map(a=>a.workoutDate),c,d);return k.vF.debug("Consistency stats result",f),f}catch(a){return console.error("Error in getConsistencyStats:",a),{totalWorkouts:0,frequency:0,currentStreak:0,longestStreak:0,consistencyScore:0}}}),getWorkoutDates:f.sy.input(ap).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate);return(await b.db.select({workoutDate:p.workoutSessions.workoutDate}).from(p.workoutSessions).where((0,q.Uo)((0,q.eq)(p.workoutSessions.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate))).map(a=>a.workoutDate.toISOString().split("T")[0])}catch(a){return console.error("Error in getWorkoutDates:",a),[]}}),getPersonalRecords:f.sy.input(ar).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=[];return a.templateExerciseId?e=await at(b.db,a.templateExerciseId):a.exerciseName&&(e=[a.exerciseName]),0===e.length&&(e=(await b.db.select({exerciseName:p.sessionExercises.exerciseName}).from(p.sessionExercises).where((0,q.eq)(p.sessionExercises.user_id,b.user.id)).groupBy(p.sessionExercises.exerciseName)).map(a=>a.exerciseName)),await au(b,e,c,d,a.recordType)}catch(a){return console.error("Error in getPersonalRecords:",a),[]}}),getComparativeAnalysis:f.sy.input(ap).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),{startDate:e,endDate:f}=function(a,b){let c=b.getTime()-a.getTime(),d=new Date(a.getTime()-1);return{startDate:new Date(d.getTime()-c),endDate:d}}(c,d),g=await av(b,c,d),h=await av(b,e,f);return{current:g,previous:h,changes:function(a,b){let c=b.totalVolume>0?(a.totalVolume-b.totalVolume)/b.totalVolume*100:0,d=b.totalSets>0?(a.totalSets-b.totalSets)/b.totalSets*100:0;return{volumeChange:Math.round(10*c)/10,setsChange:Math.round(10*d)/10,repsChange:Math.round(10*(b.totalReps>0?(a.totalReps-b.totalReps)/b.totalReps*100:0))/10}}(g,h)}}catch(a){return console.error("Error in getComparativeAnalysis:",a),{current:{totalVolume:0,totalSets:0,totalReps:0,uniqueExercises:0,workoutCount:0},previous:{totalVolume:0,totalSets:0,totalReps:0,uniqueExercises:0,workoutCount:0},changes:{volumeChange:0,setsChange:0,repsChange:0}}}}),getVolumeByExercise:f.sy.input(ap).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=(await b.db.select({exerciseName:p.sessionExercises.exerciseName,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit,workoutDate:p.workoutSessions.workoutDate}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate))).map(a=>({exerciseName:a.exerciseName,weight:a.weight||0,reps:a.reps||0,sets:a.sets||0,workoutDate:a.workoutDate}));return function(a){let b=Object.values(a.reduce((a,b)=>{a[b.exerciseName]||(a[b.exerciseName]={exerciseName:b.exerciseName,totalVolume:0,totalSets:0,totalReps:0,sessionDates:new Set});let c=parseFloat(String(b.weight||"0")),d=b.reps||0,e=b.sets||1;return a[b.exerciseName].totalVolume+=c*d*e,a[b.exerciseName].totalSets+=e,a[b.exerciseName].totalReps+=d*e,a[b.exerciseName].sessionDates.add(b.workoutDate.toDateString()),a},{})).map(a=>({exerciseName:a.exerciseName,totalVolume:a.totalVolume,totalSets:a.totalSets,totalReps:a.totalReps,sessions:a.sessionDates.size,averageVolume:a.totalVolume/a.sessionDates.size})),c=b.reduce((a,b)=>a+b.totalVolume,0);return b.map(a=>({...a,percentOfTotal:c>0?a.totalVolume/c*100:0})).sort((a,b)=>b.totalVolume-a.totalVolume)}(e)}catch(a){return console.error("Error in getVolumeByExercise:",a),[]}}),getSetRepDistribution:f.sy.input(ap).query(async({input:a,ctx:b})=>{try{let{startDate:c,endDate:d}=K(a.timeRange,a.startDate,a.endDate),e=(await b.db.select({sets:p.sessionExercises.sets,reps:p.sessionExercises.reps,weight:p.sessionExercises.weight,exerciseName:p.sessionExercises.exerciseName}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,b.user.id),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d)))).map(a=>({sets:a.sets||0,reps:a.reps||0}));return function(a){let b=a.length,c=Object.entries(a.reduce((a,b)=>{let c=b.sets||0;return a[c]=(a[c]||0)+1,a},{})).map(([a,c])=>({sets:parseInt(a),count:c,percentage:c/b*100})).sort((a,b)=>a.sets-b.sets),d=Object.entries(a.reduce((a,b)=>{let c=b.reps||0;return a[c]=(a[c]||0)+1,a},{})).map(([a,c])=>({reps:parseInt(a),count:c,percentage:c/b*100})).sort((a,b)=>b.count-a.count).slice(0,10),e=Object.entries(a.reduce((a,b)=>{let c,d=b.reps||0;return a[c=d<=5?"1-5 reps (Strength)":d<=8?"6-8 reps (Strength-Hypertrophy)":d<=12?"9-12 reps (Hypertrophy)":d<=15?"13-15 reps (Hypertrophy-Endurance)":"16+ reps (Endurance)"]=(a[c]||0)+1,a},{})).map(([a,c])=>({range:a,count:c,percentage:c/b*100})).sort((a,b)=>b.count-a.count);return{setDistribution:c,repDistribution:d,repRangeDistribution:e,mostCommonSetRep:Object.values(a.reduce((a,b)=>{let c=`${b.sets||0}x${b.reps||0}`,d=b.sets||0,e=b.reps||0;return a[c]||(a[c]={sets:d,reps:e,count:0}),a[c].count++,a},{})).map(a=>({sets:a.sets,reps:a.reps,count:a.count,percentage:a.count/b*100})).sort((a,b)=>b.count-a.count).slice(0,8)}}(e)}catch(a){return console.error("Error in getSetRepDistribution:",a),{setDistribution:[],repDistribution:[],repRangeDistribution:[],mostCommonSetRep:[]}}}),getExerciseList:f.sy.query(async({ctx:a})=>{try{k.vF.debug("Getting exercise list",{userId:a.user.id});let b=await a.db.select({exerciseName:p.sessionExercises.exerciseName,lastUsed:(0,r.ll)`MAX(${p.workoutSessions.workoutDate})`,totalSets:(0,r.ll)`COUNT(*)`}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.eq)(p.sessionExercises.user_id,a.user.id)).groupBy(p.sessionExercises.exerciseName).orderBy((0,t.i)((0,r.ll)`MAX(${p.workoutSessions.workoutDate})`));return k.vF.debug("Exercise list result",{count:b.length}),b}catch(a){return k.vF.error("Error in getExerciseList",a),[]}})});async function at(a,b){try{if(!a||!a.query)return[];{let c=await a.query.exerciseLinks.findFirst({where:(0,q.eq)(p.exerciseLinks.templateExerciseId,b),with:{masterExercise:!0}});if(c)return(await a.query.exerciseLinks.findMany({where:(0,q.eq)(p.exerciseLinks.masterExerciseId,c.masterExerciseId),with:{templateExercise:!0}})).map(a=>{let b=a.templateExercise;return b&&"object"==typeof b&&!Array.isArray(b)&&"string"==typeof b.exerciseName?b.exerciseName:null}).filter(a=>"string"==typeof a);if("function"==typeof a.queryOne)try{let b=await a.queryOne();return b?[b.exerciseName]:[]}catch{}try{let c=await a.query.templateExercises.findFirst({where:(0,q.eq)(p.templateExercises.id,b)});return c?[c.exerciseName]:[]}catch{return[]}}}catch(a){return console.error("Error in getLinkedExerciseNames:",a),[]}}async function au(a,b,c,d,e){let f=[];for(let g of b){let b=[];try{b=await a.db.select({workoutDate:p.workoutSessions.workoutDate,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,a.user.id),(0,q.eq)(p.sessionExercises.exerciseName,g),(0,q.RO)(p.workoutSessions.workoutDate,c),(0,q.wJ)(p.workoutSessions.workoutDate,d))).orderBy((0,t.i)(p.workoutSessions.workoutDate))}catch(a){console.error("Error fetching exercise data for",g,a);continue}if(0===b.length)continue;let h=b.reduce((a,b)=>parseFloat(String(b.weight||"0"))>parseFloat(String(a.weight||"0"))?b:a),i=b.reduce((a,b)=>parseFloat(String(b.weight||"0"))*(b.reps||0)*(b.sets||1)>parseFloat(String(a.weight||"0"))*(a.reps||0)*(a.sets||1)?b:a);if(("weight"===e||"both"===e)&&f.push({exerciseName:g,recordType:"weight",weight:parseFloat(String(h.weight||"0")),reps:h.reps||0,sets:h.sets||0,unit:h.unit,workoutDate:h.workoutDate,oneRMEstimate:aw(parseFloat(String(h.weight||"0")),h.reps||1)}),"volume"===e||"both"===e){let a=parseFloat(String(i.weight||"0"))*(i.reps||0)*(i.sets||1);f.push({exerciseName:g,recordType:"volume",weight:parseFloat(String(i.weight||"0")),reps:i.reps||0,sets:i.sets||0,unit:i.unit,workoutDate:i.workoutDate,totalVolume:a})}}return f}async function av(a,b,c){try{let d=await a.db.select({exerciseName:p.sessionExercises.exerciseName,weight:p.sessionExercises.weight,reps:p.sessionExercises.reps,sets:p.sessionExercises.sets,unit:p.sessionExercises.unit}).from(p.sessionExercises).innerJoin(p.workoutSessions,(0,q.eq)(p.workoutSessions.id,p.sessionExercises.sessionId)).where((0,q.Uo)((0,q.eq)(p.sessionExercises.user_id,a.user.id),(0,q.RO)(p.workoutSessions.workoutDate,b),(0,q.wJ)(p.workoutSessions.workoutDate,c))),e=d.reduce((a,b)=>a+parseFloat(String(b.weight||"0"))*(b.reps||0)*(b.sets||1),0),f=d.reduce((a,b)=>a+(b.sets||1),0),g=d.reduce((a,b)=>a+(b.reps||0)*(b.sets||1),0),h=new Set(d.map(a=>a.exerciseName)).size;return{totalVolume:e,totalSets:f,totalReps:g,uniqueExercises:h,workoutCount:d.length>0?Math.ceil(d.length/(f/d.length)):0}}catch(a){return console.error("Error in getVolumeAndStrengthData:",a),{totalVolume:0,totalSets:0,totalReps:0,uniqueExercises:0,workoutCount:0}}}function aw(a,b){if(1===b)return a;if(a<=0||b<=0)return 0;if(b<=36){let c=36/(37-b)*a;if(c>0&&isFinite(c))return Math.round(100*c)/100}return Math.round(a*(1+b/30)*100)/100}var ax=c(23879),ay=c(89403);let az=(0,f.LO)({save:f.sy.input(e.Ik({sessionId:e.ai(),request:ax.z_,response:ax.DA,responseTimeMs:e.ai().optional(),modelUsed:e.Yj().optional()})).mutation(async({ctx:a,input:b})=>{try{let{sessionId:c,request:d,response:e,responseTimeMs:f,modelUsed:g}=b,h=e.per_exercise.reduce((a,b)=>a+b.sets.length,0),i=await a.db.insert(p.healthAdvice).values([{user_id:a.user.id,sessionId:c,request:JSON.stringify(d),response:JSON.stringify(e),readiness_rho:e.readiness.rho,overload_multiplier:e.readiness.overload_multiplier,session_predicted_chance:e.session_predicted_chance,user_accepted_suggestions:0,total_suggestions:h,response_time_ms:f?Math.round(f):null,model_used:g}]).onConflictDoUpdate({target:[p.healthAdvice.user_id,p.healthAdvice.sessionId],set:{request:JSON.stringify(d),response:JSON.stringify(e),readiness_rho:e.readiness.rho,overload_multiplier:e.readiness.overload_multiplier,session_predicted_chance:e.session_predicted_chance,total_suggestions:h,response_time_ms:f?Math.round(f):null,model_used:g}}).returning();if(!i?.[0])throw k.vF.error("Failed to save health advice - no result returned",{userId:a.user.id,sessionId:c}),Error("Failed to save health advice to database");return k.vF.info("Health advice saved successfully",{userId:a.user.id,sessionId:c,readinessRho:e.readiness.rho}),i[0]}catch(c){throw k.vF.error("Failed to save health advice to database",{error:c instanceof Error?c.message:"Unknown error",userId:a.user.id,sessionId:b.sessionId}),c}}),saveWithWellness:f.sy.input(e.Ik({sessionId:e.ai(),request:ay.PT,response:ax.DA,responseTimeMs:e.ai().optional(),modelUsed:e.Yj().optional(),wellnessDataId:e.ai().optional()})).mutation(async({ctx:a,input:b})=>{let{sessionId:c,request:d,response:e,responseTimeMs:f,modelUsed:g,wellnessDataId:h}=b;try{let b=e.per_exercise.reduce((a,b)=>a+b.sets.length,0);h&&((await a.db.select({id:p.wellnessData.id}).from(p.wellnessData).where((0,q.Uo)((0,q.eq)(p.wellnessData.id,h),(0,q.eq)(p.wellnessData.user_id,a.user.id))).limit(1)).length||k.vF.warn("Wellness data not found or access denied",{wellnessDataId:h,userId:a.user.id,sessionId:c}));let i=await a.db.insert(p.healthAdvice).values([{user_id:a.user.id,sessionId:c,request:JSON.stringify(d),response:JSON.stringify(e),readiness_rho:e.readiness.rho,overload_multiplier:e.readiness.overload_multiplier,session_predicted_chance:e.session_predicted_chance,user_accepted_suggestions:0,total_suggestions:b,response_time_ms:f?Math.round(f):null,model_used:g}]).onConflictDoUpdate({target:[p.healthAdvice.user_id,p.healthAdvice.sessionId],set:{request:JSON.stringify(d),response:JSON.stringify(e),readiness_rho:e.readiness.rho,overload_multiplier:e.readiness.overload_multiplier,session_predicted_chance:e.session_predicted_chance,total_suggestions:b,response_time_ms:f?Math.round(f):null,model_used:g}}).returning();return k.vF.info("Health advice saved with wellness context",{userId:a.user.id,sessionId:c,hasWellnessData:!!h,hasManualWellness:!!d.manual_wellness,readinessRho:e.readiness.rho}),i[0]}catch(b){throw k.vF.error("Failed to save health advice with wellness",{error:b instanceof Error?b.message:"Unknown error",userId:a.user.id,sessionId:c,wellnessDataId:h}),b}}),getBySessionId:f.sy.input(e.Ik({sessionId:e.ai().positive()})).query(async({ctx:a,input:b})=>(await a.db.select().from(p.healthAdvice).where((0,q.Uo)((0,q.eq)(p.healthAdvice.user_id,a.user.id),(0,q.eq)(p.healthAdvice.sessionId,b.sessionId))).limit(1))[0]??null),getHistory:f.sy.input(e.Ik({limit:e.ai().min(1).max(100).default(10),offset:e.ai().min(0).default(0)})).query(async({ctx:a,input:b})=>await a.db.select().from(p.healthAdvice).where((0,q.eq)(p.healthAdvice.user_id,a.user.id)).orderBy((0,t.i)(p.healthAdvice.createdAt)).limit(b.limit).offset(b.offset)),updateAcceptedSuggestions:f.sy.input(e.Ik({sessionId:e.ai(),acceptedCount:e.ai().min(0)})).mutation(async({ctx:a,input:b})=>(await a.db.update(p.healthAdvice).set({user_accepted_suggestions:b.acceptedCount}).where((0,q.Uo)((0,q.eq)(p.healthAdvice.user_id,a.user.id),(0,q.eq)(p.healthAdvice.sessionId,b.sessionId))).returning())[0]??null),delete:f.sy.input(e.Ik({sessionId:e.ai()})).mutation(async({ctx:a,input:b})=>(await a.db.delete(p.healthAdvice).where((0,q.Uo)((0,q.eq)(p.healthAdvice.user_id,a.user.id),(0,q.eq)(p.healthAdvice.sessionId,b.sessionId))).returning())[0]??null)}),aA={limit:j._.RATE_LIMIT_WORKOUT_OPERATIONS_PER_HOUR||60,windowMs:36e5},aB=(0,f.LO)({save:f.sy.input(ay.ag).use((d=l({endpoint:"wellness_submission",limit:aA.limit,windowMs:aA.windowMs,skipIfDisabled:!0}),f.t.middleware(async({ctx:a,next:b})=>(await d({ctx:a,next:b}),b())))).mutation(async({ctx:a,input:b})=>{let{sessionId:c,energyLevel:d,sleepQuality:e,deviceTimezone:f,notes:g,hasWhoopData:i,whoopData:j}=b;try{let b=a.user.id;if(c&&!(await a.db.select({id:p.workoutSessions.id}).from(p.workoutSessions).where((0,q.Uo)((0,q.eq)(p.workoutSessions.id,c),(0,q.eq)(p.workoutSessions.user_id,b))).limit(1)).length)throw new h.gt({code:"NOT_FOUND",message:"Workout session not found or access denied"});let l=new Date,m=new Date;Intl.supportedValuesOf("timeZone").includes(f)||k.vF.warn("Invalid timezone provided",{deviceTimezone:f,userId:b});let n=await a.db.insert(p.wellnessData).values({user_id:b,sessionId:c||null,date:l,energy_level:d,sleep_quality:e,device_timezone:f,submitted_at:m,has_whoop_data:i,whoop_data:j?JSON.stringify(j):null,notes:g??null}).onConflictDoUpdate({target:[p.wellnessData.user_id,p.wellnessData.sessionId],set:{energy_level:d,sleep_quality:e,device_timezone:f,submitted_at:m,has_whoop_data:i,whoop_data:j?JSON.stringify(j):null,notes:g??null,updatedAt:new Date}}).returning();return k.vF.info("Wellness data saved successfully",{userId:b,sessionId:c,hasWhoopData:i,energyLevel:d,sleepQuality:e}),n[0]}catch(b){if(k.vF.error("Failed to save wellness data",{error:b instanceof Error?b.message:"Unknown error",userId:a.user.id,sessionId:c}),b instanceof h.gt)throw b;throw new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to save wellness data"})}}),getBySessionId:f.sy.input(e.Ik({sessionId:e.ai()})).query(async({ctx:a,input:b})=>{try{let c=await a.db.select().from(p.wellnessData).innerJoin(p.workoutSessions,(0,q.Uo)((0,q.eq)(p.wellnessData.sessionId,p.workoutSessions.id),(0,q.eq)(p.workoutSessions.user_id,a.user.id))).where((0,q.Uo)((0,q.eq)(p.wellnessData.user_id,a.user.id),(0,q.eq)(p.wellnessData.sessionId,b.sessionId))).limit(1);return c[0]?.wellness_data??null}catch(c){throw k.vF.error("Failed to get wellness data by session",{error:c instanceof Error?c.message:"Unknown error",userId:a.user.id,sessionId:b.sessionId}),new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to retrieve wellness data"})}}),getHistory:f.sy.input(ay.Py).query(async({ctx:a,input:b})=>{try{let{limit:c,offset:d,startDate:e,endDate:f}=b,g=[(0,q.eq)(p.wellnessData.user_id,a.user.id)];return e&&g.push((0,q.RO)(p.wellnessData.date,e)),f&&g.push((0,q.wJ)(p.wellnessData.date,f)),await a.db.select().from(p.wellnessData).where((0,q.Uo)(...g)).orderBy((0,t.i)(p.wellnessData.date)).limit(c).offset(d)}catch(c){throw k.vF.error("Failed to get wellness history",{error:c instanceof Error?c.message:"Unknown error",userId:a.user.id,limit:b.limit,offset:b.offset}),new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to retrieve wellness history"})}}),getStats:f.sy.input(ay.AJ).query(async({ctx:a,input:b})=>{try{let{days:c}=b,d=new Date;d.setDate(d.getDate()-c);let e=await a.db.select({avgEnergyLevel:(0,s.Zf)(p.wellnessData.energy_level),avgSleepQuality:(0,s.Zf)(p.wellnessData.sleep_quality),totalEntries:(0,s.U9)(p.wellnessData.id)}).from(p.wellnessData).where((0,q.Uo)((0,q.eq)(p.wellnessData.user_id,a.user.id),(0,q.RO)(p.wellnessData.date,d))),f=new Date;f.setDate(f.getDate()-7);let g=await a.db.select({avgEnergyLevel:(0,s.Zf)(p.wellnessData.energy_level),avgSleepQuality:(0,s.Zf)(p.wellnessData.sleep_quality),totalEntries:(0,s.U9)(p.wellnessData.id)}).from(p.wellnessData).where((0,q.Uo)((0,q.eq)(p.wellnessData.user_id,a.user.id),(0,q.RO)(p.wellnessData.date,f)));return{period:{days:c,avgEnergyLevel:e[0]?.avgEnergyLevel?Number(e[0].avgEnergyLevel):null,avgSleepQuality:e[0]?.avgSleepQuality?Number(e[0].avgSleepQuality):null,totalEntries:e[0]?.totalEntries||0},recent:{days:7,avgEnergyLevel:g[0]?.avgEnergyLevel?Number(g[0].avgEnergyLevel):null,avgSleepQuality:g[0]?.avgSleepQuality?Number(g[0].avgSleepQuality):null,totalEntries:g[0]?.totalEntries||0}}}catch(c){throw k.vF.error("Failed to get wellness stats",{error:c instanceof Error?c.message:"Unknown error",userId:a.user.id,days:b.days}),new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to retrieve wellness statistics"})}}),delete:f.sy.input(e.Ik({sessionId:e.ai()})).mutation(async({ctx:a,input:b})=>{try{let c=await a.db.delete(p.wellnessData).where((0,q.Uo)((0,q.eq)(p.wellnessData.user_id,a.user.id),(0,q.eq)(p.wellnessData.sessionId,b.sessionId))).returning();if(!c.length)throw new h.gt({code:"NOT_FOUND",message:"Wellness data not found or access denied"});return k.vF.info("Wellness data deleted successfully",{userId:a.user.id,sessionId:b.sessionId}),c[0]}catch(c){if(k.vF.error("Failed to delete wellness data",{error:c instanceof Error?c.message:"Unknown error",userId:a.user.id,sessionId:b.sessionId}),c instanceof h.gt)throw c;throw new h.gt({code:"INTERNAL_SERVER_ERROR",message:"Failed to delete wellness data"})}}),checkExists:f.sy.input(e.Ik({sessionId:e.ai()})).query(async({ctx:a,input:b})=>{try{return(await a.db.select({id:p.wellnessData.id}).from(p.wellnessData).where((0,q.Uo)((0,q.eq)(p.wellnessData.user_id,a.user.id),(0,q.eq)(p.wellnessData.sessionId,b.sessionId))).limit(1)).length>0}catch(c){return k.vF.error("Failed to check wellness data existence",{error:c instanceof Error?c.message:"Unknown error",userId:a.user.id,sessionId:b.sessionId}),!1}})}),aC=(0,f.LO)({trackInteraction:f.sy.input(e.Ik({sessionId:e.ai(),exerciseName:e.Yj(),setId:e.Yj(),setIndex:e.ai().min(0),suggestedWeightKg:e.ai().optional().nullable(),suggestedReps:e.ai().int().positive().optional().nullable(),suggestedRestSeconds:e.ai().int().positive().optional().nullable(),suggestionRationale:e.Yj().optional(),action:e.k5(["accepted","rejected","modified"]),acceptedWeightKg:e.ai().optional(),acceptedReps:e.ai().int().positive().optional(),progressionType:e.Yj().optional(),readinessScore:e.ai().min(0).max(1).optional(),plateauDetected:e.zM().default(!1),interactionTimeMs:e.ai().int().positive().optional()})).mutation(async({input:a,ctx:b})=>{try{return await b.db.insert(p.aiSuggestionHistory).values({user_id:b.user.id,sessionId:a.sessionId,exerciseName:a.exerciseName,setId:a.setId,setIndex:a.setIndex,suggested_weight_kg:a.suggestedWeightKg,suggested_reps:a.suggestedReps,suggested_rest_seconds:a.suggestedRestSeconds,suggestion_rationale:a.suggestionRationale,action:a.action,accepted_weight_kg:a.acceptedWeightKg,accepted_reps:a.acceptedReps,progression_type:a.progressionType,readiness_score:a.readinessScore,plateau_detected:a.plateauDetected,interaction_time_ms:a.interactionTimeMs}),{success:!0}}catch(a){throw console.error("Failed to track suggestion interaction:",a),Error("Failed to track suggestion interaction")}}),getAnalytics:f.sy.input(e.Ik({days:e.ai().int().positive().default(30)})).query(async({input:a,ctx:b})=>{let c=new Date;c.setDate(c.getDate()-a.days);let d=await b.db.query.aiSuggestionHistory.findMany({where:(a,{eq:d,and:e,gte:f})=>e(d(a.user_id,b.user.id),f(a.createdAt,c)),orderBy:(a,{desc:b})=>[b(a.createdAt)],limit:100}),e=d.length,f=d.filter(a=>"accepted"===a.action).length,g=d.filter(a=>"rejected"===a.action).length;return{totalInteractions:e,acceptedCount:f,rejectedCount:g,modifiedCount:d.filter(a=>"modified"===a.action).length,acceptanceRate:Math.round(10*(e>0?f/e*100:0))/10,exerciseStats:d.reduce((a,b)=>(a[b.exerciseName]||(a[b.exerciseName]={total:0,accepted:0,rejected:0,modified:0}),a[b.exerciseName].total++,"accepted"===b.action&&a[b.exerciseName].accepted++,"rejected"===b.action&&a[b.exerciseName].rejected++,"modified"===b.action&&a[b.exerciseName].modified++,a),{}),recentInteractions:d.slice(0,10)}})}),aD=e.Ik({sessionId:e.ai().int().positive(),locale:e.Yj().optional(),timezone:e.Yj().optional(),skipIfActive:e.zM().optional()}),aE=e.Ik({sessionId:e.ai().int().positive(),includeInactive:e.zM().optional(),limit:e.ai().int().min(1).max(25).optional()}),aF=e.Ik({limit:e.ai().int().min(1).max(50).default(10)});async function aG(a,b,c,d){if(d){let e=await a.query.sessionDebriefs.findFirst({where:(0,q.Uo)((0,q.eq)(p.sessionDebriefs.id,d),(0,q.eq)(p.sessionDebriefs.user_id,b),(0,q.eq)(p.sessionDebriefs.sessionId,c))});if(!e)throw Error("Debrief not found");return e}let e=await a.query.sessionDebriefs.findFirst({where:(0,q.Uo)((0,q.eq)(p.sessionDebriefs.user_id,b),(0,q.eq)(p.sessionDebriefs.sessionId,c),(0,q.eq)(p.sessionDebriefs.isActive,!0)),orderBy:(a,{desc:b})=>[b(a.version)]});if(!e)throw Error("No active debrief found");return e}let aH=(0,f.LO)({generateAndSave:f.sy.input(aD).mutation(async({ctx:a,input:b})=>{try{let{debrief:c,content:d}=await T({dbClient:a.db,userId:a.user.id,sessionId:b.sessionId,locale:b.locale,timezone:b.timezone,skipIfActive:b.skipIfActive??!1,trigger:"manual",requestId:a.requestId});return{debrief:c,content:d}}catch(a){if(a instanceof S)throw new h.gt({code:"TOO_MANY_REQUESTS",message:a.message});throw a}}),regenerate:f.sy.input(aD).mutation(async({ctx:a,input:b})=>{try{let{debrief:c,content:d}=await T({dbClient:a.db,userId:a.user.id,sessionId:b.sessionId,locale:b.locale,timezone:b.timezone,skipIfActive:!1,trigger:"regenerate",requestId:a.requestId});return{debrief:c,content:d}}catch(a){if(a instanceof S)throw new h.gt({code:"TOO_MANY_REQUESTS",message:a.message});throw a}}),listBySession:f.sy.input(aE).query(async({ctx:a,input:b})=>{let c=[(0,q.eq)(p.sessionDebriefs.user_id,a.user.id),(0,q.eq)(p.sessionDebriefs.sessionId,b.sessionId)];return b.includeInactive||c.push((0,q.kZ)(p.sessionDebriefs.dismissedAt)),await a.db.query.sessionDebriefs.findMany({where:(0,q.Uo)(...c),orderBy:(a,{desc:b})=>[b(a.isActive),b(a.version)],limit:b.limit??10,with:{session:{columns:{workoutDate:!0},with:{template:{columns:{name:!0}}}}}})}),listRecent:f.sy.input(aF).query(async({ctx:a,input:b})=>await a.db.query.sessionDebriefs.findMany({where:(0,q.Uo)((0,q.eq)(p.sessionDebriefs.user_id,a.user.id),(0,q.kZ)(p.sessionDebriefs.dismissedAt)),orderBy:(a,{desc:b})=>[b(a.isActive),b(a.createdAt)],limit:b.limit,with:{session:{columns:{workoutDate:!0,id:!0},with:{template:{columns:{name:!0}}}}}})),markViewed:f.sy.input(F).mutation(async({ctx:a,input:b})=>{let c=await aG(a.db,a.user.id,b.sessionId,b.debriefId),[d]=await a.db.update(p.sessionDebriefs).set({viewedAt:new Date}).where((0,q.eq)(p.sessionDebriefs.id,c.id)).returning();return k.vF.info("session_debrief.viewed",{userId:a.user.id,sessionId:b.sessionId,debriefId:c.id,requestId:a.requestId}),d}),togglePinned:f.sy.input(F).mutation(async({ctx:a,input:b})=>{let c=await aG(a.db,a.user.id,b.sessionId,b.debriefId),d=new Date,e=!!c.pinnedAt,[f]=await a.db.update(p.sessionDebriefs).set({pinnedAt:e?null:d}).where((0,q.eq)(p.sessionDebriefs.id,c.id)).returning();return k.vF.info("session_debrief.toggle_pin",{userId:a.user.id,sessionId:b.sessionId,debriefId:c.id,pinned:!e,requestId:a.requestId}),f}),dismiss:f.sy.input(F).mutation(async({ctx:a,input:b})=>{let c=await aG(a.db,a.user.id,b.sessionId,b.debriefId),[d]=await a.db.update(p.sessionDebriefs).set({dismissedAt:new Date,isActive:!1}).where((0,q.eq)(p.sessionDebriefs.id,c.id)).returning();return k.vF.info("session_debrief.dismissed",{userId:a.user.id,sessionId:b.sessionId,debriefId:c.id,requestId:a.requestId}),d}),updateMetadata:f.sy.input(F.extend({metadata:e.g1(e.Yj(),e.bz())})).mutation(async({ctx:a,input:b})=>{let c=await aG(a.db,a.user.id,b.sessionId,b.debriefId),d=E.shape.metadata.parse(b.metadata),[e]=await a.db.update(p.sessionDebriefs).set({metadata:JSON.stringify(d)}).where((0,q.eq)(p.sessionDebriefs.id,c.id)).returning();return k.vF.info("session_debrief.metadata_updated",{userId:a.user.id,sessionId:b.sessionId,debriefId:c.id,requestId:a.requestId}),e})}),aI=(0,f.LO)({post:g,templates:x,workouts:W,preferences:aa,jokes:ad,whoop:ae,webhooks:af,exercises:ao,insights:ai,progress:as,healthAdvice:az,wellness:aB,suggestions:aC,sessionDebriefs:aH}),aJ=(0,f.OA)(aI)},89403:(a,b,c)=>{c.d(b,{AJ:()=>h,PT:()=>i,Py:()=>g,ag:()=>f});var d=c(59256);let e=d.Ik({energyLevel:d.ai().min(1).max(10),sleepQuality:d.ai().min(1).max(10),deviceTimezone:d.Yj().min(1),notes:d.Yj().max(500).optional()});d.Ik({id:d.ai().optional(),userId:d.Yj(),sessionId:d.ai().optional(),date:d.p6(),wellnessData:e,hasWhoopData:d.zM(),whoopData:d.Ik({recovery_score:d.ai().min(0).max(100).optional(),sleep_performance:d.ai().min(0).max(100).optional(),hrv_now_ms:d.ai().positive().optional(),hrv_baseline_ms:d.ai().positive().optional(),rhr_now_bpm:d.ai().positive().optional(),rhr_baseline_bpm:d.ai().positive().optional(),yesterday_strain:d.ai().min(0).max(21).optional()}).optional(),deviceTimezone:d.Yj(),submittedAt:d.p6(),notes:d.Yj().max(500).optional()});let f=d.Ik({sessionId:d.ai().optional(),energyLevel:d.ai().min(1).max(10),sleepQuality:d.ai().min(1).max(10),deviceTimezone:d.Yj().min(1),notes:d.Yj().max(500).optional(),hasWhoopData:d.zM().default(!1),whoopData:d.Ik({recovery_score:d.ai().min(0).max(100).optional(),sleep_performance:d.ai().min(0).max(100).optional(),hrv_now_ms:d.ai().positive().optional(),hrv_baseline_ms:d.ai().positive().optional(),rhr_now_bpm:d.ai().positive().optional(),rhr_baseline_bpm:d.ai().positive().optional(),yesterday_strain:d.ai().min(0).max(21).optional()}).optional()}),g=d.Ik({limit:d.ai().min(1).max(100).default(30),offset:d.ai().min(0).default(0),startDate:d.p6().optional(),endDate:d.p6().optional()}),h=d.Ik({days:d.ai().min(1).max(365).default(30)}),i=d.Ik({session_id:d.Yj(),user_profile:d.Ik({experience_level:d.k5(["beginner","intermediate","advanced"]),min_increment_kg:d.ai().positive().optional(),preferred_rpe:d.ai().min(1).max(10).optional()}),whoop:d.Ik({recovery_score:d.ai().min(0).max(100).optional(),sleep_performance:d.ai().min(0).max(100).optional(),hrv_now_ms:d.ai().positive().optional(),hrv_baseline_ms:d.ai().positive().optional(),rhr_now_bpm:d.ai().positive().optional(),rhr_baseline_bpm:d.ai().positive().optional(),yesterday_strain:d.ai().min(0).max(21).optional()}).optional(),manual_wellness:d.Ik({energy_level:d.ai().min(1).max(10).optional(),sleep_quality:d.ai().min(1).max(10).optional(),has_whoop_data:d.zM(),device_timezone:d.Yj().optional(),notes:d.Yj().max(500).optional()}).optional(),workout_plan:d.Ik({exercises:d.YO(d.Ik({exercise_id:d.Yj(),name:d.Yj(),tags:d.YO(d.k5(["strength","hypertrophy","endurance"])),sets:d.YO(d.Ik({set_id:d.Yj(),target_reps:d.ai().positive().optional().nullable(),target_weight_kg:d.ai().positive().optional().nullable(),target_rpe:d.ai().min(1).max(10).optional().nullable()}))}))}),prior_bests:d.Ik({by_exercise_id:d.g1(d.Yj(),d.Ik({best_total_volume_kg:d.ai().positive().optional().nullable(),best_e1rm_kg:d.ai().positive().optional().nullable()}))})})}};