-- Swole Tracker Database Setup Script
-- Complete database schema for the workout tracking application with Supabase Auth
-- Run this script on a fresh PostgreSQL database to set up all tables

-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- =============================================================================
-- CORE WORKOUT TABLES
-- =============================================================================

-- Workout Templates Table
CREATE TABLE IF NOT EXISTS "swole-tracker_workout_template" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(256) NOT NULL,
  "user_id" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Template Exercises Table
CREATE TABLE IF NOT EXISTS "swole-tracker_template_exercise" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "templateId" integer NOT NULL REFERENCES "swole-tracker_workout_template"("id") ON DELETE CASCADE,
  "exerciseName" varchar(256) NOT NULL,
  "orderIndex" integer NOT NULL DEFAULT 0,
  "linkingRejected" boolean NOT NULL DEFAULT false,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Workout Sessions Table
CREATE TABLE IF NOT EXISTS "swole-tracker_workout_session" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "templateId" integer NOT NULL REFERENCES "swole-tracker_workout_template"("id") ON DELETE CASCADE,
  "workoutDate" timestamp with time zone NOT NULL,
  -- Phase 2 additions
  "theme_used" varchar(20), -- 'dark' | 'light' | 'system' (validated in app layer)
  "device_type" varchar(20), -- 'android' | 'ios' | 'desktop' | 'ipad' | 'other'
  "perf_metrics" json, -- optional perf/telemetry blob
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Session Exercises Table
CREATE TABLE IF NOT EXISTS "swole-tracker_session_exercise" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "sessionId" integer NOT NULL REFERENCES "swole-tracker_workout_session"("id") ON DELETE CASCADE,
  "templateExerciseId" integer REFERENCES "swole-tracker_template_exercise"("id") ON DELETE SET NULL,
  "exerciseName" varchar(256) NOT NULL,
  "setOrder" integer NOT NULL DEFAULT 0,
  "weight" decimal(6,2),
  "reps" integer,
  "sets" integer,
  "unit" varchar(10) NOT NULL DEFAULT 'kg',
  -- Phase 2 additions
  "rpe" smallint, -- 6-10 recommended in UI, not enforced at DB
  "rest_seconds" integer, -- rest time in seconds
  "is_estimate" boolean NOT NULL DEFAULT false,
  "is_default_applied" boolean NOT NULL DEFAULT false,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- =============================================================================
-- EXERCISE LINKING SYSTEM
-- =============================================================================

-- Master Exercises Table (for cross-template exercise linking)
CREATE TABLE IF NOT EXISTS "swole-tracker_master_exercise" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "name" varchar(256) NOT NULL,
  "normalizedName" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Exercise Links Table (maps template exercises to master exercises)
CREATE TABLE IF NOT EXISTS "swole-tracker_exercise_link" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "templateExerciseId" integer NOT NULL REFERENCES "swole-tracker_template_exercise"("id") ON DELETE CASCADE,
  "masterExerciseId" integer NOT NULL REFERENCES "swole-tracker_master_exercise"("id") ON DELETE CASCADE,
  "user_id" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- =============================================================================
-- USER MIGRATION & MANAGEMENT
-- =============================================================================

-- User Migration Mapping (temporary table for Clerk -> Supabase migration)
-- Note: With Supabase Auth, we don't need a users table as Supabase handles user management
-- Instead, we reference Supabase user IDs directly in our app tables
CREATE TABLE IF NOT EXISTS "swole-tracker_user_migration_mapping" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "clerk_user_id" varchar(256) NOT NULL UNIQUE, -- Old Clerk user ID
  "supabase_user_id" varchar(256) NOT NULL UNIQUE, -- New Supabase Auth user ID
  "email" varchar(256) NOT NULL, -- Email to help with matching
  "migrated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "migration_status" varchar(50) NOT NULL DEFAULT 'pending', -- pending, completed, failed
  "migration_notes" text -- Any notes about the migration
);

-- =============================================================================
-- USER PREFERENCES & SETTINGS
-- =============================================================================

-- User Preferences Table
CREATE TABLE IF NOT EXISTS "swole-tracker_user_preferences" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL UNIQUE,
  "defaultWeightUnit" varchar(10) NOT NULL DEFAULT 'kg',
  -- Phase 2 additions
  "predictive_defaults_enabled" boolean NOT NULL DEFAULT false,
  "right_swipe_action" varchar(32) NOT NULL DEFAULT 'collapse_expand',
  -- Wellness feature
  "enable_manual_wellness" boolean NOT NULL DEFAULT false,
  -- AI Suggestions progression preferences
  "progression_type" varchar(20) NOT NULL DEFAULT 'adaptive', -- 'linear' | 'percentage' | 'adaptive'
  "linear_progression_kg" decimal(4,2) DEFAULT 2.5, -- Default 2.5kg increment
  "percentage_progression" decimal(4,2) DEFAULT 2.5, -- Default 2.5% increment
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- =============================================================================
-- EXTERNAL INTEGRATIONS
-- =============================================================================

-- User Integrations Table (OAuth tokens for external services)
CREATE TABLE IF NOT EXISTS "swole-tracker_user_integration" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "provider" varchar(50) NOT NULL,
  "accessToken" text NOT NULL,
  "refreshToken" text,
  "expiresAt" timestamp with time zone,
  "scope" varchar(500),
  "isActive" boolean NOT NULL DEFAULT true,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- External Workouts from Whoop
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_workout" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoopWorkoutId" varchar(256) NOT NULL UNIQUE,
  "start" timestamp with time zone NOT NULL,
  "end" timestamp with time zone NOT NULL,
  "timezone_offset" varchar(20),
  "sport_name" varchar(100),
  "score_state" varchar(50),
  "score" json,
  "during" json,
  "zone_duration" json,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- =============================================================================
-- COMPREHENSIVE WHOOP DATA STORAGE (PHASE 0)
-- =============================================================================

-- WHOOP Recovery Data (read:recovery)
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_recovery" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoop_recovery_id" varchar(256) NOT NULL UNIQUE,
  "cycle_id" varchar(256),
  "date" date NOT NULL,
  
  -- Recovery metrics
  "recovery_score" integer CHECK ("recovery_score" >= 0 AND "recovery_score" <= 100),
  "hrv_rmssd_milli" decimal(10,2),
  "hrv_rmssd_baseline" decimal(10,2),
  "resting_heart_rate" integer,
  "resting_heart_rate_baseline" integer,
  
  -- Full recovery data
  "raw_data" json,
  
  -- Metadata
  "timezone_offset" varchar(20),
  "webhook_received_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- WHOOP Cycles Data (read:cycles)  
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_cycle" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoop_cycle_id" varchar(256) NOT NULL UNIQUE,
  
  -- Cycle timing
  "start" timestamp with time zone NOT NULL,
  "end" timestamp with time zone NOT NULL,
  "timezone_offset" varchar(20),
  
  -- Cycle metrics
  "day_strain" decimal(5,2),
  "average_heart_rate" integer,
  "max_heart_rate" integer,
  "kilojoule" decimal(10,2),
  
  -- Full cycle data
  "raw_data" json,
  
  -- Metadata
  "webhook_received_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- WHOOP Sleep Data (read:sleep)
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_sleep" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoop_sleep_id" varchar(256) NOT NULL UNIQUE,
  
  -- Sleep timing
  "start" timestamp with time zone NOT NULL,
  "end" timestamp with time zone NOT NULL,
  "timezone_offset" varchar(20),
  
  -- Sleep metrics
  "sleep_performance_percentage" integer CHECK ("sleep_performance_percentage" >= 0 AND "sleep_performance_percentage" <= 100),
  "total_sleep_time_milli" integer,
  "sleep_efficiency_percentage" decimal(5,2),
  "slow_wave_sleep_time_milli" integer,
  "rem_sleep_time_milli" integer,
  "light_sleep_time_milli" integer,
  "wake_time_milli" integer,
  "arousal_time_milli" integer,
  "disturbance_count" integer,
  "sleep_latency_milli" integer,
  
  -- Full sleep data
  "raw_data" json,
  
  -- Metadata
  "webhook_received_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- WHOOP Profile Data (read:profile)
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_profile" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoop_user_id" varchar(256) NOT NULL,
  
  -- Profile data
  "email" varchar(255),
  "first_name" varchar(100),
  "last_name" varchar(100),
  
  -- Full profile data
  "raw_data" json,
  
  -- Metadata
  "webhook_received_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "last_updated" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- WHOOP Body Measurements (read:body_measurement)
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_body_measurement" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoop_measurement_id" varchar(256) NOT NULL UNIQUE,
  
  -- Measurement data
  "height_meter" decimal(5,3),
  "weight_kilogram" decimal(6,2),
  "max_heart_rate" integer,
  
  -- Metadata
  "measurement_date" date,
  
  -- Full measurement data
  "raw_data" json,
  
  -- Metadata
  "webhook_received_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- AI Health Advice - Store AI advice responses for historical tracking
CREATE TABLE IF NOT EXISTS "swole-tracker_health_advice" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "sessionId" integer NOT NULL REFERENCES "swole-tracker_workout_session"("id") ON DELETE CASCADE,
  -- Store the full request and response for historical tracking
  "request" json NOT NULL, -- HealthAdviceRequest object
  "response" json NOT NULL, -- HealthAdviceResponse object
  -- Extract key metrics for easy querying
  "readiness_rho" decimal(3,2), -- 0.00-1.00
  "overload_multiplier" decimal(3,2), -- 0.90-1.10
  "session_predicted_chance" decimal(3,2), -- 0.00-1.00
  -- Track user interaction
  "user_accepted_suggestions" integer NOT NULL DEFAULT 0,
  "total_suggestions" integer NOT NULL,
  -- Performance tracking
  "response_time_ms" integer,
  "model_used" varchar(100),
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Wellness Data - Manual wellness inputs for enhanced workout intelligence
CREATE TABLE IF NOT EXISTS "swole-tracker_wellness_data" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "sessionId" integer REFERENCES "swole-tracker_workout_session"("id") ON DELETE CASCADE,
  "date" date NOT NULL,
  
  -- Manual wellness inputs (2 total)
  "energy_level" integer CHECK ("energy_level" >= 1 AND "energy_level" <= 10),
  "sleep_quality" integer CHECK ("sleep_quality" >= 1 AND "sleep_quality" <= 10),
  
  -- Metadata
  "device_timezone" varchar(50), -- Store device timezone for context
  "submitted_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL, -- Prevent backfill attempts
  
  -- Context
  "has_whoop_data" boolean NOT NULL DEFAULT false,
  "whoop_data" json, -- Store actual Whoop metrics for comparison
  "notes" text CHECK (LENGTH("notes") <= 500), -- Limit notes length
  
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone,
  
  -- Constraints & Security
  CHECK("submitted_at" >= "createdAt" - INTERVAL '5 minutes'), -- Prevent historical backfill
  CHECK("date" >= CURRENT_DATE - INTERVAL '1 day') -- Only allow current/recent dates
);

-- AI Suggestion History - Track user interactions with AI suggestions
CREATE TABLE IF NOT EXISTS "swole-tracker_ai_suggestion_history" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "sessionId" integer NOT NULL REFERENCES "swole-tracker_workout_session"("id") ON DELETE CASCADE,
  "exerciseName" varchar(256) NOT NULL,
  "setId" varchar(100) NOT NULL, -- Format: templateExerciseId_setIndex
  "setIndex" integer NOT NULL, -- 0-based set index
  
  -- Suggestion details
  "suggested_weight_kg" decimal(6,2),
  "suggested_reps" integer,
  "suggested_rest_seconds" integer,
  "suggestion_rationale" text,
  
  -- User interaction
  "action" varchar(20) NOT NULL, -- 'accepted', 'rejected', 'modified'
  "accepted_weight_kg" decimal(6,2), -- What user actually used
  "accepted_reps" integer,
  
  -- Context
  "progression_type" varchar(20), -- User's progression preference at time of suggestion
  "readiness_score" decimal(3,2), -- Readiness at time of suggestion
  "plateau_detected" boolean NOT NULL DEFAULT false,
  
  -- Metadata
  "interaction_time_ms" integer, -- Time from suggestion to interaction
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- =============================================================================
-- UTILITY TABLES
-- =============================================================================

-- Daily Jokes Table
CREATE TABLE IF NOT EXISTS "swole-tracker_daily_joke" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "joke" text NOT NULL,
  "aiModel" varchar(100) NOT NULL,
  "prompt" text NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Rate Limiting Table
CREATE TABLE IF NOT EXISTS "swole-tracker_rate_limit" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "endpoint" varchar(100) NOT NULL,
  "requests" integer NOT NULL DEFAULT 0,
  "windowStart" timestamp with time zone NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Webhook Events Log Table
CREATE TABLE IF NOT EXISTS "swole-tracker_webhook_event" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "provider" varchar(50) NOT NULL,
  "eventType" varchar(100) NOT NULL,
  "userId" varchar(256),
  "externalUserId" varchar(256),
  "externalEntityId" varchar(256),
  "payload" json,
  "headers" json,
  "status" varchar(20) NOT NULL DEFAULT 'received',
  "error" text,
  "processingTime" integer,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "processedAt" timestamp with time zone
);

-- =============================================================================
-- INDEXES FOR PERFORMANCE
-- =============================================================================

-- Workout Templates Indexes
CREATE INDEX IF NOT EXISTS "template_user_id_idx" ON "swole-tracker_workout_template"("user_id");
CREATE INDEX IF NOT EXISTS "template_name_idx" ON "swole-tracker_workout_template"("name");

-- Template Exercises Indexes
CREATE INDEX IF NOT EXISTS "template_exercise_user_id_idx" ON "swole-tracker_template_exercise"("user_id");
CREATE INDEX IF NOT EXISTS "template_exercise_template_id_idx" ON "swole-tracker_template_exercise"("templateId");
CREATE INDEX IF NOT EXISTS "template_exercise_order_idx" ON "swole-tracker_template_exercise"("templateId", "orderIndex");

-- Workout Sessions Indexes
CREATE INDEX IF NOT EXISTS "session_user_id_idx" ON "swole-tracker_workout_session"("user_id");
CREATE INDEX IF NOT EXISTS "session_template_id_idx" ON "swole-tracker_workout_session"("templateId");
CREATE INDEX IF NOT EXISTS "session_workout_date_idx" ON "swole-tracker_workout_session"("workoutDate");

-- Session Exercises Indexes
CREATE INDEX IF NOT EXISTS "session_exercise_user_id_idx" ON "swole-tracker_session_exercise"("user_id");
CREATE INDEX IF NOT EXISTS "session_exercise_session_id_idx" ON "swole-tracker_session_exercise"("sessionId");
CREATE INDEX IF NOT EXISTS "session_exercise_template_exercise_id_idx" ON "swole-tracker_session_exercise"("templateExerciseId");
CREATE INDEX IF NOT EXISTS "session_exercise_name_idx" ON "swole-tracker_session_exercise"("exerciseName");

-- Master Exercises Indexes
CREATE INDEX IF NOT EXISTS "master_exercise_user_id_idx" ON "swole-tracker_master_exercise"("user_id");
CREATE INDEX IF NOT EXISTS "master_exercise_name_idx" ON "swole-tracker_master_exercise"("name");
CREATE INDEX IF NOT EXISTS "master_exercise_normalized_name_idx" ON "swole-tracker_master_exercise"("normalizedName");
CREATE INDEX IF NOT EXISTS "master_exercise_user_normalized_idx" ON "swole-tracker_master_exercise"("user_id", "normalizedName");

-- Exercise Links Indexes
CREATE INDEX IF NOT EXISTS "exercise_link_template_exercise_idx" ON "swole-tracker_exercise_link"("templateExerciseId");
CREATE INDEX IF NOT EXISTS "exercise_link_master_exercise_idx" ON "swole-tracker_exercise_link"("masterExerciseId");
CREATE INDEX IF NOT EXISTS "exercise_link_user_id_idx" ON "swole-tracker_exercise_link"("user_id");

-- User Migration Mapping Indexes
CREATE INDEX IF NOT EXISTS "user_migration_clerk_id_idx" ON "swole-tracker_user_migration_mapping"("clerk_user_id");
CREATE INDEX IF NOT EXISTS "user_migration_supabase_id_idx" ON "swole-tracker_user_migration_mapping"("supabase_user_id");
CREATE INDEX IF NOT EXISTS "user_migration_email_idx" ON "swole-tracker_user_migration_mapping"("email");

-- User Preferences Indexes
CREATE INDEX IF NOT EXISTS "user_preferences_user_id_idx" ON "swole-tracker_user_preferences"("user_id");

-- User Integrations Indexes
CREATE INDEX IF NOT EXISTS "user_integration_user_id_idx" ON "swole-tracker_user_integration"("user_id");
CREATE INDEX IF NOT EXISTS "user_integration_provider_idx" ON "swole-tracker_user_integration"("provider");
CREATE INDEX IF NOT EXISTS "user_integration_user_provider_idx" ON "swole-tracker_user_integration"("user_id", "provider");

-- Whoop Workouts Indexes
CREATE INDEX IF NOT EXISTS "external_workout_whoop_user_id_idx" ON "swole-tracker_whoop_workout"("user_id");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_workout_id_idx" ON "swole-tracker_whoop_workout"("whoopWorkoutId");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_start_idx" ON "swole-tracker_whoop_workout"("start");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_user_start_idx" ON "swole-tracker_whoop_workout"("user_id", "start");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_user_workout_id_idx" ON "swole-tracker_whoop_workout"("user_id", "whoopWorkoutId");

-- WHOOP Recovery Indexes
CREATE INDEX IF NOT EXISTS "whoop_recovery_user_id_idx" ON "swole-tracker_whoop_recovery"("user_id");
CREATE INDEX IF NOT EXISTS "whoop_recovery_user_date_idx" ON "swole-tracker_whoop_recovery"("user_id", "date");
CREATE INDEX IF NOT EXISTS "whoop_recovery_whoop_id_idx" ON "swole-tracker_whoop_recovery"("whoop_recovery_id");
CREATE INDEX IF NOT EXISTS "whoop_recovery_cycle_id_idx" ON "swole-tracker_whoop_recovery"("cycle_id");
CREATE INDEX IF NOT EXISTS "whoop_recovery_user_received_idx" ON "swole-tracker_whoop_recovery"("user_id", "webhook_received_at");

-- WHOOP Cycles Indexes
CREATE INDEX IF NOT EXISTS "whoop_cycle_user_id_idx" ON "swole-tracker_whoop_cycle"("user_id");
CREATE INDEX IF NOT EXISTS "whoop_cycle_user_start_idx" ON "swole-tracker_whoop_cycle"("user_id", "start");
CREATE INDEX IF NOT EXISTS "whoop_cycle_whoop_id_idx" ON "swole-tracker_whoop_cycle"("whoop_cycle_id");
CREATE INDEX IF NOT EXISTS "whoop_cycle_strain_idx" ON "swole-tracker_whoop_cycle"("user_id", "day_strain");

-- WHOOP Sleep Indexes
CREATE INDEX IF NOT EXISTS "whoop_sleep_user_id_idx" ON "swole-tracker_whoop_sleep"("user_id");
CREATE INDEX IF NOT EXISTS "whoop_sleep_user_start_idx" ON "swole-tracker_whoop_sleep"("user_id", "start");
CREATE INDEX IF NOT EXISTS "whoop_sleep_whoop_id_idx" ON "swole-tracker_whoop_sleep"("whoop_sleep_id");
CREATE INDEX IF NOT EXISTS "whoop_sleep_performance_idx" ON "swole-tracker_whoop_sleep"("user_id", "sleep_performance_percentage");

-- WHOOP Profile Indexes
CREATE INDEX IF NOT EXISTS "whoop_profile_user_id_idx" ON "swole-tracker_whoop_profile"("user_id");
CREATE INDEX IF NOT EXISTS "whoop_profile_whoop_user_id_idx" ON "swole-tracker_whoop_profile"("whoop_user_id");

-- WHOOP Body Measurement Indexes
CREATE INDEX IF NOT EXISTS "whoop_body_measurement_user_id_idx" ON "swole-tracker_whoop_body_measurement"("user_id");
CREATE INDEX IF NOT EXISTS "whoop_body_measurement_date_idx" ON "swole-tracker_whoop_body_measurement"("user_id", "measurement_date");
CREATE INDEX IF NOT EXISTS "whoop_body_measurement_whoop_id_idx" ON "swole-tracker_whoop_body_measurement"("whoop_measurement_id");

-- Daily Jokes Indexes
CREATE INDEX IF NOT EXISTS "daily_joke_user_id_idx" ON "swole-tracker_daily_joke"("user_id");
CREATE INDEX IF NOT EXISTS "daily_joke_created_at_idx" ON "swole-tracker_daily_joke"("createdAt");
CREATE INDEX IF NOT EXISTS "daily_joke_user_date_idx" ON "swole-tracker_daily_joke"("user_id", "createdAt");

-- Rate Limiting Indexes
CREATE INDEX IF NOT EXISTS "rate_limit_user_endpoint_idx" ON "swole-tracker_rate_limit"("user_id", "endpoint");
CREATE INDEX IF NOT EXISTS "rate_limit_window_idx" ON "swole-tracker_rate_limit"("windowStart");

-- Health Advice Indexes
CREATE INDEX IF NOT EXISTS "health_advice_user_id_idx" ON "swole-tracker_health_advice"("user_id");
CREATE INDEX IF NOT EXISTS "health_advice_session_id_idx" ON "swole-tracker_health_advice"("sessionId");
CREATE INDEX IF NOT EXISTS "health_advice_created_at_idx" ON "swole-tracker_health_advice"("createdAt");
CREATE INDEX IF NOT EXISTS "health_advice_user_created_idx" ON "swole-tracker_health_advice"("user_id", "createdAt");

-- Wellness Data Indexes
CREATE INDEX IF NOT EXISTS "wellness_data_user_id_idx" ON "swole-tracker_wellness_data"("user_id");
CREATE INDEX IF NOT EXISTS "wellness_data_user_date_idx" ON "swole-tracker_wellness_data"("user_id", "date");
CREATE INDEX IF NOT EXISTS "wellness_data_user_session_idx" ON "swole-tracker_wellness_data"("user_id", "sessionId");
CREATE INDEX IF NOT EXISTS "wellness_data_submitted_at_idx" ON "swole-tracker_wellness_data"("user_id", "submitted_at");

-- Webhook Events Indexes
CREATE INDEX IF NOT EXISTS "webhook_event_provider_idx" ON "swole-tracker_webhook_event"("provider");
CREATE INDEX IF NOT EXISTS "webhook_event_type_idx" ON "swole-tracker_webhook_event"("eventType");
CREATE INDEX IF NOT EXISTS "webhook_event_user_id_idx" ON "swole-tracker_webhook_event"("userId");
CREATE INDEX IF NOT EXISTS "webhook_event_external_user_id_idx" ON "swole-tracker_webhook_event"("externalUserId");
CREATE INDEX IF NOT EXISTS "webhook_event_status_idx" ON "swole-tracker_webhook_event"("status");
CREATE INDEX IF NOT EXISTS "webhook_event_created_at_idx" ON "swole-tracker_webhook_event"("createdAt");

-- AI Suggestion History Indexes
CREATE INDEX IF NOT EXISTS "ai_suggestion_history_user_id_idx" ON "swole-tracker_ai_suggestion_history"("user_id");
CREATE INDEX IF NOT EXISTS "ai_suggestion_history_session_idx" ON "swole-tracker_ai_suggestion_history"("sessionId");
CREATE INDEX IF NOT EXISTS "ai_suggestion_history_exercise_idx" ON "swole-tracker_ai_suggestion_history"("exerciseName");
CREATE INDEX IF NOT EXISTS "ai_suggestion_history_action_idx" ON "swole-tracker_ai_suggestion_history"("action");
CREATE INDEX IF NOT EXISTS "ai_suggestion_history_created_at_idx" ON "swole-tracker_ai_suggestion_history"("createdAt");
CREATE INDEX IF NOT EXISTS "ai_suggestion_history_user_created_idx" ON "swole-tracker_ai_suggestion_history"("user_id", "createdAt");

-- =============================================================================
-- UNIQUE CONSTRAINTS
-- =============================================================================

-- Prevent duplicate master exercise names per user
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'master_exercise_user_name_unique'
    ) THEN
        ALTER TABLE "swole-tracker_master_exercise" 
        ADD CONSTRAINT "master_exercise_user_name_unique" 
        UNIQUE ("user_id", "normalizedName");
    END IF;
END $$;

-- Each template exercise can only be linked to one master exercise
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'exercise_link_template_exercise_unique'
    ) THEN
        ALTER TABLE "swole-tracker_exercise_link" 
        ADD CONSTRAINT "exercise_link_template_exercise_unique" 
        UNIQUE ("templateExerciseId");
    END IF;
END $$;

-- One health advice per session per user
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'health_advice_user_session_unique'
    ) THEN
        ALTER TABLE "swole-tracker_health_advice" 
        ADD CONSTRAINT "health_advice_user_session_unique" 
        UNIQUE ("user_id", "sessionId");
    END IF;
END $$;

-- One wellness entry per session per user (prevents race conditions)
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'wellness_data_user_session_unique'
    ) THEN
        ALTER TABLE "swole-tracker_wellness_data" 
        ADD CONSTRAINT "wellness_data_user_session_unique" 
        UNIQUE ("user_id", "sessionId");
    END IF;
END $$;

-- One recovery entry per user per date
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'whoop_recovery_user_date_unique'
    ) THEN
        ALTER TABLE "swole-tracker_whoop_recovery" 
        ADD CONSTRAINT "whoop_recovery_user_date_unique" 
        UNIQUE ("user_id", "date");
    END IF;
END $$;

-- One profile per user
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'whoop_profile_user_unique'
    ) THEN
        ALTER TABLE "swole-tracker_whoop_profile" 
        ADD CONSTRAINT "whoop_profile_user_unique" 
        UNIQUE ("user_id");
    END IF;
END $$;

-- =============================================================================
-- COMMENTS FOR DOCUMENTATION
-- =============================================================================

COMMENT ON TABLE "swole-tracker_workout_template" IS 'User-defined workout templates';
COMMENT ON TABLE "swole-tracker_template_exercise" IS 'Exercises within workout templates';
COMMENT ON TABLE "swole-tracker_workout_session" IS 'Actual workout sessions performed by users with theme and device tracking';
COMMENT ON TABLE "swole-tracker_session_exercise" IS 'Individual sets and exercises within workout sessions with RPE and rest tracking';
COMMENT ON TABLE "swole-tracker_master_exercise" IS 'Master exercise definitions for cross-template linking';
COMMENT ON TABLE "swole-tracker_exercise_link" IS 'Links template exercises to master exercises for tracking across templates';
COMMENT ON TABLE "swole-tracker_user_migration_mapping" IS 'Temporary mapping table for Clerk to Supabase user migration';
COMMENT ON TABLE "swole-tracker_user_preferences" IS 'User-specific application preferences including predictive defaults and swipe actions';
COMMENT ON TABLE "swole-tracker_user_integration" IS 'OAuth tokens and settings for external service integrations';
COMMENT ON TABLE "swole-tracker_whoop_workout" IS 'Imported workout data from Whoop devices';
COMMENT ON TABLE "swole-tracker_whoop_recovery" IS 'WHOOP recovery data from webhooks (read:recovery scope)';
COMMENT ON TABLE "swole-tracker_whoop_cycle" IS 'WHOOP cycle data from webhooks (read:cycles scope)';
COMMENT ON TABLE "swole-tracker_whoop_sleep" IS 'WHOOP sleep data from webhooks (read:sleep scope)';
COMMENT ON TABLE "swole-tracker_whoop_profile" IS 'WHOOP profile data from webhooks (read:profile scope)';
COMMENT ON TABLE "swole-tracker_whoop_body_measurement" IS 'WHOOP body measurement data from webhooks (read:body_measurement scope)';
COMMENT ON TABLE "swole-tracker_health_advice" IS 'AI-generated health and workout advice with performance tracking';
COMMENT ON TABLE "swole-tracker_wellness_data" IS 'Manual wellness inputs (energy/sleep) for enhanced workout intelligence with anti-backfill safeguards';
COMMENT ON TABLE "swole-tracker_ai_suggestion_history" IS 'AI suggestion tracking for user interaction analytics and model improvement';
COMMENT ON TABLE "swole-tracker_daily_joke" IS 'AI-generated daily jokes for users';
COMMENT ON TABLE "swole-tracker_rate_limit" IS 'Rate limiting tracking for API endpoints';
COMMENT ON TABLE "swole-tracker_webhook_event" IS 'Audit log for webhook events from external services';

COMMENT ON COLUMN "swole-tracker_template_exercise"."linkingRejected" IS 'Track if user explicitly chose not to link this template exercise to a master exercise';
COMMENT ON COLUMN "swole-tracker_session_exercise"."setOrder" IS 'Order of sets within an exercise (0-based)';
COMMENT ON COLUMN "swole-tracker_master_exercise"."normalizedName" IS 'Lowercased, trimmed exercise name for fuzzy matching';

-- =============================================================================
-- SETUP COMPLETE
-- =============================================================================

-- Insert default data or run any necessary initialization here if needed

-- Success message
DO $$
BEGIN
    RAISE NOTICE 'Swole Tracker database setup completed successfully!';
    RAISE NOTICE 'All tables, indexes, and constraints have been created.';
    RAISE NOTICE 'Database configured for Supabase Auth with application-level security.';
    RAISE NOTICE 'User data isolation enforced through user_id filtering in application layer.';
    RAISE NOTICE 'The database is ready for use with the Swole Tracker application.';
END $$;
