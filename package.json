{
  "name": "swole-tracker",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "bun run tokens:build && ./scripts/dev-with-d1.sh",
    "dev:remote": "bun run scripts/generate-wrangler-infisical.ts && NODE_ENV=production bun run tokens:build && opennextjs-cloudflare build --config ./wrangler.toml --noMinify && wrangler dev --x-remote-bindings",
    "deploy:staging": "INFISICAL_ENVIRONMENT=staging bun run scripts/generate-wrangler-infisical.ts && NODE_ENV=production bun run tokens:build && opennextjs-cloudflare build --config ./wrangler.toml && wrangler deploy",
    "deploy:production": "INFISICAL_ENVIRONMENT=production bun run scripts/generate-wrangler-infisical.ts && NODE_ENV=production bun run tokens:build && opennextjs-cloudflare build --config ./wrangler.toml && wrangler deploy",
    "build": "npm run tokens:build && next build",
    "check": "bun run lint && bun run typecheck",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:push": "drizzle-kit push",
    "db:studio": "drizzle-kit studio",
    "db:migrate:remote": "wrangler d1 migrations apply swole-tracker-dev --remote",
    "db:studio:remote": "wrangler d1 execute swole-tracker-dev --command='SELECT 1' --remote && drizzle-kit studio",
    "db:push:remote": "wrangler d1 execute swole-tracker-dev --file=./schema.sql --remote",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,mdx}\" --cache",
    "format:write": "prettier --write \"**/*.{ts,tsx,js,jsx,mdx}\" --cache",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "preview": "bun run tokens:build && next build && next start",
    "start": "next start",
    "tokens:build": "node scripts/build-tokens.js && node scripts/build-mobile-tokens.js",
    "tokens:watch": "node scripts/build-tokens.js --watch",
    "tokens:mobile": "node scripts/build-mobile-tokens.js",
    "typecheck": "tsc --noEmit",
    "types:generate": "wrangler types",
    "test": "npx vitest",
    "test:ci": "npx vitest run --coverage",
    "test:watch": "npx vitest",
    "coverage": "npx vitest run --coverage",
    "e2e": "playwright test",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:report": "playwright show-report",
    "migrate:staging": "tsx scripts/migrate-data.ts --env=staging --dry-run",
    "migrate:staging:execute": "tsx scripts/migrate-data.ts --env=staging --execute",
    "migrate:production": "tsx scripts/migrate-data.ts --env=production --dry-run",
    "migrate:production:execute": "tsx scripts/migrate-data.ts --env=production --execute",
    "test:whoop-webhooks": "tsx scripts/test-whoop-webhooks.ts",
    "test:whoop-webhooks:staging": "tsx scripts/test-whoop-webhooks.ts --env=staging",
    "test:whoop-webhooks:verbose": "tsx scripts/test-whoop-webhooks.ts --verbose",
    "test:comprehensive": "tsx scripts/comprehensive-tests.ts",
    "test:comprehensive:staging": "tsx scripts/comprehensive-tests.ts --env=staging",
    "test:comprehensive:verbose": "tsx scripts/comprehensive-tests.ts --verbose",
    "test:performance": "tsx scripts/performance-tests.ts",
    "test:performance:staging": "tsx scripts/performance-tests.ts --env=staging",
    "test:performance:load": "tsx scripts/performance-tests.ts --load-test --users=25 --duration=60",
    "test:mobile": "tsx scripts/mobile-validation.ts",
    "test:mobile:staging": "tsx scripts/mobile-validation.ts --env=staging",
    "test:mobile:verbose": "tsx scripts/mobile-validation.ts --verbose"
  },
  "dependencies": {
    "@ai-sdk/google": "^2.0.7",
    "@ai-sdk/openai": "^2.0.17",
    "@ai-sdk/provider-utils": "^3.0.4",
    "@cloudflare/d1": "^1.4.1",
    "@hookform/resolvers": "^5.2.1",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@t3-oss/env-nextjs": "^0.12.0",
    "@tanstack/query-sync-storage-persister": "^5.83.1",
    "@tanstack/react-query": "^5.84.2",
    "@tanstack/react-query-persist-client": "^5.84.2",
    "@trpc/client": "^11.4.4",
    "@trpc/react-query": "^11.4.4",
    "@trpc/server": "^11.4.4",
    "@workos-inc/node": "^7.67.0",
    "ai": "^5.0.19",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^17.2.1",
    "drizzle-orm": "^0.44.4",
    "lucide-react": "^0.540.0",
    "next": "^15.5.0",
    "oauth4webapi": "^3.6.2",
    "playwright": "^1.55.0",
    "postgres": "^3.4.7",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-hook-form": "^7.62.0",
    "server-only": "^0.0.1",
    "superjson": "^2.2.2",
    "tailwind-merge": "^3.3.1",
    "wrangler": "4.32.0",
    "zod": "^4.0.17"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20250821.0",
    "@opennextjs/cloudflare": "^1.6.5",
    "@eslint/eslintrc": "^3.3.1",
    "@playwright/mcp": "^0.0.34",
    "@playwright/test": "^1.55.0",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bun": "latest",
    "@types/minimatch": "^6.0.0",
    "@types/node": "^22.10.2",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "@vitest/coverage-v8": "^3.2.4",
    "drizzle-kit": "^0.31.4",
    "eslint": "^9.33.0",
    "eslint-config-next": "^15.5.0",
    "eslint-plugin-drizzle": "^0.2.3",
    "happy-dom": "^18.0.1",
    "jsdom": "^26.1.0",
    "msw": "^2.10.4",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "supertest": "^7.1.4",
    "tailwindcss": "^4.1.11",
    "tsx": "^4.20.4",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.40.0",
    "vitest": "^3.2.4"
  },
  "ct3aMetadata": {
    "initVersion": "7.39.3"
  },
  "overrides": {
    "esbuild": "^0.25.0"
  },
  "packageManager": "bun@1.2.19",
  "engines": {
    "node": "22.18.0",
    "bun": "1.2.19"
  },
  "volta": {
    "node": "22.18.0"
  },
  "workspaces": [
    "packages/*",
    "apps/*"
  ]
}
