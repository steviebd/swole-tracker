-- Migration to convert to composite primary keys with user_id first
-- WARNING: This will recreate tables and may cause data loss
-- Backup your data before running this migration

BEGIN;

-- Step 1: Create new tables with composite primary keys
CREATE TABLE "swole-tracker_workout_template_new" (
  "user_id" text NOT NULL,
  "id" integer GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone,
  PRIMARY KEY ("user_id", "id")
);

CREATE TABLE "swole-tracker_template_exercise_new" (
  "user_id" text NOT NULL,
  "id" integer GENERATED BY DEFAULT AS IDENTITY,
  "templateId" integer NOT NULL,
  "exerciseName" varchar(256) NOT NULL,
  "orderIndex" integer DEFAULT 0 NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY ("user_id", "id")
);

CREATE TABLE "swole-tracker_workout_session_new" (
  "user_id" text NOT NULL,
  "id" integer GENERATED BY DEFAULT AS IDENTITY,
  "templateId" integer NOT NULL,
  "workoutDate" timestamp with time zone NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone,
  PRIMARY KEY ("user_id", "id")
);

CREATE TABLE "swole-tracker_session_exercise_new" (
  "user_id" text NOT NULL,
  "id" integer GENERATED BY DEFAULT AS IDENTITY,
  "sessionId" integer NOT NULL,
  "templateExerciseId" integer,
  "exerciseName" varchar(256) NOT NULL,
  "weight" numeric(6, 2),
  "reps" integer,
  "sets" integer,
  "unit" varchar(10) DEFAULT 'kg' NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY ("user_id", "id")
);

CREATE TABLE "swole-tracker_user_preferences_new" (
  "user_id" text PRIMARY KEY,
  "defaultWeightUnit" varchar(10) DEFAULT 'kg' NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Step 2: Migrate data (if tables exist and have compatible structure)
-- Note: This assumes existing tables have user_id/userId fields

-- Migrate workout templates
INSERT INTO "swole-tracker_workout_template_new" (user_id, id, name, "createdAt", "updatedAt")
SELECT 
  COALESCE("user_id", "userId") as user_id,
  id,
  name,
  "createdAt",
  "updatedAt"
FROM "swole-tracker_workout_template" 
WHERE COALESCE("user_id", "userId") IS NOT NULL;

-- Migrate template exercises  
INSERT INTO "swole-tracker_template_exercise_new" (user_id, id, "templateId", "exerciseName", "orderIndex", "createdAt")
SELECT 
  COALESCE("user_id", "userId") as user_id,
  id,
  "templateId",
  "exerciseName", 
  "orderIndex",
  "createdAt"
FROM "swole-tracker_template_exercise"
WHERE COALESCE("user_id", "userId") IS NOT NULL;

-- Migrate workout sessions
INSERT INTO "swole-tracker_workout_session_new" (user_id, id, "templateId", "workoutDate", "createdAt", "updatedAt")
SELECT 
  COALESCE("user_id", "userId") as user_id,
  id,
  "templateId", 
  "workoutDate",
  "createdAt",
  "updatedAt"
FROM "swole-tracker_workout_session"
WHERE COALESCE("user_id", "userId") IS NOT NULL;

-- Migrate session exercises
INSERT INTO "swole-tracker_session_exercise_new" (user_id, id, "sessionId", "templateExerciseId", "exerciseName", weight, reps, sets, unit, "createdAt")
SELECT 
  COALESCE("user_id", "userId") as user_id,
  id,
  "sessionId",
  "templateExerciseId",
  "exerciseName",
  weight,
  reps, 
  sets,
  unit,
  "createdAt"
FROM "swole-tracker_session_exercise"
WHERE COALESCE("user_id", "userId") IS NOT NULL;

-- Migrate user preferences
INSERT INTO "swole-tracker_user_preferences_new" (user_id, "defaultWeightUnit", "createdAt", "updatedAt")
SELECT 
  COALESCE("user_id", "userId") as user_id,
  "defaultWeightUnit",
  "createdAt", 
  "updatedAt"
FROM "swole-tracker_user_preferences"
WHERE COALESCE("user_id", "userId") IS NOT NULL;

-- Step 3: Drop old tables and rename new ones
DROP TABLE IF EXISTS "swole-tracker_session_exercise";
DROP TABLE IF EXISTS "swole-tracker_template_exercise";  
DROP TABLE IF EXISTS "swole-tracker_workout_session";
DROP TABLE IF EXISTS "swole-tracker_workout_template";
DROP TABLE IF EXISTS "swole-tracker_user_preferences";

ALTER TABLE "swole-tracker_workout_template_new" RENAME TO "swole-tracker_workout_template";
ALTER TABLE "swole-tracker_template_exercise_new" RENAME TO "swole-tracker_template_exercise";
ALTER TABLE "swole-tracker_workout_session_new" RENAME TO "swole-tracker_workout_session";
ALTER TABLE "swole-tracker_session_exercise_new" RENAME TO "swole-tracker_session_exercise"; 
ALTER TABLE "swole-tracker_user_preferences_new" RENAME TO "swole-tracker_user_preferences";

-- Step 4: Create indexes
CREATE INDEX "template_name_idx" ON "swole-tracker_workout_template" USING btree ("name");
CREATE INDEX "template_exercise_template_id_idx" ON "swole-tracker_template_exercise" USING btree ("templateId");
CREATE INDEX "template_exercise_order_idx" ON "swole-tracker_template_exercise" USING btree ("templateId", "orderIndex");
CREATE INDEX "session_template_id_idx" ON "swole-tracker_workout_session" USING btree ("templateId");
CREATE INDEX "session_workout_date_idx" ON "swole-tracker_workout_session" USING btree ("workoutDate");
CREATE INDEX "session_exercise_session_id_idx" ON "swole-tracker_session_exercise" USING btree ("sessionId");
CREATE INDEX "session_exercise_template_exercise_id_idx" ON "swole-tracker_session_exercise" USING btree ("templateExerciseId");
CREATE INDEX "session_exercise_name_idx" ON "swole-tracker_session_exercise" USING btree ("exerciseName");

-- Step 5: Enable RLS (optional)
ALTER TABLE "swole-tracker_workout_template" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "swole-tracker_template_exercise" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "swole-tracker_workout_session" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "swole-tracker_session_exercise" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "swole-tracker_user_preferences" ENABLE ROW LEVEL SECURITY;

COMMIT;
