-- Swole Tracker Database Setup Script
-- Complete database schema for the workout tracking application
-- Run this script on a fresh PostgreSQL database to set up all tables

-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- =============================================================================
-- CORE WORKOUT TABLES
-- =============================================================================

-- Workout Templates Table
CREATE TABLE IF NOT EXISTS "swole-tracker_workout_template" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "name" varchar(256) NOT NULL,
  "user_id" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Template Exercises Table
CREATE TABLE IF NOT EXISTS "swole-tracker_template_exercise" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "templateId" integer NOT NULL REFERENCES "swole-tracker_workout_template"("id") ON DELETE CASCADE,
  "exerciseName" varchar(256) NOT NULL,
  "orderIndex" integer NOT NULL DEFAULT 0,
  "linkingRejected" boolean NOT NULL DEFAULT false,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Workout Sessions Table
CREATE TABLE IF NOT EXISTS "swole-tracker_workout_session" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "templateId" integer NOT NULL REFERENCES "swole-tracker_workout_template"("id"),
  "workoutDate" timestamp with time zone NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Session Exercises Table
CREATE TABLE IF NOT EXISTS "swole-tracker_session_exercise" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "sessionId" integer NOT NULL REFERENCES "swole-tracker_workout_session"("id") ON DELETE CASCADE,
  "templateExerciseId" integer REFERENCES "swole-tracker_template_exercise"("id") ON DELETE SET NULL,
  "exerciseName" varchar(256) NOT NULL,
  "setOrder" integer NOT NULL DEFAULT 0,
  "weight" decimal(6,2),
  "reps" integer,
  "sets" integer,
  "unit" varchar(10) NOT NULL DEFAULT 'kg',
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- =============================================================================
-- EXERCISE LINKING SYSTEM
-- =============================================================================

-- Master Exercises Table (for cross-template exercise linking)
CREATE TABLE IF NOT EXISTS "swole-tracker_master_exercise" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "name" varchar(256) NOT NULL,
  "normalizedName" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Exercise Links Table (maps template exercises to master exercises)
CREATE TABLE IF NOT EXISTS "swole-tracker_exercise_link" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "templateExerciseId" integer NOT NULL REFERENCES "swole-tracker_template_exercise"("id") ON DELETE CASCADE,
  "masterExerciseId" integer NOT NULL REFERENCES "swole-tracker_master_exercise"("id") ON DELETE CASCADE,
  "user_id" varchar(256) NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- =============================================================================
-- USER PREFERENCES & SETTINGS
-- =============================================================================

-- User Preferences Table
CREATE TABLE IF NOT EXISTS "swole-tracker_user_preferences" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL UNIQUE,
  "defaultWeightUnit" varchar(10) NOT NULL DEFAULT 'kg',
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- =============================================================================
-- EXTERNAL INTEGRATIONS
-- =============================================================================

-- User Integrations Table (OAuth tokens for external services)
CREATE TABLE IF NOT EXISTS "swole-tracker_user_integration" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "provider" varchar(50) NOT NULL,
  "accessToken" text NOT NULL,
  "refreshToken" text,
  "expiresAt" timestamp with time zone,
  "scope" varchar(500),
  "isActive" boolean NOT NULL DEFAULT true,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- External Workouts from Whoop
CREATE TABLE IF NOT EXISTS "swole-tracker_whoop_workout" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "whoopWorkoutId" varchar(256) NOT NULL UNIQUE,
  "start" timestamp with time zone NOT NULL,
  "end" timestamp with time zone NOT NULL,
  "timezone_offset" varchar(20),
  "sport_name" varchar(100),
  "score_state" varchar(50),
  "score" json,
  "during" json,
  "zone_duration" json,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- =============================================================================
-- UTILITY TABLES
-- =============================================================================

-- Daily Jokes Table
CREATE TABLE IF NOT EXISTS "swole-tracker_daily_joke" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "joke" text NOT NULL,
  "aiModel" varchar(100) NOT NULL,
  "prompt" text NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Rate Limiting Table
CREATE TABLE IF NOT EXISTS "swole-tracker_rate_limit" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar(256) NOT NULL,
  "endpoint" varchar(100) NOT NULL,
  "requests" integer NOT NULL DEFAULT 0,
  "windowStart" timestamp with time zone NOT NULL,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "updatedAt" timestamp with time zone
);

-- Webhook Events Log Table
CREATE TABLE IF NOT EXISTS "swole-tracker_webhook_event" (
  "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "provider" varchar(50) NOT NULL,
  "eventType" varchar(100) NOT NULL,
  "userId" varchar(256),
  "externalUserId" varchar(256),
  "externalEntityId" varchar(256),
  "payload" json,
  "headers" json,
  "status" varchar(20) NOT NULL DEFAULT 'received',
  "error" text,
  "processingTime" integer,
  "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "processedAt" timestamp with time zone
);

-- =============================================================================
-- INDEXES FOR PERFORMANCE
-- =============================================================================

-- Workout Templates Indexes
CREATE INDEX IF NOT EXISTS "template_user_id_idx" ON "swole-tracker_workout_template"("user_id");
CREATE INDEX IF NOT EXISTS "template_name_idx" ON "swole-tracker_workout_template"("name");

-- Template Exercises Indexes
CREATE INDEX IF NOT EXISTS "template_exercise_user_id_idx" ON "swole-tracker_template_exercise"("user_id");
CREATE INDEX IF NOT EXISTS "template_exercise_template_id_idx" ON "swole-tracker_template_exercise"("templateId");
CREATE INDEX IF NOT EXISTS "template_exercise_order_idx" ON "swole-tracker_template_exercise"("templateId", "orderIndex");

-- Workout Sessions Indexes
CREATE INDEX IF NOT EXISTS "session_user_id_idx" ON "swole-tracker_workout_session"("user_id");
CREATE INDEX IF NOT EXISTS "session_template_id_idx" ON "swole-tracker_workout_session"("templateId");
CREATE INDEX IF NOT EXISTS "session_workout_date_idx" ON "swole-tracker_workout_session"("workoutDate");

-- Session Exercises Indexes
CREATE INDEX IF NOT EXISTS "session_exercise_user_id_idx" ON "swole-tracker_session_exercise"("user_id");
CREATE INDEX IF NOT EXISTS "session_exercise_session_id_idx" ON "swole-tracker_session_exercise"("sessionId");
CREATE INDEX IF NOT EXISTS "session_exercise_template_exercise_id_idx" ON "swole-tracker_session_exercise"("templateExerciseId");
CREATE INDEX IF NOT EXISTS "session_exercise_name_idx" ON "swole-tracker_session_exercise"("exerciseName");

-- Master Exercises Indexes
CREATE INDEX IF NOT EXISTS "master_exercise_user_id_idx" ON "swole-tracker_master_exercise"("user_id");
CREATE INDEX IF NOT EXISTS "master_exercise_name_idx" ON "swole-tracker_master_exercise"("name");
CREATE INDEX IF NOT EXISTS "master_exercise_normalized_name_idx" ON "swole-tracker_master_exercise"("normalizedName");
CREATE INDEX IF NOT EXISTS "master_exercise_user_normalized_idx" ON "swole-tracker_master_exercise"("user_id", "normalizedName");

-- Exercise Links Indexes
CREATE INDEX IF NOT EXISTS "exercise_link_template_exercise_idx" ON "swole-tracker_exercise_link"("templateExerciseId");
CREATE INDEX IF NOT EXISTS "exercise_link_master_exercise_idx" ON "swole-tracker_exercise_link"("masterExerciseId");
CREATE INDEX IF NOT EXISTS "exercise_link_user_id_idx" ON "swole-tracker_exercise_link"("user_id");

-- User Preferences Indexes
CREATE INDEX IF NOT EXISTS "user_preferences_user_id_idx" ON "swole-tracker_user_preferences"("user_id");

-- User Integrations Indexes
CREATE INDEX IF NOT EXISTS "user_integration_user_id_idx" ON "swole-tracker_user_integration"("user_id");
CREATE INDEX IF NOT EXISTS "user_integration_provider_idx" ON "swole-tracker_user_integration"("provider");
CREATE INDEX IF NOT EXISTS "user_integration_user_provider_idx" ON "swole-tracker_user_integration"("user_id", "provider");

-- Whoop Workouts Indexes
CREATE INDEX IF NOT EXISTS "external_workout_whoop_user_id_idx" ON "swole-tracker_whoop_workout"("user_id");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_workout_id_idx" ON "swole-tracker_whoop_workout"("whoopWorkoutId");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_start_idx" ON "swole-tracker_whoop_workout"("start");
CREATE INDEX IF NOT EXISTS "external_workout_whoop_user_start_idx" ON "swole-tracker_whoop_workout"("user_id", "start");

-- Daily Jokes Indexes
CREATE INDEX IF NOT EXISTS "daily_joke_user_id_idx" ON "swole-tracker_daily_joke"("user_id");
CREATE INDEX IF NOT EXISTS "daily_joke_created_at_idx" ON "swole-tracker_daily_joke"("createdAt");
CREATE INDEX IF NOT EXISTS "daily_joke_user_date_idx" ON "swole-tracker_daily_joke"("user_id", "createdAt");

-- Rate Limiting Indexes
CREATE INDEX IF NOT EXISTS "rate_limit_user_endpoint_idx" ON "swole-tracker_rate_limit"("user_id", "endpoint");
CREATE INDEX IF NOT EXISTS "rate_limit_window_idx" ON "swole-tracker_rate_limit"("windowStart");

-- Webhook Events Indexes
CREATE INDEX IF NOT EXISTS "webhook_event_provider_idx" ON "swole-tracker_webhook_event"("provider");
CREATE INDEX IF NOT EXISTS "webhook_event_type_idx" ON "swole-tracker_webhook_event"("eventType");
CREATE INDEX IF NOT EXISTS "webhook_event_user_id_idx" ON "swole-tracker_webhook_event"("userId");
CREATE INDEX IF NOT EXISTS "webhook_event_external_user_id_idx" ON "swole-tracker_webhook_event"("externalUserId");
CREATE INDEX IF NOT EXISTS "webhook_event_status_idx" ON "swole-tracker_webhook_event"("status");
CREATE INDEX IF NOT EXISTS "webhook_event_created_at_idx" ON "swole-tracker_webhook_event"("createdAt");

-- =============================================================================
-- UNIQUE CONSTRAINTS
-- =============================================================================

-- Prevent duplicate master exercise names per user
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'master_exercise_user_name_unique'
    ) THEN
        ALTER TABLE "swole-tracker_master_exercise" 
        ADD CONSTRAINT "master_exercise_user_name_unique" 
        UNIQUE ("user_id", "normalizedName");
    END IF;
END $$;

-- Each template exercise can only be linked to one master exercise
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'exercise_link_template_exercise_unique'
    ) THEN
        ALTER TABLE "swole-tracker_exercise_link" 
        ADD CONSTRAINT "exercise_link_template_exercise_unique" 
        UNIQUE ("templateExerciseId");
    END IF;
END $$;

-- =============================================================================
-- COMMENTS FOR DOCUMENTATION
-- =============================================================================

COMMENT ON TABLE "swole-tracker_workout_template" IS 'User-defined workout templates';
COMMENT ON TABLE "swole-tracker_template_exercise" IS 'Exercises within workout templates';
COMMENT ON TABLE "swole-tracker_workout_session" IS 'Actual workout sessions performed by users';
COMMENT ON TABLE "swole-tracker_session_exercise" IS 'Individual sets and exercises within workout sessions';
COMMENT ON TABLE "swole-tracker_master_exercise" IS 'Master exercise definitions for cross-template linking';
COMMENT ON TABLE "swole-tracker_exercise_link" IS 'Links template exercises to master exercises for tracking across templates';
COMMENT ON TABLE "swole-tracker_user_preferences" IS 'User-specific application preferences';
COMMENT ON TABLE "swole-tracker_user_integration" IS 'OAuth tokens and settings for external service integrations';
COMMENT ON TABLE "swole-tracker_whoop_workout" IS 'Imported workout data from Whoop devices';
COMMENT ON TABLE "swole-tracker_daily_joke" IS 'AI-generated daily jokes for users';
COMMENT ON TABLE "swole-tracker_rate_limit" IS 'Rate limiting tracking for API endpoints';
COMMENT ON TABLE "swole-tracker_webhook_event" IS 'Audit log for webhook events from external services';

COMMENT ON COLUMN "swole-tracker_template_exercise"."linkingRejected" IS 'Track if user explicitly chose not to link this template exercise to a master exercise';
COMMENT ON COLUMN "swole-tracker_session_exercise"."setOrder" IS 'Order of sets within an exercise (0-based)';
COMMENT ON COLUMN "swole-tracker_master_exercise"."normalizedName" IS 'Lowercased, trimmed exercise name for fuzzy matching';

-- =============================================================================
-- SETUP COMPLETE
-- =============================================================================

-- Insert default data or run any necessary initialization here if needed

-- Success message
DO $$
BEGIN
    RAISE NOTICE 'Swole Tracker database setup completed successfully!';
    RAISE NOTICE 'All tables, indexes, and constraints have been created.';
    RAISE NOTICE 'The database is ready for use with the Swole Tracker application.';
END $$;
