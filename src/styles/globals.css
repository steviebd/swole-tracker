@import "tailwindcss";
@import "./tokens/generated-base.css";
@import "./tokens/generated-light.css";
@import "./tokens/dark.css";


@theme {
  /* Typography mapped from design tokens */
  --font-sans: var(--font-fontFamily-sans);
  --font-display: var(--font-fontFamily-display);
  
  /* Tailwind color mappings to our semantic tokens */
  --color-primary-50: hsl(from var(--color-primary-default) h s calc(l + 45%));
  --color-primary-100: hsl(from var(--color-primary-default) h s calc(l + 35%));
  --color-primary-200: hsl(from var(--color-primary-default) h s calc(l + 25%));
  --color-primary-300: hsl(from var(--color-primary-default) h s calc(l + 15%));
  --color-primary-400: hsl(from var(--color-primary-default) h s calc(l + 5%));
  --color-primary-500: var(--color-primary-default);
  --color-primary-600: var(--color-primary-hover);
  --color-primary-700: var(--color-primary-active);
  --color-primary-800: hsl(from var(--color-primary-active) h s calc(l - 10%));
  --color-primary-900: hsl(from var(--color-primary-active) h s calc(l - 20%));
  --color-primary-950: hsl(from var(--color-primary-active) h s calc(l - 30%));
  
  /* Surface colors */
  --color-background: var(--color-background-app);
  --color-foreground: var(--color-text-primary);
  --color-card: var(--color-background-card);
  --color-popover: var(--color-background-surface);
  --color-muted: var(--color-background-surface);
  --color-muted-foreground: var(--color-text-muted);
  --color-border: var(--color-border-default);
  --color-input: var(--color-background-surface);
  --color-ring: var(--color-primary-default);
  
  /* Semantic state colors */
  --color-destructive: var(--color-status-danger-default);
  --color-destructive-foreground: var(--color-text-primary);
  
  /* Border radius from tokens */
  --radius: var(--radius-md);
  
  /* Spacing mapped from tokens */
  --spacing-1: var(--spacing-component-gap-xs);
  --spacing-2: var(--spacing-component-gap-sm);
  --spacing-3: var(--spacing-component-gap-md);
  --spacing-4: var(--spacing-component-gap-lg);
  --spacing-6: var(--spacing-component-gap-xl);
  --spacing-8: var(--spacing-component-padding-lg);
}

/* Light-first base, with dark overrides via html.dark */
:root {
  color-scheme: light;
}

body {
  background-color: var(--color-bg-app);
  color: var(--color-text);
}

html.dark {
  color-scheme: dark;
}

/* Cards and surfaces */
.card {
  border-radius: var(--radius-card);
  border-width: 1px;
  border-style: solid;
  background-color: var(--color-card);
  color: var(--color-text);
  border-color: var(--color-border);
  box-shadow: var(--shadow-xs);
}

.card-interactive {
  border-radius: var(--radius-card);
  border-width: 1px;
  border-style: solid;
  background-color: var(--color-card);
  color: var(--color-text);
  border-color: var(--color-border);
  box-shadow: var(--shadow-xs);
  transition-property: all;
  transition-duration: 200ms;
  cursor: pointer;
}

.card-interactive:hover {
  box-shadow: var(--shadow-md);
}

/* Text utilities */
.text-secondary {
  color: var(--color-text-secondary);
}
.text-muted {
  color: var(--color-text-muted);
}

/* ===================== */
/* Semantic Utility Classes */
/* ===================== */

/* Loading/Skeleton components */
.skeleton {
  @apply rounded animate-pulse;
  /* Theme-specific colors defined in light.css and dark.css */
}

/* Form inputs with theme support */
.input-primary {
  @apply block w-full rounded-md border px-3 py-2 shadow-sm transition-colors;
  /* Theme-specific colors defined in light.css and dark.css */
}

/* Alert/notification backgrounds */
.error-bg {
  @apply rounded-md p-3;
  /* Theme-specific colors defined in light.css and dark.css */
}

.error-text {
  /* Theme-specific colors defined in light.css and dark.css */
}

.success-bg {
  @apply rounded-md p-3;
  /* Theme-specific colors defined in light.css and dark.css */
}

.success-text {
  /* Theme-specific colors defined in light.css and dark.css */
}

/* Button variants */
.btn-outline {
  @apply inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors border;
  /* Theme-specific colors defined in light.css and dark.css */
}

/* Focus utilities */
.focus-primary {
  @apply transition-all duration-200;
  /* Theme-specific focus styles defined in light.css and dark.css */
}

/* Loading overlay */
.loading-overlay {
  @apply fixed inset-0 z-50 flex items-center justify-center;
  /* Theme-specific colors defined in light.css and dark.css */
}

/* Text color utilities using theme tokens */
.text-primary {
  color: var(--color-primary);
}

.text-success {
  color: var(--color-success);
}

.text-warning {
  color: var(--color-warning);
}

.text-danger {
  color: var(--color-danger);
}

.text-info {
  color: var(--color-info);
}

/* Background utilities using theme tokens */
.bg-surface {
  background-color: var(--color-bg-surface);
}

.bg-app {
  background-color: var(--color-bg-app);
}

/* Border utilities */
.border-primary {
  border-color: var(--color-primary);
}

.border-muted {
  border-color: var(--color-border);
}

/* Foreground/Background utilities (replaces bg-black/white, text-black/white) */
.bg-foreground {
  background-color: var(--color-foreground);
}
.bg-background {
  background-color: var(--color-background);
}
.text-foreground {
  color: var(--color-foreground);
}
.text-background {
  color: var(--color-background);
}

/* Additional semantic utilities */
.bg-card { background-color: var(--color-card); }
.border-border { border-color: var(--color-border); }
.text-muted-foreground { color: var(--color-text-muted); }
.bg-muted { background-color: color-mix(in oklab, var(--color-bg-surface) 85%, var(--color-foreground) 15%); }

/* Theme-aware utility classes */
.bg-theme-surface { background-color: var(--color-bg-surface); }
.bg-theme-app { background-color: var(--color-bg-app); }
.text-theme-primary { color: var(--color-text); }
.text-theme-secondary { color: var(--color-text-secondary); }
.text-theme-muted { color: var(--color-text-muted); }

/* Semantic muted background utilities */
.bg-success-muted { background-color: var(--color-success-muted); }
.bg-warning-muted { background-color: var(--color-warning-muted); }
.bg-danger-muted { background-color: var(--color-danger-muted); }
.bg-info-muted { background-color: var(--color-info-muted); }

/* Glass effect utilities */
.glass-card { 
  background-color: var(--glass-card);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}
.glass-modal {
  background-color: var(--glass-modal);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
}

/* App background layers */
.page-backdrop { position: fixed; inset: 0; z-index: -1; background: var(--gradient-shell-radial); }

/* Header/footer gradient utility */
.bg-app-header { background: var(--gradient-header-linear); }

/* Gradient utilities */
.bg-gradient-subtle {
  background: var(--gradient-subtle);
}
.bg-gradient-surface {
  background: var(--gradient-surface);
}
.bg-gradient-primary {
  background: var(--gradient-primary);
}
.bg-gradient-accent {
  background: var(--gradient-accent);
}
.bg-gradient-shell-radial {
  background: var(--gradient-shell-radial);
}
.bg-gradient-header-linear {
  background: var(--gradient-header-linear);
}

/* Primary button - tokenized */
.btn-primary {
  @apply inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors;
  background-image: var(--btn-primary-bg, none);
  background-color: var(--btn-primary-bg-color, var(--color-primary));
  color: var(--btn-primary-fg);
  border: 1px solid var(--btn-primary-border, transparent);
}
.btn-primary:hover {
  background-color: var(--btn-primary-bg-hover, var(--color-primary-hover));
}
.btn-primary:active {
  background-color: var(--btn-primary-bg-active, var(--color-primary-active));
}
.btn-primary:focus-visible {
  outline: none;
  box-shadow: var(--shadow-focus);
}

/* Secondary, ghost, destructive, success buttons */
.btn-secondary {
  @apply inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors;
  background-color: var(--btn-secondary-bg, transparent);
  color: var(--btn-secondary-fg, var(--color-text));
  border: 1px solid var(--btn-secondary-border, var(--color-border));
}
.btn-secondary:hover {
  background-color: var(--btn-secondary-bg-hover, color-mix(in oklab, var(--color-bg-surface) 85%, white 15%));
}
.btn-ghost {
  @apply inline-flex items-center justify-center rounded-md px-3 py-2 text-sm font-medium transition-colors;
  background-color: transparent;
  color: var(--btn-ghost-fg, var(--color-text-secondary));
}
.btn-ghost:hover {
  background-color: color-mix(in oklab, var(--color-bg-surface) 80%, black 20%);
}
.btn-destructive {
  @apply inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors;
  background-color: var(--color-danger);
  color: var(--btn-destructive-fg, var(--color-text));
}
.btn-success {
  @apply inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors;
  background-color: var(--color-success);
  color: var(--btn-destructive-fg, var(--color-text));
}

/* Link styles with primary accent */
.link-primary {
  @apply underline-offset-4 transition-colors;
  color: var(--color-primary);
}
.link-primary:hover {
  color: var(--color-primary-hover);
}

/* Section spacing */
.section {
  @apply py-6 md:py-8;
}
.container-default {
  @apply w-full mx-auto;
  /* Mobile-first with safe area handling and viewport protection */
  max-width: min(theme(maxWidth.7xl), calc(100vw - 2rem));
  padding-left: max(1rem, env(safe-area-inset-left));
  padding-right: max(1rem, env(safe-area-inset-right));
}

/* Enhanced responsive breakpoints for container */
@media (min-width: 640px) {
  .container-default {
    padding-left: max(1.5rem, env(safe-area-inset-left));
    padding-right: max(1.5rem, env(safe-area-inset-right));
    max-width: min(theme(maxWidth.7xl), calc(100vw - 3rem));
  }
}

@media (min-width: 768px) {
  .container-default {
    padding-left: max(1.5rem, env(safe-area-inset-left));
    padding-right: max(1.5rem, env(safe-area-inset-right));
    max-width: min(theme(maxWidth.7xl), calc(100vw - 3rem));
  }
}

@media (min-width: 1024px) {
  .container-default {
    padding-left: max(2rem, env(safe-area-inset-left));
    padding-right: max(2rem, env(safe-area-inset-right));
    max-width: theme(maxWidth.7xl);
  }
}

/* Mobile-responsive utilities */
.mobile-table-container {
  @apply overflow-x-auto;
  min-width: 100%;
  scrollbar-width: thin;
  scrollbar-color: var(--color-border) transparent;
}

.mobile-table-container::-webkit-scrollbar {
  height: 4px;
}

.mobile-table-container::-webkit-scrollbar-track {
  background: transparent;
}

.mobile-table-container::-webkit-scrollbar-thumb {
  background-color: var(--color-border);
  border-radius: 4px;
}

.mobile-table {
  @apply min-w-max w-full;
}

/* Prevent horizontal overflow on mobile */
@media (max-width: 640px) {
  .grid {
    min-width: 0;
  }
  
  .flex {
    min-width: 0;
  }
  
  /* Mobile-safe grid system to prevent content bleeding */
  .mobile-safe-grid {
    min-width: 0;
    max-width: 100%;
    overflow-x: hidden;
  }
  
  /* Enhanced grid gap safety for mobile cards */
  .grid[class*="gap-"] {
    gap: max(0.75rem, var(--grid-gap-mobile, 0.75rem));
  }
  
  /* Ensure all grid items respect container bounds */
  .grid > * {
    min-width: 0;
    max-width: 100%;
  }
  
  /* Ensure text truncates properly on mobile */
  .mobile-truncate {
    @apply truncate;
    max-width: 0;
    min-width: 0;
    flex: 1;
  }
  
  /* Mobile-first gap adjustments for cards */
  .mobile-grid {
    @apply grid gap-2;
  }
  
  @media (min-width: 640px) {
    .mobile-grid {
      gap: 0.75rem;
    }
  }
  
  @media (min-width: 768px) {
    .mobile-grid {
      gap: 1rem;
    }
  }
}

/* Reduce motion respect */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.001ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.001ms !important;
    scroll-behavior: auto !important;
  }
}

/* ===================== */
/* Liquid Glass utilities */
/* ===================== */
.glass-surface {
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  background:
    radial-gradient(1200px 600px at 20% -10%, var(--glass-highlight) 0%, transparent 60%),
    radial-gradient(800px 400px at 110% 0%, var(--glass-accent) 0%, transparent 60%),
    color-mix(in oklab, var(--color-bg-surface) 85%, var(--color-foreground) 15%);
  border: 1px solid color-mix(in oklab, var(--color-border) 70%, var(--glass-border-mix));
  box-shadow: var(--shadow-sm);
}

.glass-header {
  backdrop-filter: blur(14px);
  -webkit-backdrop-filter: blur(14px);
  background:
    linear-gradient(180deg, var(--glass-highlight) 0%, transparent 100%),
    color-mix(in oklab, var(--color-bg-surface) 70%, var(--color-foreground) 30%);
  border-bottom: 1px solid color-mix(in oklab, var(--color-border) 70%, var(--glass-border-mix));
}

.glass-footer {
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  background:
    linear-gradient(0deg, var(--glass-highlight) 0%, transparent 100%),
    color-mix(in oklab, var(--color-bg-surface) 70%, var(--color-foreground) 30%);
  border-top: 1px solid color-mix(in oklab, var(--color-border) 70%, var(--glass-border-mix));
}

.glass-hairline {
  border: 1px solid color-mix(in oklab, var(--color-border) 70%, var(--glass-border-mix));
}

.bg-horizon {
  background: var(--gradient-shell-radial);
}

/* Removed legacy Horizon_wow theme block. Tokens now provided via:
   - src/styles/tokens/base.css
   - src/styles/tokens/calmdark.css
   - src/styles/tokens/bolddark.css
   - src/styles/tokens/playfuldark.css
*/

/* ===================== */
/* Mobile-Optimized Wellness Modal Slider Styles */
/* ===================== */

/* Mobile-optimized slider styles for wellness input */
.slider-primary::-webkit-slider-thumb {
  appearance: none;
  height: 24px;
  width: 24px;
  border-radius: 50%;
  background: var(--color-primary);
  cursor: pointer;
  border: 2px solid var(--color-bg-surface);
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.slider-primary::-moz-range-thumb {
  height: 24px;
  width: 24px;
  border-radius: 50%;
  background: var(--color-primary);
  cursor: pointer;
  border: 2px solid var(--color-bg-surface);
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

/* Track styling for webkit browsers */
.slider-primary::-webkit-slider-track {
  height: 12px;
  border-radius: 6px;
  background: var(--color-border);
}

.slider-primary::-moz-range-track {
  height: 12px;
  border-radius: 6px;
  background: var(--color-border);
  border: none;
}

/* Larger touch targets for mobile */
@media (max-width: 768px) {
  .slider-primary::-webkit-slider-thumb {
    height: 28px;
    width: 28px;
  }
  
  .slider-primary::-moz-range-thumb {
    height: 28px;
    width: 28px;
  }

  .slider-primary::-webkit-slider-track {
    height: 14px;
    border-radius: 7px;
  }

  .slider-primary::-moz-range-track {
    height: 14px;
    border-radius: 7px;
  }
}
